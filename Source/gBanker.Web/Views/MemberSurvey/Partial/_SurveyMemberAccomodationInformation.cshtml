@model gBanker.Web.ViewModels.SurveyMemberMasterViewModel
@{
    var IsOwnHomeList = Model == null ? null : Model.IsOwnHomeList;
    var IsRentPaymentRegularList = Model == null ? null : Model.IsRentPaymentRegularList;
    var IsUseRentalMemberForLoanPurposeList = Model == null ? null : Model.IsUseRentalMemberForLoanPurposeList;

}


<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal content-padding">
        <div>


            <div class="row">
                <div class="form-group">
                    <label class="control-label col-md-2 required">SurveyCode</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.SurveyCode, new { @class = "form-control required", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(model => model.IsOwnHome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.IsOwnHome, IsOwnHomeList, new { @class = "form-control" })
                    </div>

                    <label class="control-label col-md-2" for="ResidenceAddress">Residence Address</label>
                    <div class="col-md-4">
                        <textarea class="from-control" rows="2" cols="50" id="ResidenceAddress"></textarea>
                        @Html.ValidationMessageFor(model => model.ResidenceAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            
            <div class="row">
                <div class="form-group">
                    <label class="control-label col-md-2 for=" ResideFrom"">Reside From</label>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.ResideFrom, new { @class = "form-control required" })
                    </div>
                    
                    <label class="control-label col-md-2 for=" ResideTo"">Reside To</label>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.ResideTo, new { @class = "form-control required" })
                    </div>
                </div>
            </div>
            

            
            <div class="row">
                <div class="form-group">
                    <label class="control-label col-md-2" for="HomeOwnerName">Home Owner Name</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.HomeOwnerName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HomeOwnerName, "", new { @class = "text-danger" })
                    </div>

                    @*<label class="control-label col-md-2" for="ResidenceAddress">Residence Address</label>
                    <div class="col-md-4">
                        <textarea class="from-control" rows="2" cols="50" id="ResidenceAddress"></textarea>
                        @Html.ValidationMessageFor(model => model.ResidenceAddress, "", new { @class = "text-danger" })
                    </div>*@

                    
                    @Html.LabelFor(model => model.IsRentPaymentRegular, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.IsRentPaymentRegular, IsRentPaymentRegularList, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            
            <div class="row">
                <div class="form-group">
                    

                    @Html.LabelFor(model => model.IsUseRentalMemberForLoanPurpose, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.IsUseRentalMemberForLoanPurpose, IsUseRentalMemberForLoanPurposeList, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            

        </div>
    </div>
</div>