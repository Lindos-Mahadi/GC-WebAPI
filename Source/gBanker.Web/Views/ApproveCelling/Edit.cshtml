@model gBanker.Web.ViewModels.ApproveCellingViewModel

@{
    ViewBag.Title = "ApproveCelling Create";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
    var member = ViewBag.MemberName as string;
    var producttype = Model == null ? null : Model.producttype;
    var roleList = Model == null ? null : Model.roleList;
    var productlist = Model == null ? null : Model.productlist;
}



<script type="text/javascript">
    $(document).ready(function () {

        $("#RoleID").change(function () {
            var ddlValue = $("#RoleID option:selected").text();
            $("#RoleName").val(ddlValue);
        });
        $("#CreateDate").datepicker();
    });


</script>

@Html.ActionLink("Back to List", "Index", null, new { @class = "pull-right" })

<h2 class="page-title">Add ApproveCelling</h2>
@using (Html.BeginForm("Edit", "ApproveCelling", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="">


        @*   @Html.ValidationSummary(true, "", new { @class = "text-danger" })*@




        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.ApproveCellingID, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApproveCellingID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApproveCellingID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.RoleID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.RoleID, roleList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.RoleName)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MinRange, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.MinRange, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinRange, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MaxRange, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.MaxRange, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaxRange, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProdType, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.ProdType, producttype, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProdType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
          <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.ProductId, productlist, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="form-group form-action">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")

}