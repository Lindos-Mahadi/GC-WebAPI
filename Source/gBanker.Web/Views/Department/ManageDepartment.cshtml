@model gBanker.Web.ViewModels.DepartmentViewModel

@{
    ViewBag.Title = "Manage Department";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
    <link href="~/Content/jtable-custom.css" rel="stylesheet" />
}
<style type="text/css">
    th {
        height: 40px;
        vertical-align: top;
        margin-top: 0px !important;
        padding-top: 0px !important;
    }

    span.jtable-column-header-text {
        margin-top: 0px !important;
    }
</style>


<script type="text/javascript">

    //Save Work Area
    function UpdateDepartment() {
       // alert("Update");
        var DepartmentName = $("#DepartmentName").val();
        var DepartmentID = $("#DepartmentID").val();

        alert(DepartmentID);

        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("UpdateDepartment", "Department", "http")', 
            data: { DepartmentID: DepartmentID, DepartmentName: DepartmentName},
            dataType: 'json',
            async: true,
            success: function (data) {
                $.alert.open("Message", "Data Update Successfully");

                $('#grid2').jtable('load', { filterColumn: $('#filterColumn').val(), filterValue: $('#filterValue').val() });
            },
            error: function (request, status, error) {
                $.alert.open("Message", "Data Not Update");

                $('#grid2').jtable('load', { filterColumn: $('#filterColumn').val(), filterValue: $('#filterValue').val() });
            }

        });

    }// End of Function


    //Save Work Area
    function SaveDepartment() {

        var DepartmentName = $("#DepartmentName").val();

        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("CreateDepartment", "Department", "http")', //CreateWorkArea(string WorkAreaName)
            data: { DepartmentName: DepartmentName },
            dataType: 'json',
            async: true,
            success: function (data) {
                $.alert.open("Message", "Data Saved Successfully");

                $('#grid2').jtable('load', { filterColumn: $('#filterColumn').val(), filterValue: $('#filterValue').val() });
            },
            error: function (request, status, error) {
                $.alert.open("Message", "Data Not Saved");

                $('#grid2').jtable('load', { filterColumn: $('#filterColumn').val(), filterValue: $('#filterValue').val() });
            }

        });

    }// End of Function



    //Promotion Config JS
    function GetDataDepartment(DepartmentID) {
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetDepartmentList", "Department", "http")',
            data: { DepartmentID: DepartmentID, jtStartIndex: 1, jtPageSize: 5, jtSorting: true, filterColumn: null, filterValue: null },
            dataType: 'json',
            async: true,
            success: function (data) {
                $.each(data, function (id, option) {
                    $('#DepartmentName').val(option.DepartmentName);
                    $('#DepartmentID').val(option.DepartmentID);
                });
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
                clear();
            }
        });
    }
    function clear()
    {
        $("#DepartmentName").val('');
        $("#DepartmentID").val('');
    }
    //Delete Department
    function DeleteDepartment(DepartmentID) {

        var DepartmentName = $("#DepartmentName").val();

        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("DeleteDepartment", "Department", "http")', 
            data: { DepartmentID: DepartmentID },
            dataType: 'json',
            async: true,
            success: function (data) {
                $.alert.open("Message", "Data Delete Successfully");
                clear();
                $('#grid2').jtable('load', { filterColumn: $('#filterColumn').val(), filterValue: $('#filterValue').val() });
            },
            error: function (request, status, error) {
                $.alert.open("Message", "Department Is Used Somewhere ");
                clear();
                $('#grid2').jtable('load', { filterColumn: $('#filterColumn').val(), filterValue: $('#filterValue').val() });
            }

        });



    }// End of Function


    function Edit(id)
    {
        GetDataDepartment(id);

    }

    function Delete(id)
    {

        $.alert.open('confirm', 'Are you sure you want to delete this record?', function (button) {
            if (button == 'yes') {
                DeleteDepartment(id);
                return true;
            }
            else {

                return false;
            }
        });

    }

    //End Save Work Area

    $(document).ready(function () {


        $('#DepartmentName').on('keyup keypress', function (e) {
            var keyCode = e.keyCode || e.which;
            if (keyCode === 13) {
                e.preventDefault();
                return false;
            }
        });




        $("#btnReset").click(function () {

            $("#DepartmentName").val('');
            $("#DepartmentID").val('');

        });

        $("#btnDepartmentSave").click(function () {

            var name = $("#DepartmentName").val();
            var id = $("#DepartmentID").val();
            if (name == '')
            {
                $.alert.open("Please Give Department Name.");
                return false;
            }
            if (id != 0)
            {
                // Update
                UpdateDepartment();
                clear();
            }
            else
            {
                // Save
                SaveDepartment();
                clear();
            }

        });

        $('#grid2').jtable({
            paging: true,
            pageSize: 5,
            sorting: false,
            defaultSorting: 'Name ASC',
            actions: {
                listAction: '/Department/GetDepartmentList'
            },
            fields: {
                RowSl: {
                    title: 'SI No',
                    width: '10%'
                },
                DepartmentID: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                DepartmentName: {
                    title: 'Department',
                    width: '80%'
                },
                EditLink: {
                    title: "Edit",
                    sorting: false,
                    display: function (data) {
                        return '<div class="text-center"><a href="#" OnClick="Edit(' + data.record.DepartmentID + ')"><i class="fa fa-pencil-square-o"></i></a></div>';
                    }
                },
                DeleteLink: {
                    title: "Delete",
                    display: function (data) {
                        return '<div class="text-center"><a href="#" OnClick="Delete(' + data.record.DepartmentID + ');"><i class="fa fa-trash-o"></i></a></div>';
                    }
                }
            }
        });
        reloadGrid2();
        //$('#grid').jtable('load');
        $("#filterColumn").change(function () {
            if ($(this).val() === "ViewAll") {
                $("#filterValue").val('');
            }
        });

        function reloadGrid2() {
            //$("#loading").show();
            $('#grid2').jtable('load', { filterColumn: $('#filterColumn').val(), filterValue: $('#filterValue').val() });
            //$("#loading").hide();
        }





    });// End Document Rready
</script>

<h2 class="page-title">Department </h2>
&nbsp;

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-4 required" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Department Name" } })
                            @Html.HiddenFor(model => model.DepartmentID)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        <div class="form-group form-action" style="padding:10px;margin:5px;">
                            &nbsp;
                            <input type="button" value="Save" id="btnDepartmentSave" class="btn btn-success" />
                            &nbsp;
                            <input type="button" value="Reset" id="btnReset" class="btn btn-facebook" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    &nbsp;
                </div>
                &nbsp;
                <div id="grid2">

                </div>

            </div>
        </div>


    </div>
}


@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jtable")
}