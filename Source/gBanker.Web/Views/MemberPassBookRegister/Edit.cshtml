@model gBanker.Web.ViewModels.MemberPassBookRegisterViewModel

@{
    ViewBag.Title = "MemberPassBookRegister Edit";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";

    var office = Model == null ? null : Model.officeListItems;
    var center = Model == null ? null : Model.centerListItems;

    var member = ViewBag.MemberName as string;
    var officeName = office.Where(o => o.Value == Model.OfficeID.ToString()).FirstOrDefault().Text;
    var centerName = center.Where(o => o.Value == Model.CenterID.ToString()).FirstOrDefault().Text;
    var vlotNo = Model == null ? null : Model.LotListItems;
    var vStatusNo = Model == null ? null : Model.StatusListItems;

}


<script type="text/javascript">
    $body = $("body");
    function SetTRxid(value) {
        var ddlValue1 = $("#TransType option:selected").val();
        $("#hftrxType").val(ddlValue1);
    }
    function SetProductid(value) {

        var ddlValue = $("#ProductID option:selected").val();
        $("#hfProdId").val(ddlValue);

    }


    $(document).ready(function () {

        $("#PassBookStartDate").datepicker(
           {
               dateFormat: "dd-M-yy",
               showAnim: "scale"
           });


        $("#memberAutoComplete").blur(function () {
            var member = $("#memberAutoComplete").val();
            ///function

            if (member.length > 0) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetMemberList", "MemberPassBookRegister", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { memberid: member, centerId: $("#CenterID").val() },
                    minLength: 1,
                    success: function (data) {
                        // alert(data.length);
                        if (data.length == 1) {
                            $("#memberAutoComplete").val(data[0].MemberName);
                            $("#MemberID").val(data[0].MemberID);
                           
                        }
                        else if (data.length == 0) {
                            alert("No member found.");
                            $("#MemberID").val("");

                        }
                        else {
                            alert("More than one member found with the given Member code.");
                            $("#MemberID").val("");
                        }
                    }
                });
            }
        });
        $("#memberAutoComplete").autocomplete({
            source: function (request, response) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetMemberList", "MemberPassBookRegister", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { memberid: request.term, centerId: $("#CenterID").val() },
                    minLength: 1,
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.MemberID,
                                label: item.MemberName
                            };
                            //response(data);
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            },
            focus: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                $("#MemberID").val(ui.item.value);
                return false;
            },
            change: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                $("#MemberID").val(ui.item.value);
                return false;
            }
        });
    });


</script>

<script type="text/javascript">
    $(document).ready(function () {
     //   $("#ApproveDate").datepicker();
        gBankerDatePicker("ApproveDate");

    });




</script>

@Html.ActionLink("Back to List", "Index", null, new { @class = "pull-right" })

<h2 class="page-title">Edit MemberPassBookRegister</h2>

@using (Html.BeginForm("Edit", "MemberPassBookRegister", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group" style="display :none">
            @Html.LabelFor(model => model.MemberPassBookRegisterID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberPassBookRegisterID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MemberPassBookRegisterID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.OfficeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.OfficeID, office, new { @class = "form-control", @readonly = true })
                    @Html.ValidationMessageFor(model => model.OfficeID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.OfficeID, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.TextBox("txtOficeName", officeName, new { @class = "form-control", @readonly = true })
                    @Html.HiddenFor(model => model.OfficeID)
                    @*@Html.ValidationMessageFor(model => model.OfficeID, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CenterID, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.TextBox("txtCenterName", centerName, new { @class = "form-control", @readonly = true })
                    @Html.HiddenFor(model => model.CenterID)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Member", htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.TextBox("memberAutoComplete", member, new { @class = "form-control" })
                    @Html.HiddenFor(model => model.MemberID)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LotNo, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>
                    @Html.DropDownListFor(model => model.LotNo, vlotNo, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.LotNo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MemberPassBookNO, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.EditorFor(model => model.MemberPassBookNO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MemberPassBookNO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.PassBookStartDate, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>
                    @Html.EditorFor(model => model.PassBookStartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PassBookStartDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>
                    @Html.DropDownListFor(model => model.Status, vStatusNo, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
            </div>
        </div>

        <div class="form-group">
            <div class="form-group form-action">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/gbUtility")
}