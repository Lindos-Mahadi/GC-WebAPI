@model gBanker.Web.ViewModels.FixedAssetViewModel

@{
    ViewBag.Title = "Supplier Info Entry";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}


<script>
    $(document).ready(function () {
        $("#btnUpdate").hide();
        $("#btnReset").hide();
        GetClientInfo();

        //$("#AssetClientCode").blur(function () {
        //    var clientCode = $("#s").val();
        //    if (clientCode!="") {
        //        GetClientInfo();
        //    } else {
        //        $.alert.open("Alert", "Please type Client Code");
        //    }
        //});
        $("#btnReset").click(function () {
            ClearForm();
            $("#btnUpdate").hide();
            $("#btnReset").hide();
            $("#btnSave").show();
        });

    });
    

    function SaveClientInformation() {
        debugger;
        //var clientCode = $("#AssetClientCode").val();
        var clientName = $("#AssetClientName").val();
        var clientType = $("#ClientType").val();
        var clientAddress = $("#AssetClientAddress").val();
        var busLicNo = $("#BusLicNo").val();
        var vatRegistrationNo = $("#VATRegistrationNo").val();
        var corporateStatus = $("#CorporateStatus").val();
        var businessExperience = $("#BusinessExperience").val();
        var TIN = $("#TIN").val();
        var phone = $("#Phone").val();
        var email = $("#Email").val();
        var remarks = $("#Remarks").val();
        if (clientName != "" && clientType != "" && clientAddress != "" && busLicNo != "" && TIN!="" && phone != "" && email!="") {
            var AssetClientInfo = {
                //AssetClientCode: clientCode,
                AssetClientName: clientName,
                ClientType: clientType,
                AssetClientAddress: clientAddress,
                BusLicNo: busLicNo,
                VATRegistrationNo: vatRegistrationNo,
                CorporateStatus: corporateStatus,
                BusinessExperience: businessExperience,
                TIN: TIN,
                Phone: phone,
                Email: email,
                Remarks: remarks
            }
            $.ajax({
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("SaveClientInformation", "FixedAsset", "http")',
                data: JSON.stringify({ AssetClientInfo: AssetClientInfo }),
                dataType: 'json',
                async: true,
                success: function (data) {
                    if (data.result == 1) {
                        $.alert.open("Success", data.message);
                        GetClientInfo();
                        ClearForm();
                    } else {
                        $.alert.open("Error", data.message);
                        ClearForm();
                    }
                }

            });
        }
        else {
            $.alert.open("Error", "Please insert required field");
        }
    }
    function ClearForm() {
        //$("#AssetClientCode").val('');
        $("#AssetClientName").val('');
        $("#ClientType").val('');
        $("#AssetClientAddress").val('');
        $("#BusLicNo").val('');
        $("#VATRegistrationNo").val('');
        $("#CorporateStatus").val('');
        $("#BusinessExperience").val('');
        $("#TIN").val('');
        $("#Phone").val('');
        $("#Email").val('');
        $("#Remarks").val('');
    }
    function GetClientInfo() {
        $('#grid').jtable({
            paging: true,
            pageSize: 10,
            sorting: true,
            actions: {
                listAction: function (postData, jtParams) {
                    return $.Deferred(function ($dfd) {
                       // var assetClientCode = $("#AssetClientCode").val();
                        $.ajax({
                            url: '/FixedAsset/GetClientInfo?jtStartIndex=' + jtParams.jtStartIndex + '&jtPageSize=' + jtParams.jtPageSize + '&jtSorting=' + jtParams.jtSorting,   //+ '&AssetClientCode=' + assetClientCode
                            type: 'POST',
                            dataType: 'json',
                            data: postData,
                            success: function (data) {
                                $dfd.resolve(data);

                            },
                            error: function () {
                                $dfd.reject();
                            }
                        });
                    });
                }

            },
            fields: {
                AssetClientInfoID: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                //AssetClientCode: {
                //    width: '10%',
                //    title: 'SupplierCode'
                //},
                //ClientType: {
                //    width: '10%',
                //    title: 'ClientType'
                //},
                AssetClientName: {
                    width: '10%',
                    title: 'Name'
                },
                AssetClientAddress: {
                    width: '10%',
                    title: 'Address',
                },
                BusLicNo: {
                    width: '10%',
                    title: 'TradeLicenseNo'
                },
                VATRegistrationNo:{
                    width: '10%',
                    title: 'VATRegNo'
                },
                CorporateStatus:{
                    width: '10%',
                    title: 'CorporateStatus'
                },
                BusinessExperience:{
                    width: '10%',
                    title: 'BusExp(Years)'
                },
                TIN: {
                    width: '10%',
                    title: 'TIN'
                },
                Phone: {
                    width: '10%',
                    title: 'Phone'
                },
                Email: {
                    width: '10%',
                    title: 'Email'
                },
                Remarks: {
                    width: '10%',
                    title: 'Remarks'
                },
                EditLink: {
                    title: "Edit",
                    width: '5%',
                    sorting: false,
                    display: function (data) {
                        return '<div class="text-center"><a href="#" OnClick="EditClientInfo( ' + data.record.AssetClientInfoID + ',' + "'" + data.record.ClientType + "'" + ',' + "'" + data.record.AssetClientName + "'" + ',' + "'" + data.record.AssetClientAddress + "'" + ',' + "'" + data.record.BusLicNo + "'" + ',' + "'" + data.record.VATRegistrationNo + "'" +
                            ',' + "'" + data.record.CorporateStatus + "'" + ',' + "'" + data.record.BusinessExperience + "'" + ',' + "'" + data.record.TIN + "'" + ',' + "'" + data.record.Phone + "'" + ',' + "'" + data.record.Email + "'" + ',' + "'" + data.record.Remarks + "'" + ' );"><i class="fa fa-pencil-square-o"></i></a></div>';
                    }

                },
                Delete: {
                    title: "Delete",
                    width: '5%',
                    display: function (data) {
                        return '<div class="text-center"><a href="#" OnClick="DeleteClientInfo(' + data.record.AssetClientInfoID + ');"><i class="fa fa-trash-o"></i></a></div>';
                    }
                }
            }

        });
        $('#grid').jtable('load');
    }

    function EditClientInfo(AssetClientInfoID, ClientType, AssetClientName, AssetClientAddress, BusLicNo, VATRegistrationNo, CorporateStatus, BusinessExperience, TIN, Phone, Email, Remarks) {
        debugger;
        $("#AssetClientInfoID").val(AssetClientInfoID);
        //$("#AssetClientCode").val(AssetClientCode);
        $("#ClientType").val(ClientType);
        $("#AssetClientName").val(AssetClientName);
        $("#AssetClientAddress").val(AssetClientAddress);
        $("#BusLicNo").val(BusLicNo);
        $("#VATRegistrationNo").val(VATRegistrationNo);
        $("#CorporateStatus").val(CorporateStatus);
        $("#BusinessExperience").val(BusinessExperience);
        $("#TIN").val(TIN);
        $("#Phone").val(Phone);
        $("#Email").val(Email);
        $("#Remarks").val(Remarks);

        $("#btnUpdate").show();
        $("#btnReset").show();
        $("#btnSave").hide();
    }
    function UpdateClientInformation() {
        var assetClientInfoID = $("#AssetClientInfoID").val();
        //var clientCode = $("#AssetClientCode").val();
        var clientName = $("#AssetClientName").val();
        var clientType = $("#ClientType").val();
        var clientAddress = $("#AssetClientAddress").val();
        var busLicNo = $("#BusLicNo").val();
        var vatRegistrationNo = $("#VATRegistrationNo").val();
        var corporateStatus = $("#CorporateStatus").val();
        var businessExperience = $("#BusinessExperience").val();
        var TIN = $("#TIN").val();
        var phone = $("#Phone").val();
        var email = $("#Email").val();
        var remarks = $("#Remarks").val();
        if (clientName != "" && clientType != "" && clientAddress != "" && busLicNo != "") {
            var AssetClientInfo = {
                AssetClientInfoID: assetClientInfoID,
                //AssetClientCode: clientCode,
                AssetClientName: clientName,
                ClientType: clientType,
                AssetClientAddress: clientAddress,
                BusLicNo: busLicNo,
                VATRegistrationNo: vatRegistrationNo,
                CorporateStatus: corporateStatus,
                BusinessExperience: businessExperience,
                TIN: TIN,
                Phone: phone,
                Email: email,
                Remarks: remarks
            }
            $.ajax({
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("UpdateClientInformation", "FixedAsset", "http")',
                data: JSON.stringify({ AssetClientInfo: AssetClientInfo }),
                dataType: 'json',
                async: true,
                success: function (data) {
                    if (data.result == 1) {
                        $.alert.open("Success", data.message);
                        GetClientInfo();
                        ClearForm();
                        $("#btnUpdate").hide();
                        $("#btnReset").hide();
                        $("#btnSave").show();
                    } else {
                        $.alert.open("Error", data.message);
                        ClearForm();
                    }
                }

            });
        }
        else {
            $.alert.open("Error", "Please insert required field");
        }
    }
    function DeleteClientInfo(AssetClientInfoID) {
        $.alert.open('confirm', 'Are you sure you want to delete this record?', function (button) {
            if (button == 'yes') {
                $.ajax({
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("DeleteClientInfo", "FixedAsset", "http")',
                    data: { AssetClientInfoID: AssetClientInfoID },
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        if (data.result == 1) {
                            $.alert.open("Success", data.message);
                            $('#grid').jtable('load');
                        } else {
                            $.alert.open("Error", data.message);
                        }
                    },
                });
                return true;
            }
            else {
                hiddenField.value = 'false';
                return false;
            }
        });
    }


</script>


<h2 class="page-title">Supplier Info Entry</h2>
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.AssetClientInfoID)
    <div class="row">
        @*<div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Supplier Code <span style="color:red; font-size:15px;">*</span></label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.AssetClientCode, new { @class = "form-control" })
                </div>
            </div>
        </div>*@
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Supplier Type <span style="color:red; font-size:15px;">*</span></label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.ClientType, Model.ClientList, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Supplier Name <span style="color:red; font-size:15px;">*</span></label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.AssetClientName, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Supplier Address <span style="color:red; font-size:15px;">*</span></label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.AssetClientAddress, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Trade License No <span style="color:red; font-size:15px;">*</span></label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.BusLicNo, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">VAT Registration No.</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.VATRegistrationNo, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Corporate Status</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.CorporateStatus, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Business Experience (Years)</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.BusinessExperience, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">TIN <span style="color:red; font-size:15px;">*</span></label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.TIN, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Phone <span style="color:red; font-size:15px;">*</span></label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Email <span style="color:red; font-size:15px;">*</span></label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                </div>                
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Remarks</label>
                <div class="col-sm-7">
                    @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <div class="row">
        <div class="col-sm-offset-4">
            <input type="button" value="Save" id="btnSave" class="btn btn-primary" onclick="SaveClientInformation()" />
            <input type="button" value="Update" id="btnUpdate" class="btn btn-primary" onclick="UpdateClientInformation()" />
            <input type="button" value="Reset" id="btnReset" class="btn btn-primary" />
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-12">
        <div id="grid"></div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/gbUtility")
    @Scripts.Render("~/bundles/jtable")
}
