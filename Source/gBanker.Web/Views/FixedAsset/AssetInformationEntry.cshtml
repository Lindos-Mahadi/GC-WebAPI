@model gBanker.Web.ViewModels.FixedAssetViewModel

@{
    ViewBag.Title = "Asset Information Entry";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

<script>

    $(document).ready(function () {
        $("#btnUpdate").hide();
        $("#btnReset").hide();

        $("#GroupId").change(function () {
            var groupId = $("#GroupId").val();
            if (groupId != "") {
                $.ajax({
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("LoadGroupCodeWiseGroupName", "FixedAsset", "http")',
                    data: { GroupId: groupId },
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        debugger;
                        if (data.groupName != null) {
                            $("#GroupName").val(data.groupName);
                            $('#GroupName').attr('readonly', true);
                            $("#AssetName").val('');
                            $("#Depriciable").val('');
                            $("#DepriciationRate").val('');
                            $("#DepriciationMethod").val('');
                            GetGroupWiseAssetInfo();
                        } else {
                            $("#GroupName").val('');
                            $('#GroupName').attr('readonly', false);
                            $("#AssetName").val('');
                            $("#Depriciable").val('');
                            $("#DepriciationRate").val('');
                            $("#DepriciationMethod").val('');
                        }
                        if (data.nextAssetCode != null && data.nextAssetCode != 0) {
                            $("#AssetCode").val(data.nextAssetCode);
                            $('#AssetCode').attr('readonly', true);
                            $("#AssetName").val('');
                            $("#Depriciable").val('');
                            $("#DepriciationRate").val('');
                            $("#DepriciationMethod").val('');
                            GetGroupWiseAssetInfo();
                        } else {
                            $("#AssetCode").val('');
                            $('#AssetCode').attr('readonly', false);
                        }
                        if (data.nextAssetCode == 0) {
                            $.alert.open("Alert", "Under this Group Code, Asset Code is fully Stacked, Please select another Group Code for entry Asset Code");
                        }
                    }
                });
            } else {
                $("#GroupName").val('');
                $('#GroupName').attr('readonly', false);
                $("#AssetCode").val('');
                $('#AssetCode').attr('readonly', false);
            }

        });
        $("#Depriciable").change(function () {
            var isDepriciable = $("#Depriciable").val();
            if (isDepriciable == 1) {
                $("#DepriciationRate").attr('Disabled', false);
            }
            if (isDepriciable == 0) {
                $("#DepriciationRate").attr('Disabled', true);
            }
        });

        $("#btnReset").click(function () {
            $("#btnUpdate").hide();
            $("#btnReset").hide();
            $("#btnSave").show();
            ClearForm();
        });

    });


    function SaveAssetInformation() {
        var groupId = $("#GroupId").val();
        var groupName = $("#GroupName").val();
        var assetCode = $("#AssetCode").val();
        var assetName = $("#AssetName").val();
        var depriciable = $("#Depriciable").val();
        var depriciationRate = $("#DepriciationRate").val();
        var depriciationMethod = $("#DepriciationMethod").val();
        if (groupId != "" && assetCode != "" && assetName != "" && depriciable != "") {
            var obj = {
                GroupId: groupId,
                GroupName: groupName,
                AssetCode: assetCode,
                AssetName: assetName,
                Depriciable: depriciable == 1 ? 'true' : 'false',
                DepriciationRate: depriciationRate,
                DepriciationMethod: depriciationMethod
            }
            $.ajax({
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("SaveAssetInformation", "FixedAsset", "http")',
                data: JSON.stringify({ obj: obj }),
                dataType: 'json',
                async: true,
                success: function (data) {
                    if (data.result == 1) {
                        $.alert.open("Success", data.message);
                        GetGroupWiseAssetInfo();
                        ClearForm();
                    } else {
                        $.alert.open("Error", data.message);
                        ClearForm();
                    }
                }

            });
        }
        else {
            $.alert.open("Error", "Please insert required field");
        }
    }

    function ClearForm() {
        $("#GroupId").val('');
        $("#GroupName").val('');
        $("#AssetCode").val('');
        $("#AssetName").val('');
        $("#Depriciable").val('');
        $("#DepriciationRate").val('');
        $("#DepriciationMethod").val('');
    }
    function GetGroupWiseAssetInfo() {
        $('#grid').jtable({
            paging: true,
            pageSize: 10,
            sorting: true,
            actions: {
                listAction: function (postData, jtParams) {
                    return $.Deferred(function ($dfd) {
                        var groupId = $("#GroupId").val();
                        $.ajax({
                            url: '/FixedAsset/GetGroupWiseAssetInfo?jtStartIndex=' + jtParams.jtStartIndex + '&jtPageSize=' + jtParams.jtPageSize + '&jtSorting=' + jtParams.jtSorting + '&GroupId=' + groupId,
                            type: 'POST',
                            dataType: 'json',
                            data: postData,
                            success: function (data) {
                                $dfd.resolve(data);

                            },
                            error: function () {
                                $dfd.reject();
                            }
                        });
                    });
                }

            },
            fields: {
                AssetInfoID: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                GroupId:{
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                GroupName: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                AssetCode: {
                    width: '10%',
                    title: 'Asset Code'
                },
                AssetName: {
                    width: '10%',
                    title: 'Asset Name'
                },
                Depritiable: {
                    width: '10%',
                    title: 'Depritiable',
                    display: function (data) {
                        if (data.record.Depritiable == 1) {
                            return 'Yes';
                        }
                        else {
                            return 'No';
                        }
                    }
                },
                Deprate: {
                    width: '10%',
                    title: 'Deprate'
                },
                DepriciationMethod:{
                    width: '10%',
                    title: 'DepMethod',
                    display: function (data) {
                        if (data.record.DepriciationMethod == 1) {
                            return 'Straight Line';
                        }
                        else if (data.record.DepriciationMethod == 2) {
                            return 'Average';
                        }
                        else {
                            return '';
                        }
                    }
                },
                AssetGroupInfoCode: {
                    width: '10%',
                    title: 'Group Code'
                },
                EditLink: {
                    title: "Edit",
                    width: '5%',
                    sorting: false,
                    display: function (data) {
                        return '<div class="text-center"><a href="#" OnClick="EditAssetInfo( ' + data.record.AssetInfoID + ',' + "'" + data.record.GroupId + "'" + ',' + "'" + data.record.GroupName + "'" + ',' + "'" + data.record.AssetCode + "'" + ',' + "'" + data.record.AssetName + "'" + ',' + "'" + data.record.Depritiable + "'" + ',' + "'" + data.record.Deprate + "'" + ',' + "'" + data.record.DepriciationMethod + "'" + ');"><i class="fa fa-pencil-square-o"></i></a></div>';
                    }

                },
                //Delete: {
                //    title: "Delete",
                //    width: '5%',
                //    display: function (data) {
                //        return '<div class="text-center"><a href="#" OnClick="DeleteAssetInfo(' + data.record.AssetInfoID + ');"><i class="fa fa-trash-o"></i></a></div>';
                //    }
                //}
            }

        });
        $('#grid').jtable('load');
    }

    function EditAssetInfo(AssetInfoID,GroupId,GroupName, AssetCode, AssetName, Depritiable, Deprate, DepriciationMethod) {

        $("#AssetInfoID").val(AssetInfoID);
        $("#GroupId").val(GroupId).prop('disabled', true);
        $("#GroupName").val(GroupName);
        $("#AssetCode").val(AssetCode);
        $("#AssetName").val(AssetName);
        $("#Depriciable").val(Depritiable=='true'?1:0);
        $("#DepriciationRate").val(Deprate);
        $("#DepriciationMethod").val(DepriciationMethod);

        $("#btnUpdate").show();
        $("#btnReset").show();
        $("#btnSave").hide();
    }

    function UpdateAssetInformation() {
        var assetInfoId = $("#AssetInfoID").val();
        var groupId = $("#GroupId").val();
        var groupName = $("#GroupName").val();
        var assetCode = $("#AssetCode").val();
        var assetName = $("#AssetName").val();
        var depriciable = $("#Depriciable").val();
        var depriciationRate = $("#DepriciationRate").val();
        var depriciationMethod = $("#DepriciationMethod").val();
        if (groupId != "" && assetCode != "" && assetName != "") {
            var obj = {
                AssetInfoID: assetInfoId,
                GroupId: groupId,
                GroupName: groupName,
                AssetCode: assetCode,
                AssetName: assetName,
                Depriciable: depriciable == 1 ? 'true' : 'false',
                DepriciationRate: depriciationRate,
                DepriciationMethod: depriciationMethod
            }
            $.ajax({
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("UpdateAssetInformation", "FixedAsset", "http")',
                data: JSON.stringify({ obj: obj }),
                dataType: 'json',
                async: true,
                success: function (data) {
                    if (data.result == 1) {
                        $.alert.open("Success", data.message);
                        GetGroupWiseAssetInfo();
                        ClearForm();
                        $("#btnUpdate").hide();
                        $("#btnReset").hide();
                        $("#btnSave").show();
                        $("#GroupId").trigger('change').prop('disabled', false);
                        //$("#GroupId").html("<option value=''>Please Select</option>").prop('disabled', false);                       

                    } else {
                        $.alert.open("Error", data.message);
                        ClearForm();
                    }
                }

            });
        }
        else {
            $.alert.open("Error", "Please insert required field");
        }
    }

    function DeleteAssetInfo(AssetInfoID) {
        $.alert.open('confirm', 'Are you sure you want to delete this record?', function (button) {
            if (button == 'yes') {
                $.ajax({
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("DeleteAssetInfo", "FixedAsset", "http")',
                    data: { AssetInfoID: AssetInfoID },
                    dataType: 'json',
                    async: false,
                    success: function (data) {                        
                        if (data.result == 1) {
                            $.alert.open("Success", data.message);                            
                            $('#grid').jtable('load');
                            ClearForm();
                        } else {
                            $.alert.open("Error", data.message);
                        }
                    },
                });
                return true;
            }
            else {
                hiddenField.value = 'false';
                return false;
            }
        });
    }
   

</script>


<h2 class="page-title">Asset Information Entry</h2>
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.AssetInfoID)
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4 required">Group Code </label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.GroupId, Model.AssetCodeList, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4 required">Group Name </label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.GroupName, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4 required">Asset Code </label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.AssetCode, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4 required">Asset Name </label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.AssetName, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4 required">Depriciable </label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.Depriciable, Model.DepriciableList, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4 required">Depriciation Rate </label>
                <div class="col-sm-4">
                    @Html.TextBoxFor(model => model.DepriciationRate, new { @class = "form-control" })
                </div>
                <label style="font-size:20px;">%</label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4 required">Depriciation Method </label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.DepriciationMethod, Model.DepriciationMethodList, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <div class="row">
        <div class="col-sm-offset-4">
            <input type="button" value="Save" id="btnSave" class="btn btn-primary" onclick="SaveAssetInformation()" />
            <input type="button" value="Update" id="btnUpdate" class="btn btn-primary" onclick="UpdateAssetInformation()" />
            <input type="button" value="Reset" id="btnReset" class="btn btn-primary" />
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-12">
        <div id="grid"></div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/gbUtility")
    @Scripts.Render("~/bundles/jtable")
}
