@model gBanker.Web.ViewModels.FixedAssetViewModel

@{
    ViewBag.Title = "Asset User Entry";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

<script>
    $(document).ready(function () {
        GetClientCategory();
        $("#btnUpdate").hide();
        $("#btnReset").hide();

        $("#btnReset").click(function () {
            $("#ClientCategory").val('');
            $("#btnUpdate").hide();
            $("#btnReset").hide();
            $("#btnSave").show();
        });
    });
    function SaveClientCategory() {
        var clientCategory = $("#ClientCategory").val();
        if (clientCategory != "") {
            $.ajax({
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("SaveClientInformation", "FixedAsset", "http")',
                data: { clientCategory: clientCategory },
                dataType: 'json',
                async: true,
                success: function (data) {
                    if (data.result == 1) {
                        $.alert.open("Success", data.message);
                        GetClientCategory();
                        $("#ClientCategory").val('');
                    } else {
                        $.alert.open("Error", data.message);
                        ClearForm();
                    }
                }

            });
        }
        else {
            $.alert.open("Error", "Please insert required field");
        }
    }
    function GetClientCategory() {
        $('#grid').jtable({
            paging: true,
            pageSize: 10,
            sorting: true,
            actions: {
                listAction: function (postData, jtParams) {
                    return $.Deferred(function ($dfd) {
                        $.ajax({
                            url: '/FixedAsset/GetClientCategory?jtStartIndex=' + jtParams.jtStartIndex + '&jtPageSize=' + jtParams.jtPageSize + '&jtSorting=' + jtParams.jtSorting,
                            type: 'POST',
                            dataType: 'json',
                            data: postData,
                            success: function (data) {
                                $dfd.resolve(data);

                            },
                            error: function () {
                                $dfd.reject();
                            }
                        });
                    });
                }

            },
            fields: {
                ClientTypeID: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                ClientCategory: {
                    title: 'ClientCategory'
                },
                EditLink: {
                    title: "Edit",
                    width: '5%',
                    sorting: false,
                    display: function (data) {
                        return '<div class="text-center"><a href="#" OnClick="EditClientCategoryInfo( ' + data.record.ClientTypeID + ','  + "'" + data.record.ClientCategory + "'" + ');"><i class="fa fa-pencil-square-o"></i></a></div>';
                    }

                },
                Delete: {
                    title: "Delete",
                    width: '5%',
                    display: function (data) {
                        return '<div class="text-center"><a href="#" OnClick="DeleteClientCategoryInfo(' + data.record.ClientTypeID + ');"><i class="fa fa-trash-o"></i></a></div>';
                    }
                }
            }

        });
        $('#grid').jtable('load');
    }

    function EditClientCategoryInfo(ClientTypeID, ClientCategory) {
        $("#ClientTypeID").val(ClientTypeID);
        $("#ClientCategory").val(ClientCategory);

        $("#btnUpdate").show();
        $("#btnReset").show();
        $("#btnSave").hide();
    }
    function UpdateClientCategory() {
        var clientTypeID = $("#ClientTypeID").val();
        var clientCategory = $("#ClientCategory").val();
        if (clientCategory != "") {
            $.ajax({
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("UpdateClientCategory", "FixedAsset", "http")',
                data: { ClientTypeID :clientTypeID, clientCategory: clientCategory },
                dataType: 'json',
                async: true,
                success: function (data) {
                    if (data.result == 1) {
                        $.alert.open("Success", data.message);
                        GetClientCategory();
                        $("#ClientCategory").val('');
                    } else {
                        $.alert.open("Error", data.message);
                        ClearForm();
                    }
                }

            });
        }
        else {
            $.alert.open("Error", "Please insert required field");
        }
    }
    function DeleteClientCategoryInfo(ClientTypeID) {
        $.alert.open('confirm', 'Are you sure you want to delete this record?', function (button) {
            if (button == 'yes') {
                $.ajax({
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("DeleteClientCategoryInfo", "FixedAsset", "http")',
                    data: { ClientTypeID: ClientTypeID },
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        if (data.result == 1) {
                            $.alert.open("Success", data.message);
                            $('#grid').jtable('load');
                        } else {
                            $.alert.open("Error", data.message);
                        }
                    },
                });
                return true;
            }
            else {
                hiddenField.value = 'false';
                return false;
            }
        });
    }


</script>


<h2 class="page-title">Asset User Entry</h2>
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserID)
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Department</label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.DepartmentID,Model.DepartmentList, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Designation</label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.DesignationID, Model.DesignationList, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Department</label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.UserID, Model.User, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
        <div class="row">
            <div class="col-sm-offset-4">
                <input type="button" value="Save" id="btnSave" class="btn btn-primary" onclick="SaveClientCategory()" />
                <input type="button" value="Update" id="btnUpdate" class="btn btn-primary" onclick="UpdateClientCategory()" />
                <input type="button" value="Reset" id="btnReset" class="btn btn-primary" />
            </div>
        </div>
    </div>
<br />
<div class="row">
    <div class="col-md-12">
        <div id="grid"></div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/gbUtility")
    @Scripts.Render("~/bundles/jtable")
}
