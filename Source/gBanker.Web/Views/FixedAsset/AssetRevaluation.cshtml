@model gBanker.Web.ViewModels.FixedAssetViewModel

@{
    ViewBag.Title = "Asset Revaluation Entry";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

<script>
    $(document).ready(function () {
        //GetAssetRevaluationInfo();
        $("#btnUpdate").hide();
        $("#btnReset").hide();

        $("#btnReset").click(function () {
            ClearForm();
            $("#btnUpdate").hide();
            $("#btnReset").hide();
            $("#btnSave").show();
        });
        $("#EffectiveDate").datepicker(
         {
             dateFormat: "dd-M-yy",
             showAnim: "scale",
         });
        $("#GroupId").change(function () {
            GetAssetRevaluationInfo();
            var groupId = $("#GroupId").val();
            var ddlAssetName = $("#AssetID");
            if (groupId != "") {
                $.ajax({
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetGroupWiseAssetName", "FixedAsset", "http")',
                    data: { GroupId: groupId },
                    dataType: 'json',
                    async: false,
                    success: function (data) {
                        if (data.length > 0) {
                            ddlAssetName.empty('');
                            $.each(data, function (id, option) {
                                ddlAssetName.append($('<option></option>').val(option.Value).html(option.Text));
                            });
                        } else {
                            ddlAssetName.html("<option value=''>Please Select</option>");
                        }
                    }
                });
            }
            else {
                $("#AssetID").html("<option value=''>Please Select</option>")
            }
        });

    });

    function SaveAssetRevaluationInformation() {
        debugger;
        var groupId = $("#GroupId").val();
        var assetID = $("#AssetID").val();
        var effectiveDate = $("#EffectiveDate").val();
        var currAssetCost = $("#CurrAssetCost").val();
        var valuerID = $("#ValuerID").val();
        var revaluatedValue = $("#RevaluatedValue").val();
        var deprRate = $("#DeprRate").val();
        var remarks = $("#Remarks").val();

        if (groupId != "" && assetID != "" && effectiveDate != "" && currAssetCost != "" && valuerID != "" && revaluatedValue != "" && revaluatedValue != "" && deprRate != "") {
            var revaluationInfo = {
                GroupId: groupId,
                AssetID: assetID,
                EffectiveDate: effectiveDate,
                CurrAssetCost: currAssetCost,
                ValuerID: valuerID,
                RevaluatedValue: revaluatedValue,
                DeprRate: deprRate,
                Remarks: remarks
            }
            $.ajax({
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("SaveAssetRevaluationInformation", "FixedAsset", "http")',
                data: JSON.stringify({ revaluationInfo: revaluationInfo }),
                dataType: 'json',
                async: true,
                success: function (data) {
                    if (data.result == 1) {
                        $.alert.open("Success", data.message);
                        GetAssetRevaluationInfo();
                        ClearForm();
                    } else {
                        $.alert.open("Error", data.message);
                        ClearForm();
                    }
                }

            });
        }
        else {
            $.alert.open("Error", "Please insert required field");
        }
    }
    function ClearForm() {
        $("#GroupId").val('');
        $("#AssetID").val('');
        $("#EffectiveDate").val('');
        $("#CurrAssetCost").val('');
        $("#ValuerID").val('');
        $("#RevaluatedValue").val('');
        $("#DeprRate").val('');
        $("#Remarks").val('');
    }
    function GetAssetRevaluationInfo() {
        $('#grid').jtable({
            paging: true,
            pageSize: 10,
            sorting: true,
            actions: {
                listAction: function (postData, jtParams) {
                    return $.Deferred(function ($dfd) {
                        var groupId = $("#GroupId").val();
                        $.ajax({
                            url: '/FixedAsset/GetAssetRevaluationInfo?jtStartIndex=' + jtParams.jtStartIndex + '&jtPageSize=' + jtParams.jtPageSize + '&jtSorting=' + jtParams.jtSorting + '&groupId=' + groupId,
                            type: 'POST',
                            dataType: 'json',
                            data: postData,
                            success: function (data) {
                                $dfd.resolve(data);
                            },
                            error: function () {
                                $dfd.reject();
                            }
                        });
                    });
                }

            },
            fields: {
                AssetRevaluationID: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                AssetGroupID: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                GroupName: {
                    width: '10%',
                    title: 'GroupName'
                },
                AssetID: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                AssetName: {
                    width: '10%',
                    title: 'AssetName'
                },
                EffectiveDate: {
                    width: '10%',
                    title: 'Effective Date'
                },
                CurrAssetCost: {
                    width: '10%',
                    title: 'CurrAssetCost'
                },
                ValuerID: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                ValuerName: {
                    width: '10%',
                    title: 'ValuerName'
                },
                RevaluatedValue: {
                    width: '10%',
                    title: 'RevaluatedValue'
                },
                DeprRate: {
                    width: '10%',
                    title: 'DeprRate'
                },
                Remarks: {
                    width: '10%',
                    title: 'Remarks'
                },
                EditLink: {
                    title: "Edit",
                    width: '5%',
                    sorting: false,
                    display: function (data) {
                        return '<div class="text-center"><a href="#" OnClick="EditAssetRevaluationInfo( ' + data.record.AssetRevaluationID + ',' + "'" + data.record.AssetGroupID + "'" + ',' + "'" + data.record.AssetID + "'" + ',' + "'" + data.record.EffectiveDate + "'" + ',' + "'" + data.record.CurrAssetCost + "'" + ',' + "'" + data.record.ValuerID + "'" + ',' + "'" + data.record.RevaluatedValue + "'" + ',' + "'" + data.record.DeprRate + "'" + ',' + "'" + data.record.Remarks + "'" + ' );"><i class="fa fa-pencil-square-o"></i></a></div>';
                    }
                },
                Delete: {
                    title: "Delete",
                    width: '5%',
                    display: function (data) {
                        return '<div class="text-center"><a href="#" OnClick="DeleteAssetRevaluationInfo(' + data.record.AssetRevaluationID + ');"><i class="fa fa-trash-o"></i></a></div>';
                    }
                }
            }

        });
        $('#grid').jtable('load');
    }
    function EditAssetRevaluationInfo(AssetRevaluationID, AssetGroupID, AssetID, EffectiveDate, CurrAssetCost, ValuerID, RevaluatedValue, DeprRate, Remarks) {
        debugger;
        $("#AssetRevaluationID").val(AssetRevaluationID);
        $("#GroupId").val(AssetGroupID).trigger('change');
        $("#GroupId").attr('Disabled', true);
        $("#AssetID").val(AssetID).attr('Disabled', true);
        $("#EffectiveDate").val(EffectiveDate);
        $("#CurrAssetCost").val(CurrAssetCost);
        $("#ValuerID").val(ValuerID);
        $("#RevaluatedValue").val(RevaluatedValue);
        $("#DeprRate").val(DeprRate);
        $("#Remarks").val(Remarks);

        $("#btnUpdate").show();
        $("#btnReset").show();
        $("#btnSave").hide();
    }

    function UpdateAssetRevaluationInformation() {
        var assetRevaluationID = $("#AssetRevaluationID").val();
        var groupId = $("#GroupId").val();
        var assetID = $("#AssetID").val();
        var effectiveDate = $("#EffectiveDate").val();
        var currAssetCost = $("#CurrAssetCost").val();
        var valuerID = $("#ValuerID").val();
        var revaluatedValue = $("#RevaluatedValue").val();
        var deprRate = $("#DeprRate").val();
        var remarks = $("#Remarks").val();

        if (groupId != "" && assetID != "" && effectiveDate != "" && currAssetCost != "" && valuerID != "" && revaluatedValue != "" && revaluatedValue != "" && deprRate != "") {
            var revaluationInfo = {
                AssetRevaluationID : assetRevaluationID,
                GroupId: groupId,
                AssetID: assetID,
                EffectiveDate: effectiveDate,
                CurrAssetCost: currAssetCost,
                ValuerID: valuerID,
                RevaluatedValue: revaluatedValue,
                DeprRate: deprRate,
                Remarks: remarks
            }
            $.ajax({
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("UpdateAssetRevaluationInformation", "FixedAsset", "http")',
                data: JSON.stringify({ revaluationInfo: revaluationInfo }),
                dataType: 'json',
                async: true,
                success: function (data) {
                    if (data.result == 1) {
                        $.alert.open("Success", data.message);
                        GetAssetRevaluationInfo();
                        ClearForm();
                    } else {
                        $.alert.open("Error", data.message);
                        ClearForm();
                    }
                }

            });
        }
        else {
            $.alert.open("Error", "Please insert required field");
        }
    }
    function DeleteAssetRevaluationInfo(AssetRevaluationID) {
        $.alert.open('confirm', 'Are you sure you want to delete this record?', function (button) {
            if (button == 'yes') {
                $.ajax({
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("DeleteAssetRevaluationInfo", "FixedAsset", "http")',
                    data: { AssetRevaluationID: AssetRevaluationID },
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        if (data.result == 1) {
                            $.alert.open("Success", data.message);
                            $('#grid').jtable('load');
                        } else {
                            $.alert.open("Error", data.message);
                        }
                    },
                });
                return true;
            }
            else {
                hiddenField.value = 'false';
                return false;
            }
        });
    }


</script>


<h2 class="page-title">Asset Revaluation Entry</h2>
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.AssetRevaluationID)
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Asset Group</label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.GroupId, Model.AssetGroupIdList, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Asset Name</label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.AssetID, Model.AssetList, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Effective Date</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.EffectiveDate, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Current Cost of the Asset</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.CurrAssetCost, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Valuer Name</label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.ValuerID, Model.ValuerList, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Revaluated Value</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.RevaluatedValue, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Rate of Depreciation (%)</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.DeprRate, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Remarks</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-offset-4">
            <input type="button" value="Save" id="btnSave" class="btn btn-primary" onclick="SaveAssetRevaluationInformation()" />
            <input type="button" value="Update" id="btnUpdate" class="btn btn-primary" onclick="UpdateAssetRevaluationInformation()" />
            <input type="button" value="Reset" id="btnReset" class="btn btn-primary" />
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-12">
        <div id="grid"></div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jtable")
}
