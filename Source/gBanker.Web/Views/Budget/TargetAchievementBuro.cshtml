@model gBanker.Web.ViewModels.TargetAchievementBuroViewModel
@{
    ViewBag.Title = "Target Achievement(Buro)";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}
<script>
    $(document).ready(function () {
        $("#Date").datepicker(
          {  dateFormat: "dd-M-yy",
              showAnim: "scale",
          });
        $("#btnUpdate").hide();
        $("#btnReset").hide();
        GetTargetList();
        $("#btnReset").click(function () {
            $("#ParticularId").val('');
            $("#Balance").val('');
            $("#TargetCurrentYear").val('');
            $("#Target").val('');
            $("#Achievement").val('');
            $("#Date").val('');
            $("#prodTypeAutoComplete").val('');
            $("#btnUpdate").hide();
            $("#btnReset").hide();
            $("#btnSave").show();
        });
        $("#prodTypeAutoComplete").autocomplete({
            source: function (request, response) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetProductList", "Budget", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { prodCode: request.term },
                    minLength: 1,
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.Value,
                                label: item.Text
                            };
                            //response(data);
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            },
            focus: function (event, ui) {
                debugger;
                $("#prodTypeAutoComplete").val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                debugger;
                $("#prodTypeAutoComplete").val(ui.item.label);
                $("#ProductID").val(ui.item.value);
                return false;
            },
            change: function (event, ui) {
                debugger;
                $("#prodTypeAutoComplete").val(ui.item.label);
                $("#ProductID").val(ui.item.value);
                return false;
            }
        });


    });
    function SaveTargetAchievement() {
        debugger;
        var particularId = $("#ParticularId").val();
        //var balance = $("#Balance").val();
        var targetCurrentYear = $("#TargetCurrentYear").val();
        var target = $("#Target").val();
        //var achievement = $("#Achievement").val();
        var date = $("#Date").val();
        var productID = $("#ProductID").val();
        var employeeID = $("#EmployeeID").val();
        var objTarget = {
            ParticularId: particularId,
            //Balance: balance,
            TargetCurrentYear: targetCurrentYear,
            Target: target,
            //Achievement: achievement,
            Date: date,
            ProductID: productID,
            EmployeeID:employeeID
        }
        $.ajax({
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("SaveTargetAchievementBuro", "Budget", "http")',
            data: JSON.stringify({ objTarget: objTarget }),
            dataType: 'json',
            async: true,
            success: function (data) {
                if (data.result == 1) {
                    $.alert.open("Success", data.message);
                    Clearform();
                    GetTargetList();
                } else {
                    $.alert.open("Error", data.message);
                }
            }

        });
    }
    function Clearform() {
       $("#ParticularId").val('');
       $("#Balance").val('');
       $("#TargetCurrentYear").val('');
       $("#Target").val('');
       $("#Achievement").val('');
       $("#Date").val('');
       $("#prodTypeAutoComplete").val('');
    }
    function GetTargetList() {
        $('#grid').jtable({
            paging: true,
            pageSize: 10,
            sorting: true,
            actions: {
                listAction: function (postData, jtParams) {
                    return $.Deferred(function ($dfd) {
                        $.ajax({
                            url: '/Budget/GetTargetListBuro?jtStartIndex=' + jtParams.jtStartIndex + '&jtPageSize=' + jtParams.jtPageSize + '&jtSorting=' + jtParams.jtSorting,
                            type: 'POST',
                            dataType: 'json',
                            data: postData,
                            success: function (data) {
                                $dfd.resolve(data);

                            },
                            error: function () {
                                $dfd.reject();
                            }
                        });
                    });
                }

            },
            fields: {
                TargetId: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                ParticularId: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                EmployeeName: {
                    width: '15%',
                    title: 'Emp Name'
                },
                ParticularName:{
                    width:'15%',
                    title:'ParticularName'
                },
                //Balance: {
                //    width: '10%',
                //    title: 'Balance'
                //},
                TargetCurrentYear: {
                    width: '5%',
                    title: 'TargetCurrentYear'
                },
                Target: {
                    width: '7%',
                    title: 'Target'
                },
                //Achievement: {
                //    width: '10%',
                //    title: 'Achievement'
                //},
                //Date: {
                //    width: '5%',
                //    //title: 'Date'
                //},
                DateMSG: {
                    width: '6%',
                    title: 'Date'
                },
                //ProductNameWithCode: {
                //    width: '15%',
                //    title: 'Product Name'
                //},
                Edit: {
                    title: "Edit",
                    width: '5%',
                    sorting: false,
                    display: function (data) {
                        return '<div class="text-center"><a href="#" OnClick="EditTarget(' + "'" + data.record.TargetId + "'" + ',' + "'" + data.record.ParticularId + "'" + ',' + "'" + data.record.Balance + "'" + ',' + "'" + data.record.TargetCurrentYear + "'" + ',' + "'" + data.record.Target + "'" + ',' + "'" + data.record.Achievement + "'" + ',' + "'" + data.record.DateMSG + "'" + ',' + "'" + data.record.ProductID + "'" + ',' + "'" + data.record.ProductNameWithCode + "'" + ',' + "'" + data.record.EmployeeID + "'" + ');"><i class="fa fa-pencil-square-o"></i></a></div>';
                        $("#TargetId").val(data.record.TargetId);
                    }
                },
                Delete: {
                    title: "Delete",
                    width: '5%',
                    display: function (data) {
                        return '<div class="text-center"><a href="#" OnClick="DeleteTargetAchievement(' + data.record.TargetId + ');"><i class="fa fa-trash-o"></i></a></div>';
                    }
                }
            }
        });
        $('#grid').jtable('load');
    }
    function EditTarget(TargetId, ParticularId, Balance, TargetCurrentYear, Target, Achievement, Date, ProductID, ProductNameWithCode, EmployeeID)
    {
        debugger;
        $("#TargetId").val(TargetId);
        $("#ParticularId").val(ParticularId);
        $("#Balance").val(Balance);
        $("#TargetCurrentYear").val(TargetCurrentYear);
        $("#Target").val(Target);
        $("#Achievement").val(Achievement);
        $("#Date").val(Date);
        $("#prodTypeAutoComplete").val(ProductNameWithCode);
        //$("#prodTypeAutoComplete").html(ProductNameWithCode);
        $("#ProductID").val(ProductID);
        
        //alert(EmployeeID);
       // $("#EmployeeID").val(EmployeeID);

        $("#EmployeeID option[value='" + EmployeeID + "']").prop('selected', 'selected');

        $("#btnUpdate").show();
        $("#btnReset").show();
        $("#btnSave").hide();
    }
    function UpdateTargetAchievement() {
        var targetId = $("#TargetId").val();
        var particularId = $("#ParticularId").val();
        //var balance = $("#Balance").val();
        var targetCurrentYear = $("#TargetCurrentYear").val();
        var target = $("#Target").val();
        //var achievement = $("#Achievement").val();
        var date = $("#Date").val();
        var productID = $("#ProductID").val();
        var employeeID = $('#EmployeeID :selected').val();
        var objTarget = {
            TargetId: targetId,
            ParticularId: particularId,
            //Balance: balance,
            TargetCurrentYear: targetCurrentYear,
            Target: target,
           // Achievement: achievement,
            Date: date,
            ProductID: productID,
            EmployeeID: employeeID
        }
        $.ajax({
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("UpdateTargetAchievementBuro", "Budget", "http")',
            data: JSON.stringify({ objTarget: objTarget }),
            dataType: 'json',
            async: true,
            success: function (data) {
                if (data.result == 1) {
                    $.alert.open("Success", data.message);
                    Clearform();
                    GetTargetList();
                } else {
                    $.alert.open("Error", data.message);
                }
            }

        });
    }
    function DeleteTargetAchievement(TargetId) {
        if (confirm("Are you sure you want to delete this record?") == true) {
            $.ajax({
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("DeleteTargetAchievementBuro", "Budget", "http")',
                data: { TargetId: TargetId },
                dataType: 'json',
                async: true,
                success: function (Result) {
                    $('#grid').jtable('load');
                },
                error: function (request, status, error) {
                    alert(request.statusText + "/" + request.statusText + "/" + error);
                }
            });
            return true;
        }
        else {
            hiddenField.value = 'false';
            return false;
        }
    }
</script>

<h2 class="page-title">Target Achievement(Buro)</h2>
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
   
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Employee Name</label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.EmployeeID, Model.EmployeeList, new { @class = "form-control" })
                    @Html.HiddenFor(model => model.EmployeeID)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        @Html.HiddenFor(model => model.TargetId)
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Particular Name</label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(model => model.ParticularId, Model.ParticularList, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6" style="display:none">
            <div class="form-group">
                <label class="control-label col-sm-4">Balance</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.Balance, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        @*<div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Target Current Year</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.TargetCurrentYear, new { @class = "form-control" })
                </div>
            </div>
        </div>*@
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Target</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.Target, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6" style="display:none">
            <div class="form-group">
                <label class="control-label col-sm-4">Achievement</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.Achievement, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Date</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.Date, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    @*<div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4">Product</label>
                <div class="col-sm-7">
                    @Html.TextBox("prodTypeAutoComplete", "", new { @class = "form-control" })
                   
                    @Html.HiddenFor(model => model.ProductID)
                </div>
            </div>
        </div>
    </div>*@
    <div>
        <div class="row">
            <div class="col-sm-offset-4">
                <input type="button" value="Save" id="btnSave" class="btn btn-primary" onclick="SaveTargetAchievement()" />
                <input type="button" value="Update" id="btnUpdate" class="btn btn-primary" onclick="UpdateTargetAchievement()" />
                <input type="button" value="Reset" id="btnReset" class="btn btn-primary" />
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <div id="grid"></div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jtable")
}
