@model gBanker.Web.ViewModels.EmployeeViewModel

@{
    ViewBag.Title = "Employee Create";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
    var branch = Model == null ? null : Model.branchListItems;
    var empstatus = Model == null ? null : Model.empstatusListItems;
    var gender = Model == null ? null : Model.genderListItems;
}




<script type="text/javascript">
    $(document).ready(function () {
        $("#EmployeeStatus").blur(function () {
            var trxType = $("#EmployeeStatus").val();
            //var trxType = "102";
            if (trxType == '1') {
                $("#ReleaseDate").prop("readonly", true);
                $("#ReleaseDate").val('')
            }
            else {
                $("#ReleaseDate").prop("readonly", false);
               
            }
        });
        $("#EmployeeStatus").change(function () {
            var trxType = $("#EmployeeStatus").val();
            //var trxType = "102";
            if (trxType == '1') {
                $("#ReleaseDate").prop("readonly", true);
                $("#ReleaseDate").val('')
            }
            else {
                $("#ReleaseDate").prop("readonly", false);

            }
        });
        $("#ReleaseDate").change(function () {
            var trxType = $("#EmployeeStatus").val();
            //var trxType = "102";
            if (trxType == '1') {
                $("#ReleaseDate").prop("readonly", true);
                $("#ReleaseDate").val('')
            }
            else {
                $("#ReleaseDate").prop("readonly", false);
                
            }
        });
        // $("#BirthDate").datepicker();
        gBankerDatePicker("BirthDate");
    });

</script>

<script type="text/javascript">
    $(document).ready(function () {
        gBankerDatePicker("JoiningDate");

        $('#Designationddl').change(function () {
            var newValu = $('option:selected', $('#Designationddl')).val();
            $('#DesignationID').val(newValu);
        });



        //$("#JoiningDate").datepicker();
    });

</script>
<script type="text/javascript">
    $(document).ready(function () {
        gBankerDatePicker("ReleaseDate");
        //$("#ReleaseDate").datepicker();
    });

</script>
@Html.ActionLink("Back to List", "Index", null, new { @class = "pull-right" })

<h2 class="page-title">Add Employee</h2>
@using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group" style=" display:none">
                @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.OfficeID, htmlAttributes: new { @class = "control-label" })

                    @Html.DropDownListFor(model => model.OfficeID, branch, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OfficeID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeCode, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.EditorFor(model => model.EmployeeCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmpNameBen, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.EmpNameBen, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpNameBen, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6" style="display:none;">
                <div class="form-group">
                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="form-group">
                    <label class="control-label">Designation</label>
                    @Html.DropDownList("Designation", null, new { @ID = "Designationddl", @class = "form-control" })
                    @Html.HiddenFor(x => x.DesignationID)

                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.GuardianName, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.GuardianName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GuardianName, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmpAddress, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.EditorFor(model => model.EmpAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpAddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.DropDownListFor(model => model.Gender, gender, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeStatus, htmlAttributes: new { @class = "control-label" })<span style="color:red; font-size:15px;"> * </span>

                    @Html.DropDownListFor(model => model.EmployeeStatus, empstatus, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EmployeeStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                </div>
            </div>

            

        </div>
            <div class="form-group">
                <div class="form-group form-action">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/gbUtility")


}

