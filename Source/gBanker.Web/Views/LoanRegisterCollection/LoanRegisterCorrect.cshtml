
@{
    ViewBag.Title = "Loan Register Collection";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
    <link href="~/Content/jtable-custom.css" rel="stylesheet" />
}
@*KHALID AHMED
    29 March, 2018*@

<style>
    .jtable > thead > tr {
        height: 50px;
    }
</style>

<script type="text/javascript">


    function CalculateGridFields(){

        findPrincipalLoan();
        findLoanDue();
        findLoanPaid();
        findIntCharge();
        findIntDue();
        findIntPaid();

        CalculateGridFields2();

    }



    function CalculateGridFields2(){

        var  totalPrincipalLoan  =parseFloat( document.getElementById('totalPrincipalLoan').value);
        var  totalIntCharge        = parseFloat(document.getElementById('totalIntCharge').value);
        var  totalLoanDue         = parseFloat(document.getElementById('totalLoanDue').value);
        var  totalIntDue            = parseFloat(document.getElementById('totalIntDue').value);
        var  totalLoanPaid         = parseFloat(document.getElementById('totalLoanPaid').value);
        var  totalIntPaid           = parseFloat(document.getElementById('totalIntPaid').value);


        if( (totalPrincipalLoan+totalIntCharge-totalLoanPaid-totalIntPaid) < 0)
        {
            document.getElementById('totalBalance1').value = 0;
        }
        else{
            document.getElementById('totalBalance1').value = (totalPrincipalLoan+totalIntCharge-totalLoanPaid-totalIntPaid);
        }

        if((totalLoanDue+totalIntDue-totalLoanPaid-totalIntPaid) < 0 )
        {
            document.getElementById('totalBalance2').value = 0 ;
        }
        else
        {
            document.getElementById('totalBalance2').value = (totalLoanDue+totalIntDue-totalLoanPaid-totalIntPaid);
        }

        if((totalLoanPaid+totalIntPaid-totalLoanDue-totalIntDue) < 0)
        {
            document.getElementById('totalBalance3').value = 0 ;
        }
        else
        {
            document.getElementById('totalBalance3').value = (totalLoanPaid+totalIntPaid-totalLoanDue-totalIntDue);
        }



        var maxVal = parseInt(0);
        var arr = document.getElementsByName('qtyInstallmentNo');
        for(var i=0;i<arr.length;i++){
            if(parseInt(arr[i].value))

            if(maxVal <  parseInt(arr[i].value))
                {
                   maxVal = parseInt(arr[i].value);
                   // alert(arr[i].value);
                }
            document.getElementById('totalBalance4').value = maxVal;
        }




    }



    function findPrincipalLoan(){
        var arr = document.getElementsByName('qtyPrincipalLoan');
        var tot=0;
        for(var i=0;i<arr.length;i++){
            if(parseInt(arr[i].value))
                tot += parseInt(arr[i].value);
        }
        document.getElementById('totalPrincipalLoan').value = tot;
    }

    function findLoanDue(){
        var arr = document.getElementsByName('qtyLoanDue');
        var tot=0;
        for(var i=0;i<arr.length;i++){
            if(parseInt(arr[i].value))
                tot += parseInt(arr[i].value);
        }
        document.getElementById('totalLoanDue').value = tot;
    }



    function findLoanPaid(){
        var arr = document.getElementsByName('qtyLoanPaid');
        var tot=0;
        for(var i=0;i<arr.length;i++){
            if(parseInt(arr[i].value))
                tot += parseInt(arr[i].value);
        }
        document.getElementById('totalLoanPaid').value = tot;
    }



    function findIntCharge(){
        var arr = document.getElementsByName('qtyIntCharge');
        var tot=0;
        for(var i=0;i<arr.length;i++){
            if(parseInt(arr[i].value))
                tot += parseInt(arr[i].value);
        }
        document.getElementById('totalIntCharge').value = tot;
    }


    function findIntDue(){
        var arr = document.getElementsByName('qtyIntDue');
        var tot=0;
        for(var i=0;i<arr.length;i++){
            if(parseInt(arr[i].value))
                tot += parseInt(arr[i].value);
        }
        document.getElementById('totalIntDue').value = tot;
    }


    function findIntPaid(){
        var arr = document.getElementsByName('qtyIntPaid');
        var tot=0;
        for(var i=0;i<arr.length;i++){
            if(parseInt(arr[i].value))
                tot += parseInt(arr[i].value);
        }
        document.getElementById('totalIntPaid').value = tot;
    }





    function TextChange(recordId)
    {
        //alert(recordId);

        var id = 'CreateUser,'+recordId; //   CreateUser,55355
        //alert(id);
        //var s = document.getElementById("CreateUser,55355");
        //s.value = "update";

        // $("#CreateUser,55355").val("update");
        //document.getElementById("CreateUser,55355").innerHTML = "New text!";
        //document.getElementById("CreateUser,55355").innerText = "New text!";
        //document.getElementById("CreateUser,55355").value = "My value";

        //$("#CreateUser,55355").val("MY VAL");

        document.getElementById(''+ id +'').value = "update";

        //  document.getElementById('CreateUser,55355').value = "update";
        // $(id).val("update")

    }

    function GetCenter() {
        var ddlCenter = $("#ddlCenter");
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetCenterList", "Disbursement", "http")',
            data: {},
            dataType: 'json',
            async: true,
            success: function (data) {
                ddlCenter.html('');
                $.each(data, function (id, option) {
                    ddlCenter.append($('<option></option>').val(option.Value).html(option.Text));
                });
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }

    function GetMember() {
        var ddlMember = $("#ddlMember");
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetMemberList", "Disbursement", "http")',
            data: { centerId: $("#ddlCenter option:selected").val() },
            dataType: 'json',
            async: true,
            success: function (data) {
                ddlMember.html('');
                $.each(data, function (id, option) {
                    ddlMember.append($('<option></option>').val(option.MemberID).html(option.MemberName));

                    //$.each(data, function (id, option) {
                    //    ddlMember.append($('<option></option>').val(option.Value).html(option.Text));
                });
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }
    function GetProduct() {
        var ddlProd = $("#ddlProd");
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetProductListByMemberWithProcedure", "Disbursement", "http")',
            data: { Qtype: 1, MemberID: $("#hdnMemberID").val(), ProductID: 0 },
            dataType: 'json',
            async: true,
            success: function (List_MemberwiseProduct) {
                console.log(List_MemberwiseProduct);
                ddlProd.html('');
                $.each(List_MemberwiseProduct, function (id, option) {
                    ddlProd.append($('<option></option>').val(option.ProductID).html(option.ProductName));
                });
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }
    function GetLoanTerm() {
        var ddlLoanTerm = $("#ddlLoanTerm");
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetLoanTermListByProductandMemberWithProcedure", "Disbursement", "http")',
            //data: { Member_id: Member_id, center_id: center_id },
            data: { Qtype: 2, MemberID: $("#hdnMemberID").val(), ProductID: $("#ddlProd").val() },
            dataType: 'json',
            async: true,
            success: function (List_LoanTermMemberandProductwise) {
                console.log(List_LoanTermMemberandProductwise);
                ddlLoanTerm.html('');
                $.each(List_LoanTermMemberandProductwise, function (id, option) {
                    ddlLoanTerm.append($('<option></option>').val(option.ProductID).html(option.LoanTerm));
                });
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }

    function checkNumberic(e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            return false;
        }
    }
    function goNextRow(e, rowSl, id) {
        //up arrow 38
        if (e.keyCode == 38) {
            var newId = '#' + 'PrimaryKeyId' + (rowSl - 1).toString();
            var newIdVal = $(newId).val();
            var newFocusId = id + newIdVal.toString();
            $('#' + newFocusId).focus();
            $('#' + newFocusId).select();
        }
        else if (e.keyCode == 40) {
            var newId = '#' + 'PrimaryKeyId' + (rowSl + 1).toString();
            var newIdVal = $(newId).val();
            var newFocusId = id + newIdVal.toString();
            $('#' + newFocusId).focus();
            $('#' + newFocusId).select();
        }



    }

    /// Save And Reload Grid

    function SaveAndReload() {

        var allCollection = new Array();
        var $allInputs = $('input[type="text"]');
        $allInputs.each(function () {
            var value = $(this).val();
            var id = $(this).attr('id');
            var obj = new Object();
            obj.Key = id;
            obj.Value = value;
            //alert(value);
            allCollection[allCollection.length] = obj;
        });


        var $allId = $('input[type="hidden"]');
        var allIds = new Array();

        $allId.each(function () {
            var value = $(this).val();
            allIds[allIds.length] = value;
        });

        var allTrx = new Object();
        allTrx.allTrx = allCollection;
        allTrx.allLoanTrxId = allIds;
        /*
        Additional info while Insert Data
        */
        allTrx.center      = $("#ddlCenter option:selected").val();
        allTrx.member      = $("#hdnMemberID").val();
        allTrx.product     = $("#ddlProd option:selected").val();
        allTrx.loanterm    = $("#ddlLoanTerm option:selected").val();
        /*END */

        var json = JSON.stringify(allTrx);

        $("#loading").show();
        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("SaveLoanTrx", "LoanRegisterCollection", "http")',
            type: "POST",
            dataType: 'json',
            async: true,
            data: json,

            success: function (resp) {
                $("#loading").hide();
                var result = resp.Result;
                var msg = resp.Message;
                var css = "failed";
                if (result == "OK")
                    css = "success";
                $("#dvMessage").attr('class', css);
                $("#dvMessage").html(msg);
                $("#dvMessage").show();


                $("#dvMessageDown").attr('class', css);
                $("#dvMessageDown").html(msg);
                $("#dvMessageDown").show();

                if (result == "OK") {
                    $("#dvMessage").toggle('fade', 1500);
                    $("#dvMessageDown").toggle('fade', 1500);
                    setTimeout("hideMsg()", 1500);
                }
            },
            error: function (err) {
                $("#loading").hide();
                var msg = err.responseText;
                var css = "failed";
                $("#dvMessage").attr('class', css);
                $("#dvMessage").html(msg);
                $("#dvMessage").show();

                $("#dvMessageDown").attr('class', css);
                $("#dvMessageDown").html(msg);
                $("#dvMessageDown").show();
            }
        });
    }// ENd Save Grid Function



    $(document).ready(function () {

        var LoggedInUser =  @Html.Raw(Json.Encode(ViewData["LoggedInUser"]));
        $("#LoggedInUser").val(LoggedInUser);

        $("#InstallmentDt").datepicker(
        {
            dateFormat: "dd-M-yy",
            showAnim: "scale",
            changeMonth: true,
            changeYear: true,
            yearRange: "1920:2025"
        });
        $(".InstallmentDate").datepicker(
         {
             dateFormat: "dd-M-yy",
             showAnim: "scale",
             changeMonth: true,
             changeYear: true,
             yearRange: "1920:2025"
         });

        $("#TransactionDate").datepicker(
        {
            dateFormat: "dd-M-yy",
            showAnim: "scale",
            changeMonth: true,
            changeYear: true,
            yearRange: "1920:2055"
        });
       $("#TransactionDate").datepicker(
        'setDate', new Date());


        //$(".PrincipalLoan").

        $("#btnView").click(function (e) {
            e.preventDefault();
            var center      = $("#ddlCenter option:selected").val();
            var member      = $("#hdnMemberID").val();//$("#ddlMember option:selected").val();
            var product     = $("#ddlProd option:selected").val();
            var loanterm    = $("#ddlLoanTerm option:selected").val();

            $('#grid').jtable('load', { CenterID: center, MemberID: member, ProductID: product, LoanTerm: loanterm });

        });


        var rowsl = 0;
        $("#btnAddNew").click(function (e) {

            //var center = $("#ddlCenter option:selected").val();
            //var member = $("#ddlMember option:selected").val();
            //var product = $("#ddlProd option:selected").val();
            //var loanterm = $("#ddlLoanTerm option:selected").val();

            //$('#grid').jtable('load', { CenterID: center, MemberID: member, ProductID: product, LoanTerm: loanterm, Option: 'AddNew' });

            //alert($("#TransactionDate").val());

            var table = $('.jtable > tbody');
            var tblRowsl = $('.jtable tr').length-1; // Remove Header tr -1

           // $('.jtable table tr:last').after('<tr>...</tr><tr>...</tr>');
           // alert(table.html());

            table.append(

               '<tr>' +
               '<td>'+$("#TransactionDate").val()+'</td>'+
               '<td>'+$("#TransactionDate").val()+'</td>'+
               '<td><input type="text" onblur="findPrincipalLoan()" name="qtyPrincipalLoan" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event, '+tblRowsl+', PrincipalLoan);" style="width:100px" id="PrincipalLoan" savingpaidproduct="PrincipalLoan'+rowsl+'" value="0"> <input type="text" value="0" style="display:none;" name="PrimaryKeyId" id="PrimaryKeyId'+tblRowsl+'"> </td>'+
               '<td><input type="text" onblur="findLoanDue()" name="qtyLoanDue" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event, '+tblRowsl+' ,LoanDue);" style="width:100px" id="LoanDue" savingpaidproduct="LoanDue'+rowsl+'" value="0"></td>'+
               '<td><input type="text"  onblur="findLoanPaid()" name="qtyLoanPaid" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event, '+tblRowsl+' ,LoanPaid);" style="width:100px" id="LoanPaid" savingpaidproduct="LoanPaid'+rowsl+'" value="0"></td>'+
               '<td><input type="text" onblur="findIntCharge()" name="qtyIntCharge" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event, '+tblRowsl+' ,IntCharge);" style="width:100px" id="IntCharge" savingpaidproduct="IntCharge'+rowsl+'" value="0"></td>'+
               '<td><input type="text" onblur="findIntDue()" name="qtyIntDue" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event, '+tblRowsl+' ,IntDue);" style="width:100px" id="IntDue" savingpaidproduct="LoanTrxID'+rowsl+'" value="0"></td>'+
               '<td><input type="text" onblur="findIntPaid()" name="qtyIntPaid" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event, '+tblRowsl+' ,IntPaid);" style="width:100px" id="IntPaid" savingpaidproduct="IntPaid'+rowsl+'" value="0"></td>'+
               '<td><input type="text"  name="qtyInstallmentNo" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event, '+tblRowsl+' ,InstallmentNo);" style="width:100px" id="InstallmentNo" savingpaidproduct="InstallmentNo'+rowsl+'" value="0"></td>'+
              '<td><input type="text" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event, '+tblRowsl+' ,TrxType);" style="width:100px" id="TrxType" savingpaidproduct="TrxType'+rowsl+'" value="0"></td>'+
               '<td><input type="text" readonly="readonly" style="width:100px" id="CreateUser" savingpaidproduct="CreateUser'+rowsl+'" value="'+ LoggedInUser  + '"></td>'+
               '</tr>'

                );

            rowsl += 1


        });

        //$("#btnView").click(function (e) {
        //    e.preventDefault();
        //    DisburseAmountSave()
        //});
        GetCenter();


        $("#ddlCenter").change(function () {
            /*
            var ddlCenter = $("#ddlCenter option:selected").val();
            if (ddlCenter > 0) {
                GetMember();

            }
            else {
                $("#ddlMember").empty();

            }
            */

            $("#memberAutoComplete").val('');
            $("#hdnMemberID").val('');

            var ddlCenter = $("#ddlCenter option:selected").val();
            if (ddlCenter > 0) {
                //  GetMember();
            }
            else {
                // $("#ddlMember").empty();
                $("#hdnMemberID").val("");
            }

        });


        /*
        $("#ddlMember").change(function () {
            // var ddlMember = $("#ddlMember option:selected").val();
            var ddlMember = $("#ddlMember option:selected").val();
            // var ddlMember = $("#ddlMember").val();

            if (ddlMember > 0) {
                GetProduct();
            }
            else {
                $("#ddlProd").empty();
            }
        });

        */


        $("#ddlProd").change(function () {
            var ddlProd = $("#ddlProd option:selected").val();
            if (ddlProd > 0) {
                GetLoanTerm();
            }
            else {
                $("#ddlLoanTerm").empty();
            }
        });

        //grid
        //listAction: '/LoanRegisterCorrection/GETLoanRegisterList'

        // Start jTable ::

        $('#grid').jtable({
            // title: 'Category Transfer List',
            paging: true,
            pageSize: 50,
            sorting: true,
            defaultSorting: 'Name ASC',
            actions: {
                listAction: function (postData, jtParams) {
                    console.log("Loading from custom function...");
                    return $.Deferred(function ($dfd) {
                        $.ajax({
                            url: '/LoanRegisterCollection/GETLoanRegisterList?jtStartIndex=' + jtParams.jtStartIndex + '&jtPageSize=' + jtParams.jtPageSize + '&jtSorting=' + jtParams.jtSorting,
                            type: 'POST',
                            dataType: 'json',
                            data: postData,
                            success: function (data) {
                                $dfd.resolve(data);
                                CalculateGridFields();
                                CalculateGridFields2();

                            },
                            error: function () {
                                $dfd.reject();
                            }
                        });
                    });
                }


            },
            fields: {
                LoanTrxID: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                CenterID: {
                    list: false,
                    create: false,
                    edit: false
                },
                TrxDate: {
                    title: 'Trx Date',
                    width: '6%',
                    type: 'date',
                    displayFormat: 'dd-M-yy'

                },
                InstallmentDate: {
                    title: 'Installment Date',
                    type: 'date',
                    displayFormat: 'dd-M-yy',
                    width: '5%'

                },
                MemberID: {
                    title: 'Member Code',
                    list: false,
                    create: false,
                    edit: false
                },
                ProductID: {
                    list: false,
                    create: false,
                    edit: false
                },
                PrincipalLoan: {
                    title: 'Disburse Amount',
                    width: '5%',
                    display: function (data) {
                        return '<input type="text" onblur="findPrincipalLoan()" name="qtyPrincipalLoan"  onchange="TextChange('+ "'" + data.record.LoanTrxID + "'" +')" onkeypress="return checkNumberic(event);"  onkeydown="return goNextRow(event,' + data.record.rowSl + ',' + "'" + 'PrincipalLoan' + "'" + ');"  style="width:100px" ' + 'id="PrincipalLoan,' + data.record.LoanTrxID + '" SavingPaidProduct="PrincipalLoan' + data.record.LoanTrxID + '" value="' + data.record.PrincipalLoan + '" />'
                         + '<input type="text" value="' + data.record.LoanTrxID + '" style="display:none;" name="PrimaryKeyId" id="PrimaryKeyId' + data.record.rowSl + '" />';

                    }
                },
                LoanDue: {
                    title: 'Prin. Recoverable',
                    width: '5%',
                    display: function (data) {
                        return '<input type="text" onblur="findLoanDue()" name="qtyLoanDue"  onchange="TextChange('+ "'" + data.record.LoanTrxID + "'" +')" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event,' + data.record.rowSl + ',' + "'" + 'LoanDue' + "'" + ');"  style="width:100px" ' + 'id="LoanDue,' + data.record.LoanTrxID + '" SavingPaidProduct="LoanDue' + data.record.LoanTrxID + '" value="' + data.record.LoanDue + '" />';
                    }
                },

                LoanPaid: {
                    title: 'Principal Paid',
                    width: '5%',
                    display: function (data) {
                        return '<input type="text"  onblur="findLoanPaid()" name="qtyLoanPaid"   onchange="TextChange('+ "'" + data.record.LoanTrxID + "'" +')" onkeypress="return checkNumberic(event);"  onkeydown="return goNextRow(event,' + data.record.rowSl + ',' + "'" + 'LoanPaid' + "'" + ');" style="width:100px" ' + 'id="LoanPaid,' + data.record.LoanTrxID + '" SavingPaidProduct="LoanPaid' + data.record.LoanTrxID + '" value="' + data.record.LoanPaid + '" />';

                    }
                },
                IntCharge: {
                    title: 'SC Charge',
                    width: '5%',
                    display: function (data) {
                        return '<input type="text" onblur="findIntCharge()" name="qtyIntCharge" onchange="TextChange('+ "'" + data.record.LoanTrxID + "'" +')" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event,' + data.record.rowSl + ',' + "'" + 'IntCharge' + "'" + ');" style="width:100px" ' + 'id="IntCharge,' + data.record.LoanTrxID + '" SavingPaidProduct="IntCharge' + data.record.LoanTrxID + '" value="' + data.record.IntCharge + '" />';

                    }
                },
                IntDue: {
                    title: 'SC Recoverable',
                    width: '5%',
                    display: function (data) {
                        return '<input type="text" onblur="findIntDue()" name="qtyIntDue" onchange="TextChange('+ "'" + data.record.LoanTrxID + "'" +')" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event,' + data.record.rowSl + ',' + "'" + 'IntDue' + "'" + ');" style="width:100px" ' + 'id="IntDue,' + data.record.LoanTrxID + '" SavingPaidProduct="LoanTrxID' + data.record.LoanTrxID + '" value="' + data.record.IntDue + '" />';

                    }
                },
                IntPaid: {
                    title: 'SC Paid',
                    width: '5%',
                    display: function (data) {
                        return '<input type="text" onblur="findIntPaid()" name="qtyIntPaid" onchange="TextChange('+ "'" + data.record.LoanTrxID + "'" +')" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event,' + data.record.rowSl + ',' + "'" + 'IntPaid' + "'" + ');" style="width:100px" ' + 'id="IntPaid,' + data.record.LoanTrxID + '" SavingPaidProduct="IntPaid' + data.record.LoanTrxID + '" value="' + data.record.IntPaid + '" />';

                    }
                },

                InstallmentNo: {
                    title: 'Inst.No',
                    width: '6%',
                    display: function (data) {
                        return '<input type="text" name="qtyInstallmentNo" onchange="TextChange('+ "'" + data.record.LoanTrxID + "'" +')" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event,' + data.record.rowSl + ',' + "'" + 'InstallmentNo' + "'" + ');" style="width:100px" ' + 'id="InstallmentNo,' + data.record.LoanTrxID + '" SavingPaidProduct="InstallmentNo' + data.record.LoanTrxID + '" value="' + data.record.InstallmentNo + '" />';

                    }
                },

                TrxType: {
                    title: 'Trx Type',
                    width: '5%',
                    display: function (data) {
                        return '<input type="text" onchange="TextChange('+ "'" + data.record.LoanTrxID + "'" +')" onkeypress="return checkNumberic(event);" onkeydown="return goNextRow(event,' + data.record.rowSl + ',' + "'" + 'TrxType' + "'" + ');" style="width:100px" ' + 'id="TrxType,' + data.record.LoanTrxID + '" SavingPaidProduct="TrxType' + data.record.LoanTrxID + '" value="' + data.record.TrxType + '" />';

                    }
                },


                CreateUser: {
                    title: '',
                    width: '5%',
                    display: function (data) {
                        //return '<input type="text" readonly="readonly"   style="width:100px" ' + 'id="CreateUser,' + data.record.LoanTrxID + '" SavingPaidProduct="CreateUser' + data.record.LoanTrxID + '" value="' + data.record.CreateUser + '" />';
                        return '<input type="text" style="color:white;width:5px;" ' + 'id="CreateUser,' + data.record.LoanTrxID + '" SavingPaidProduct="CreateUser' + data.record.LoanTrxID + '" value="" />';


                    }
                }
            }
        });
        //$('#grid').jtable('load');

        //END Start






        // AUTO Complete for Member SELECTION
        $("#memberAutoComplete").blur(function () {
            var member = $("#memberAutoComplete").val();
            var CenterId = $("#ddlCenter option:selected").val();
            if (CenterId == "0" || CenterId == "") {
                return;
            }


            if (member.length > 0) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetMemberListAuto", "LoanInstallmentCorrection", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { memberid: member, centerId: CenterId },
                    minLength: 1,
                    success: function (data) {
                        if (data.length == 1) {
                            $("#memberAutoComplete").val(data[0].MemberName);
                            $("#hdnMemberID").val(data[0].MemberID);

                            // alert(data[0].MemberID);
                            if ($("#ddlCenter option:selected").val() > 0 && data[0].MemberID > 0) {
                                GetProduct();
                                //GetProductList(data[0].MemberID, $("#CenterID").val());
                                //$('#PrincipalLoan').val(parseFloat(0));
                            }
                            else {
                                //$("#ddlProd").empty();
                            }

                        }
                        else if (data.length == 0) {
                            // alert("No member found.");
                            $("#hdnMemberID").val("");
                        }
                        else {
                            // alert("More than one member found with the given Member code.");
                            $("#hdnMemberID").val("");
                        }
                    }
                });
            }
        });
        $("#memberAutoComplete").autocomplete({

            source: function (request, response) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetMemberListAuto", "LoanInstallmentCorrection", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { memberid: request.term, centerId: $("#ddlCenter option:selected").val() },
                    minLength: 1,
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.MemberID,
                                label: item.MemberName
                            };
                            //response(data);
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            },
            focus: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                $("#hdnMemberID").val(ui.item.value);

                GetProduct();

                return false;
            },
            change: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                $("#hdnMemberID").val(ui.item.value);
                return false;
            }
        });

        // END Auto Complete




    });// End Document Ready
</script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="LoggedInUser" value="" />
    <input type="hidden" id="TransactionDate" />
    <input type="hidden" id="LoanSummaryID" value="" />
    <input type="hidden" id="MemberCategoryID" value="" />


    <fieldset>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Select Center", new { @class = "control-label" })
                    @Html.DropDownList("CenterList", null, new { @ID = "ddlCenter", @class = "form-control" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Member", htmlAttributes: new { @class = "control-label" })
                    @* @Html.DropDownList("MemberList", null, new { @ID = "ddlMember", @class = "form-control" })*@



                    @Html.TextBox("memberAutoComplete", "", new { @class = "form-control" })
                    <input type="hidden" id="hdnMemberID" value="0" />

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Select Product", new { @class = "control-label" })
                    @Html.DropDownList("ProductListByMember", null, new { @ID = "ddlProd", @class = "form-control" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Select LoanTerm", new { @class = "control-label" })
                    @Html.DropDownList("LoanTermList", null, new { @ID = "ddlLoanTerm", @class = "form-control" })
                </div>
            </div>
        </div>

    </fieldset>


    <h2 class="page-title"></h2>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group from-action">
                <input type="submit" value="View" class="btn btn-primary" id="btnView" />
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-xs-2">
            <label for="ex1">Disburse Amount</label>
            <input type="number" name="total" id="totalPrincipalLoan" class="form-control" readonly="readonly" />
        </div>

        <div class="col-xs-2">
            <label for="ex1">Total Prin. Recoverable</label>
            <input type="number" name="total" id="totalLoanDue" class="form-control" readonly="readonly" />
        </div>

        <div class="col-xs-2">
            <label for="ex1">Total Prin. Paid</label>
            <input type="number" name="total" id="totalLoanPaid" class="form-control" readonly="readonly" />
        </div>

        <div class="col-xs-2">
            <label for="ex1">Total S. Charge</label>
            <input type="number" name="total" id="totalIntCharge" class="form-control" readonly="readonly" />
        </div>

        <div class="col-xs-2">
            <label for="ex1">Total SC Recoverable</label>
            <input type="number" name="total" id="totalIntDue" class="form-control" readonly="readonly" />
        </div>

        <div class="col-xs-2">
            <label for="ex1">Total SC Paid</label>
            <input type="number" name="total" id="totalIntPaid" class="form-control" readonly="readonly" />
        </div>

    </div>
    <div class="row">

        <div class="col-xs-2">
            <label for="ex1">Total Outstanding</label>
            <input type="number" name="total" id="totalBalance1" class="form-control" readonly="readonly" />
        </div>

        <div class="col-xs-2">
            <label for="ex1">Total Due</label>
            <input type="number" name="total" id="totalBalance2" class="form-control" readonly="readonly" />
        </div>

        <div class="col-xs-2">
            <label for="ex1">Total Advance</label>
            <input type="number" name="total" id="totalBalance3" class="form-control" readonly="readonly" />
        </div>

        <div class="col-xs-2">
            <label for="ex1">Max Inst.No</label>
            <input type="number" name="total" id="totalBalance4" class="form-control" readonly="readonly" />
        </div>

    </div>

    <div class="row">
        <div id="grid"></div>
    </div>

    <div class="row" id="dvgridButton">
        <div class="col-md-12">
            <div class="form-group from-action">

                <input type="button" value="Save" class="btn btn-primary" onclick="SaveAndReload();" />

                &nbsp;&nbsp; <input type="button" value="Add New" class="btn btn-primary" id="btnAddNew" />
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jtable")
}

