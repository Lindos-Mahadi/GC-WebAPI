@model gBanker.Web.ViewModels.ProductViewModelEditMode

@{
    ViewBag.Title = "Product Edit";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
     //var investors = (System.Collections.Generic.IEnumerable<SelectListItem>)ViewBag.investorList;
}



<script type="text/javascript">
    $(document).ready(function () {
       // $("#CreateDate").datepicker();
        gBankerDatePicker("CreateDate");
    });


</script>

@Html.ActionLink("Back to List", "Index", null, new { @class = "pull-right" })
<h2 class="page-title">Edit Product</h2>

@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="">
     
    
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="display :none">
            @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductFullNameEng, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.ProductFullNameEng, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductFullNameEng, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductShortNameBng, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.ProductShortNameBng, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductShortNameBng, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductFullNameBng, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.ProductFullNameBng, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductFullNameBng, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductType, htmlAttributes: new { @class = "control-label" })

                    @Html.DropDownListFor(model => model.ProductType, Model.PInvestorListItems, new { @class = "form-control" })
                    @*@Html.EditorFor(model => model.InvestorID, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.ProductType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.InterestRate, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.InterestRate, new { htmlAttributes = new { @class = "form-control", defaultValue = "0" } })
                    @Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", defaultValue = "0" } })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MainProductCode, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.MainProductCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MainProductCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MainItemName, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.MainItemName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MainItemName, "", new { @class = "text-danger" })
                </div>
            </div>
           
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.LoanInstallment, htmlAttributes: new { @class = "control-label" })
                    @*@Html.DisplayFor(x => string.Format("{0000.00000}", x.LoanInstallment));*@
                    @*@Html.EditorFor(model => string.Format("{0000.000000}", model.LoanInstallment), new { htmlAttributes = new { @class = "form-control", defaultValue = "0" } });*@
                    @Html.EditorFor(model => model.LoanInstallment, new { htmlAttributes = new { @class = "form-control", defaultValue = "0" } })
                    @Html.ValidationMessageFor(model => model.LoanInstallment, "", new { @class = "text-danger" })
                    
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.InterestInstallment, htmlAttributes: new { @class = "control-label" })
                    @*@Html.DisplayFor(x => string.Format("{0000.00000}", x.InterestInstallment));*@
                    @*@Html.EditorFor(model => string.Format("{0000.000000}", model.InterestInstallment), new { htmlAttributes = new { @class = "form-control", defaultValue = "0" } });*@
                    @Html.EditorFor(model => model.InterestInstallment, new { htmlAttributes = new { @class = "form-control", defaultValue = "0"} })
                    @Html.ValidationMessageFor(model => model.InterestInstallment, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    
                   
                        @Html.LabelFor(model => model.SavingsInstallment, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.SavingsInstallment, new { htmlAttributes = new { @class = "form-control", defaultValue = "0" } })
                        @Html.ValidationMessageFor(model => model.SavingsInstallment, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.MinLimit, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.MinLimit, new { htmlAttributes = new { @class = "form-control", defaultValue = "0" } })
                    @Html.ValidationMessageFor(model => model.MinLimit, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.MaxLimit, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.MaxLimit, new { htmlAttributes = new { @class = "form-control", defaultValue = "0" } })
                    @Html.ValidationMessageFor(model => model.MaxLimit, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.InterestCalculationMethod, htmlAttributes: new { @class = "control-label" })

                    @Html.DropDownListFor(model => model.InterestCalculationMethod, Model.PCalcuationMethodListItems, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InterestCalculationMethod, "", new { @class = "text-danger" })
                </div>
            </div>
             
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.PaymentFrequency, htmlAttributes: new { @class = "control-label" })

                    @Html.DropDownListFor(model => model.PaymentFrequency, Model.PFrequencyListItems, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.PaymentFrequency, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.InsuranceItemCode, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.InsuranceItemCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InsuranceItemCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.InsuranceItemRate, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.InsuranceItemRate, new { htmlAttributes = new { @class = "form-control", defaultValue = "0" } })
                    @Html.ValidationMessageFor(model => model.InsuranceItemRate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.GracePeriod, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.GracePeriod, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GracePeriod, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.SubMainCategory, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.SubMainCategory, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubMainCategory, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.LateFeePercentage, htmlAttributes: new { @class = "control-label" })
                    
                    @Html.EditorFor(model => model.LateFeePercentage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LateFeePercentage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
            @*<div class="form-group">
                @Html.LabelFor(model => model.CreateUser, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreateUser, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreateUser, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.parentInvestor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.parentInvestor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.parentInvestor, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="form-group form-action">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>

        </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/gbUtility")
}
