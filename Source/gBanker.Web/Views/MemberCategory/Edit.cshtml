@model gBanker.Web.ViewModels.MemberCategoryViewModel

@{
    ViewBag.Title = "MemberCategory Edit";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

@Html.ActionLink("Back to List", "Index", null, new { @class = "pull-right" })

<h2 class="page-title">Edit Member Category</h2>



@using (Html.BeginForm("Edit", "Membercategory", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  
        <div class="form-group" style=" display:none">
            @Html.LabelFor(model => model.MemberCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberCategoryID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MemberCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MemberCategoryCode, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.MemberCategoryCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MemberCategoryCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryShortName, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.CategoryShortName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CategoryShortName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryNameBng, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.CategoryNameBng, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CategoryNameBng, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryShortNameBng, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.CategoryShortNameBng, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CategoryShortNameBng, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AdmissionFee, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.AdmissionFee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdmissionFee, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LoanFormFee, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.LoanFormFee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LoanFormFee, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PassBookFee, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.PassBookFee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PassBookFee, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
            <div class="form-group" style="display:none">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none">
                @Html.LabelFor(model => model.InActiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InActiveDate, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.TextBoxFor(model => model.InActiveDate, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.InActiveDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="form-group form-action">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
}


@section Scripts {
   @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jqueryui")
}
