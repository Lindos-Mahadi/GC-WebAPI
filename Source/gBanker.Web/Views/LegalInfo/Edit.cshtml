@model gBanker.Web.ViewModels.LegalInfoViewModel

@{
    ViewBag.Title = "Legal Info Create";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
    var product = Model == null ? null : Model.productListItems;

    var noAccount = Model == null ? null : Model.AccountListItems;

    var office = Model == null ? null : Model.officeListItems;

    var center = Model == null ? null : Model.centerListItems;

    var member = Model == null ? null : Model.memberListItems;

}
<script type="text/javascript">

    $(document).ready(function () {
        $("#CaseDate").datepicker(
            {
                dateFormat: "dd-M-yy",
                showAnim: "scale"
            });  
    });
</script>
@Html.ActionLink("Back to List", "Index", null, new { @class = "pull-right" })

<h2 class="page-title">Legal Info Update</h2>

@using (Html.BeginForm("Edit", "LegalInfo", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.OfficeID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.OfficeID, office, new { @class = "form-control", @Disabled = true })
                    @Html.ValidationMessageFor(model => model.OfficeID, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.OfficeID)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CenterID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.CenterID, center, new { @class = "form-control", @Disabled = true })
                    @Html.ValidationMessageFor(model => model.CenterID, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.CenterID)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Member", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.MemberID, member, new { @class = "form-control", @Disabled = true })
                    @Html.HiddenFor(model => model.MemberID)
                    @Html.ValidationMessageFor(model => model.MemberID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.ProductID, product, new { @class = "form-control", @Disabled = true })
                    @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ProductID)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CaseNo, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.CaseNo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CaseNo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CaseDate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CaseDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CaseDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-group form-action">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/gbUtility")

}