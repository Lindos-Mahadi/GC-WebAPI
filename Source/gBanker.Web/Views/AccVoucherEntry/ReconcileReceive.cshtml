@model gBanker.Web.ViewModels.AccVoucherEntryViewModel

@{
    ViewBag.Title = "Reconcile Received";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
    var Vtype = Model == null ? null : Model.VoucherTypeList;
    var TrxType = Model == null ? null : Model.TransactionTypeList;
    var ReffNoList = Model == null ? null : Model.ReffNoList;
    var OfficeList = Model == null ? null : Model.OfficeList;
    var ReconPurposeList = Model == null ? null : Model.ReconPurposeList;
}

<style type="text/css">
    #ShowReconcile {
        display: none;
    }

    .tHead {
        /*background-color: #D8D8D8;*/
        font-family: Calibri;
        color: Black;
        font-weight: bold;
        font-size: 15px;
        padding: 3px 18px 3px 10px;
        border-bottom: 1px solid black;
        background: -webkit-linear-gradient(top, #FFFFFF, #ACACAC);
        margin: 50px;
        /*vertical-align: top;
        margin-top: 0px !important;
        padding-top: 0px !important;*/
    }

    .tFoot {
        background: linear-gradient(to bottom,#78b1ed 0%,#417bb5 100%);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#78b1ed',endColorstr='#417bb5',GradientType=0);
        border-color: #2b5177;
        font-family: Arial;
        color: #fff;
        font-weight: bold;
        font-size: 12px;
        padding: 3px 18px 3px 10px;
        border-bottom: 1px solid black;
    }

    #tableRow {
        font-family: Arial;
        color: Black;
        font-size: 12px;
        /*height:25px;*/
    }

        #tableRow:nth-child(odd) {
            background-color: #E2E4FF;
        }

        #tableRow:nth-child(even) {
            background-color: white;
        }
</style>

<script type="text/javascript">
    function CheckVoucherType() {
        var vType = $("#VoucherType").val();
        if (vType == "Dr") {
            $("#Debit").prop("readonly", false);
            $("#Credit").prop("readonly", true);
            $("#Credit").val(0);
        }
        else if (vType == "Cr") {
            $("#Debit").prop("readonly", true);
            $("#Credit").prop("readonly", false);
            $("#Debit").val(0);
        }
        //else if (vType == "Jr") {
        //    $("#Debit").prop("readonly", false);
        //    $("#Credit").prop("readonly", false);
        //}
    }
    function CheckVoucherTypeLoad() {
        var vType = $("#VoucherType").val();
        if (vType == "Dr") {
            $("#Debit").prop("readonly", true);
            $("#Credit").prop("readonly", false);
            //$("#Credit").val(0);
        }
        else if (vType == "Cr") {
            $("#Debit").prop("readonly", false);
            $("#Credit").prop("readonly", true);
           // $("#Debit").val(0);
        }
        //else if (vType == "Jr") {
        //    $("#Debit").prop("readonly", false);
        //    $("#Credit").prop("readonly", false);
        //}
    }

    //Reconcile
    function ShowReconcile() {
        //var IsReconcile = $("#IsReconcile").is(":checked") ? true : false;
        var IsReconcile = true;
        if (IsReconcile == true) {
            $("#ShowReconcile").show();
        } else {
            $("#ShowReconcile").hide();
        }

    }
    function GetVoucher() {
        var ReffNo = $("#ReffNo").val();
        var ddlHOOffice = $("#VoucherType");
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetVoucherTypeReconcile", "AccVoucherEntry", "http")',
            data: { ReffNo: ReffNo },
            dataType: 'json',
            async: true,
            success: function (data) {
                ddlHOOffice.html('');
                $.each(data, function (id, option) {
                    ddlHOOffice.append($('<option></option>').val(option.Value).html(option.Text));
                    //alert(option.value);
                    //if (option.value == "Dr") {
                    //    $("#Debit").prop("readonly", true);
                    //    $("#Credit").prop("readonly", false);
                    //    $("#Credit").val(0);
                    //}
                    //else if (option.value == "Cr") {
                    //    $("#Debit").prop("readonly", false);
                    //    $("#Credit").prop("readonly", true);
                    //    $("#Debit").val(0);
                    //}


                });
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }
    function ReffNoWiseOffice() {

        var ReffNo = $("#ReffNo").val();
        var url = ""; var Data = {};

        if (ReffNo == "") {
            url = '/AccVoucherEntry/Js_OfficeList';
            Data = {};
        } else {
            url = '/AccVoucherEntry/ReffNoWiseOffice';
            Data = JSON.stringify({ 'ReffNo': ReffNo });
        }
        var item = "";
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: url,
            data: Data,
            dataType: "json",
            async: false,
            cache: false,
            success: function (data) {

                if (data.viewOffice.length > 0) {
                    $.each(data.viewOffice, function (i, v) {
                        item = item + '<option value="' + v.Value + '">' + v.Text + '</option>'
                    });
                }
                $("#SenderOfficeId").html(item);
                $("#ReDebit").val(data.ReDebit);
                $("#ReCredit").val(data.ReCredit);
                $("#Debit").val(data.vDebit);
                $("#Credit").val(data.vCredit);
                //alert(data.vCredit);
            },
            error: function (request, status, error) {

            }
        });
    }
    function SenderOrReceiveReconcile() {

        $("#lblOfficeSenderType").html('Receiver Office');
        var hasReffNo = $("#ReffNo").val();
        if (hasReffNo != "") {
            $("#lblOfficeSenderType").html('Sender Office');
        } else {
            $("#lblOfficeSenderType").html('Receive Office');
        }
    }
    function ValidReconcile() {
        var IsValid = false;
        var ReffNo = $("#ReffNo").val();
        //var ReDebit = $("#ReDebit").val();
        //var ReCredit = $("#ReCredit").val();
        var ReDebit = $('label[for=TotDebit]').html();
        var ReCredit = $('label[for=TotCredit]').html();
        var VoucherType = $("#TransactionType").val();
        var totDebit = Math.round(ReDebit);
        var totCredit = Math.round(ReCredit);
        var sl = 1;
        var tbl = $("#tblTrxDetails tbody tr");
        if (VoucherType != 'Ca')
        {
            if (ReffNo && (ReDebit == totCredit && ReCredit == totDebit)) {
                IsValid = true;
            } else if (ReffNo == '') {
                IsValid = true;
            } else {
                IsValid = false;
            }
        }
        else
        {
            IsValid = true;
        }

        var rData = {};
        rData.IsValid = IsValid;
        rData.totDebit = totDebit;
        rData.totCredit = totCredit;
        return rData;
    }
    //Reconcile

    function CheckVoucherTypeBank() {
        var vType = $("#TransactionType").val();
        if (vType == "Ba") {
            $("#txtBAccCode").prop("disabled", false)

        }
        else  {
            $("#txtBAccCode").prop("disabled", true)
            $("#BAccID").val('');
            $("#txtBAccCode").val('');
        }
    }
    function SaveVoucherDetail(Trx_Master_ID) {

        var allDetails = new Array();
        var $allInputs = $('input[type="text"]');
        //var $allSelect = $('select');
        //var $allLabels = $('label');
        $allInputs.each(function () {
            var value = $(this).val();
            var id = $(this).attr('id');
            var obj = new Object();
            obj.Key = id;
            obj.Value = value;
            allDetails[allDetails.length] = obj;
        });

        var $allId = $('input[type="hidden"]');

        var allIds = new Array();

        $allId.each(function () {
            var value = $(this).val();
            allIds[allIds.length] = value;
        });


        var allTrx = new Object();
        allTrx.allTrx = allDetails;
        allTrx.allVoucherId = allIds;
        allTrx.MasterId = Trx_Master_ID;

        var json = JSON.stringify(allTrx);

        //$body.addClass("loading");
        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("SaveVoucherDetailsReconcile", "AccVoucherEntry", "http")',
            type: "POST",
            dataType: 'json',
            async: true,
            data: json,

            success: function (Result) {
                $("#loading").hide();
                //field clear

                var msg;
                if (Result != '') {
                    msg = Result;
                    $("#Reference").val('');
                    $("#VoucherDesc").val('');
                    $("#ReffNo").val('');
                    $("#SenderOfficeId").val('');
                    $("#TransactionType").val('');

                    $('#tblTrxDetails').find('tbody').empty();
                    $("#DivTableView").hide();
                }
                else {
                    msg = 'Fail to save';
                }

                $("#dialog-message").html('<p><span class="ui-icon ui-icon-circle-check" style="float:left; margin:0 7px 50px 0;"></span>' + msg + '</p>');
                $("#dialog-message").dialog({
                    modal: true,
                    buttons: {
                        Ok: function () {
                            $(this).dialog("close");
                        }
                    }
                });

            },
            error: function (err) {
                $("#loading").hide();
                $("#dvMessage").attr('class', 'failed');
                $("#dvMessage").html(request.statusText);
                $("#dvMessage").show();
            }
        });
    }
    function SaveCashVoucher() {

        var trx_dt = $("#TrxDate").val();
        var offc_id = $("#OfficeID").val();
        var voucher_type = $("#VoucherType").val();
        var transaction_type = $("#TransactionType").val();
        var reference = $("#Reference").val();
        var voucher_desc = $("#VoucherDesc").val();
        var rectify = $("#IsRectify").is(":checked") ? "true" : "false";


        var allDetails = new Array();
        var $allInputs = $('input[type="text"]');
        $allInputs.each(function () {
            var value = $(this).val();
            var id = $(this).attr('id');
            var obj = new Object();
            obj.Key = id;
            obj.Value = value;
            allDetails[allDetails.length] = obj;
        });

        var $allId = $('input[type="hidden"]');
        var allIds = new Array();

        $allId.each(function () {
            var value = $(this).val();
            allIds[allIds.length] = value;
        });

        var allTrx = new Object();
        allTrx.allTrx = allDetails;
        allTrx.allVoucherId = allIds;

        allTrx.trx_dt = trx_dt;
        allTrx.offc_id = offc_id;
        allTrx.transaction_type = transaction_type;
        allTrx.reference = reference;
        allTrx.voucher_desc = voucher_desc;
        allTrx.rectify = rectify;

        var json = JSON.stringify(allTrx);

        //$body.addClass("loading");
        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("SaveCashVoucherReconcile", "AccVoucherEntry", "http")',
            type: "POST",
            dataType: 'json',
            async: true,
            data: json,

            success: function (Result) {
                $("#loading").hide();

                var msg;
                if (Result != '') {
                    msg = Result;
                    //field clear
                    $("#Reference").val('');
                    $("#VoucherDesc").val('');
                    $('#tblTrxDetails').find('tbody').empty();
                    $("#DivTableView").hide();
                }
                else {
                    msg = 'Fail to save';
                }

                $("#dialog-message").html('<p><span class="ui-icon ui-icon-circle-check" style="float:left; margin:0 7px 50px 0;"></span>' + msg + '</p>');
                $("#dialog-message").dialog({
                    modal: true,
                    buttons: {
                        Ok: function () {
                            $(this).dialog("close");
                        }
                    }
                });



            },
            error: function (err) {
                $("#loading").hide();
                $("#dvMessage").attr('class', 'failed');
                $("#dvMessage").html(request.statusText);
                $("#dvMessage").show();
            }
        });
    }
    function delete_row(row_index) {
        //e.preventDefault();
        var x = confirm("Are you sure you want to delete?");
        if (x == true) {
            var dtTable = $('#tblTrxDetails');
            var allDetails = new Array();
            var $allInputs = $('input[type="text"]');
            $allInputs.each(function () {
                var value = $(this).val();
                var id = $(this).attr('id');
                var obj = new Object();
                obj.Key = id;
                obj.Value = value;
                allDetails[allDetails.length] = obj;
            });
            var $allId = $('input[type="hidden"]');
            var allIds = new Array();
            $allId.each(function () {
                var value = $(this).val();
                allIds[allIds.length] = value;
            });

            var allTrx = new Object();
            allTrx.allTrx = allDetails;
            allTrx.allVoucherId = allIds;
            allTrx.row_index = row_index;

            var json = JSON.stringify(allTrx);
            $.ajax({
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("DeleteTrxDetailReconcile", "AccVoucherEntry", "http")',
                data: json,
                dataType: 'json',
                async: true,
                success: function (List_AccVoucherEntryViewModel) {
                    var tableBody = dtTable.find('tbody');
                    var TotDebit = 0;
                    var TotCredit = 0;
                    tableBody.empty();
                    $.each(List_AccVoucherEntryViewModel, function (index, acc) {
                        var sl = index + 1;
                        tableBody.append('<tr id="tableRow">' +
                                             '<td style="text-align:center; padding-top: 5px; padding-bottom: 5px;">' + sl + '</td>' +
                                             '<td>' + acc.AccFullName + '<input type="text" value="' + acc.AccFullName + '" style="display:none;" name="AccFullName" id="txtAccFullNameId' + sl + '" /></td>' +
                                             '<td>' + acc.Narration + ' <input type="text" value="' + acc.Narration + '" style="display:none;" name="Narration" id="txtNarrationId' + sl + '" /></td>' +
                                             '<td style="text-align:right;">' + acc.Debit + '<input type="text" value="' + acc.Debit + '" style="display:none;" name="Debit" id="txtDebitId' + sl + '" /></td>' +
                                             '<td style="text-align:right;">' + acc.Credit + '<input type="text" value="' + acc.Credit + '" style="display:none;" name="Credit" id="txtCreditId' + sl + '" />' +
                                                                '<input type="text" value="' + acc.AccID + '" style="display:none;" name="AccID" id="txtAccId' + sl + '" />' +
                                                                '<input type="text" value="' + acc.AccMode + '" style="display:none;" name="AccMode" id="txtAccModeId' + sl + '" />' +
                                                                '<input type="text" value="' + acc.TrxDetailsID + '" style="display:none;" name="TrxDetailsID" id="txtTrxDetailsID' + sl + '" />' +
                                                                '<input type="hidden" value="' + sl + '" /></td>' +
                                             '<td style="text-align:center;"><a href="javascript:;" onclick="delete_row(' + sl + ')"><img alt="Delete" src="../../Scripts/jtable/themes/basic/delete.png")"/></a></td>' +
                                             '</tr>')
                        TotDebit = TotDebit + acc.Debit;
                        TotCredit = TotCredit + acc.Credit;
                    })
                    $('label[for=TotDebit]').html(TotDebit);
                    $('label[for=TotCredit]').html(TotCredit);
                    $("#DivTableView").show();
                },
                error: function (request, status, error) {
                    $("#loading").hide();
                    $("#dvMessage").attr('class', 'failed');
                    $("#dvMessage").html(request.statusText);
                    $("#dvMessage").show();
                }
            });
        }
        else {
            return false;
        }

    }
    $(document).ready(function () {
        ReffNoWiseOffice();
        GetVoucher();
        //var MyReffNo = $("#ReffNo option:selected").val();
        //if (MyReffNo == "") {
        //    $("#VoucherType option[value='Dr']").prop('selected', 'selected');
        //}
        //else {
        //    $("#VoucherType option[value='Cr']").prop('selected', 'selected');
        //}
        //$("#VoucherType").prop("disabled", true);

        $("#loading").hide();
        $("#DivTableView").hide();
        CheckVoucherTypeLoad();
        $("#VoucherNo").prop("readonly", true);
        $("#VoucherType").change(function () {
            CheckVoucherType();
        });


        $('#IsReconcile').change(function () {
            ShowReconcile();
        })
        $("#ReffNo").change(function (e) {
            e.preventDefault();
            SenderOrReceiveReconcile();
            ReffNoWiseOffice();
            GetVoucher();

            //
            //var KReffNo = $("#ReffNo option:selected").val();
            //if (KReffNo == "") {
            //    $("#VoucherType option[value='Dr']").prop('selected', 'selected');
            //}
            //else {
            //    $("#VoucherType option[value='Cr']").prop('selected', 'selected');
            //}
            $("#VoucherType").prop("disabled", true);


            var vType = $("#VoucherType").val();
            if (vType == "Dr") {
                $("#Debit").prop("readonly", false);
                $("#Credit").prop("readonly", true);
                //$("#Credit").val(0);
            }
            else if (vType == "Cr") {
                $("#Debit").prop("readonly", true);
                $("#Credit").prop("readonly", false);
                //$("#Debit").val(0);
            }

            //var TransactionType = $("#VoucherType").val();



            //
        });

        $('#TransactionType').change(function () {
            CheckVoucherTypeBank();

            var TransactionType = $("#TransactionType").val();
            if (TransactionType == "Jr") {
                $('#VoucherType').prop("disabled", false)
                $("#VoucherType").append($('<option></option>').val('Dr').html('Debit'));
                //$("#VoucherType").append($('<option></option>').val('Cr').html('Credit'));
                $("#VoucherType option[value='Dr']").prop('selected', 'selected');
                $("#VoucherType option[value='Cr']").prop('selected', 'selected');
                $("#VoucherType option[value='Jr']").prop('selected', 'selected');
            }
            else
            {
                GetVoucher();
                $('#VoucherType').prop("disabled", false)
                $("#VoucherType option[value='Dr']").prop('selected', 'selected');
                $("#VoucherType option[value='Cr']").prop('selected', 'selected');
                $("#VoucherType option[value='Jr']").prop('selected', 'selected');
               
            }

            var vType = $("#VoucherType").val();
            if (vType == "Dr") {
                $("#Debit").prop("readonly", false);
                $("#Credit").prop("readonly", true);
               // $("#Credit").val(0);
            }
            else if (vType == "Cr") {
                $("#Debit").prop("readonly", true);
                $("#Credit").prop("readonly", false);
                //$("#Debit").val(0);
            }
        });
        @*$("#btnNewVoucher").click(function (e) {
            e.preventDefault();
            $("#loading").show();
            //alert($("#TrxDate").val());
            if ($("#TrxDate").val() != '1/1/0001 12:00:00 AM') {
                var offc_id = $("#OfficeID").val();
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetNewVoucher", "AccVoucherEntry", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { offc_id: offc_id },
                    success: function (latest_voucher) {
                        $("#loading").hide();
                        $("#VoucherNo").val(latest_voucher);
                        //alert(latest_voucher);
                    },
                    error: function (request, status, error) {
                        $("#loading").hide();
                        $("#dvMessage").attr('class', 'failed');
                        $("#dvMessage").html(request.statusText);
                        $("#dvMessage").show();
                    }
                });
            }
            else {
                $("#loading").hide();
                alert('Please define Transaction Date.');
            }
        });*@

        $("#txtAccCode").autocomplete({

            source: function (request, response) {

                var IsReconcile = $("#IsReconcile").is(":checked") ? true : false;
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetAccCode", "AccVoucherEntry", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { acc_code: request.term, OfficeLevel: $("#OfficeLevel").val(), TransactionType: $("#TransactionType").val(),IsReconcile :  true },
                    minLength: 1,
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.AccID,
                                label: item.AccFullName
                            };
                            //response(data);
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            },
            focus: function (event, ui) {
                $("#txtAccCode").val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                $("#txtAccCode").val(ui.item.label);
                $("#AccID").val(ui.item.value);
                return false;
            },
            change: function (event, ui) {
                $("#txtAccCode").val(ui.item.label);
                $("#AccID").val(ui.item.value);
                return false;
            }
        });

        $("#txtBAccCode").autocomplete({

            source: function (request, response) {


                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetBankAccCode", "AccVoucherEntry", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { acc_code: request.term, OfficeLevel: $("#OfficeLevel").val(), TransactionType: $("#TransactionType").val() },
                    minLength: 1,
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.AccID,
                                label: item.AccFullName
                            };
                            //response(data);
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            },
            focus: function (event, ui) {
                $("#txtBAccCode").val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                $("#txtBAccCode").val(ui.item.label);
                $("#BAccID").val(ui.item.value);
                return false;
            },
            change: function (event, ui) {
                $("#txtBAccCode").val(ui.item.label);
                $("#BAccID").val(ui.item.value);
                return false;
            }
        });
               $('#btnAdd').click(function (e) {
            $("#loading").show();
            e.preventDefault();
            //$("#TransactionType").prop("readonly", true);
            $('#TransactionType').prop("disabled", true)

            var dr, cr;
            if ($('#Debit').val() != '')
                dr =  $('#Debit').val();
            else
                dr = '0';
            if ($('#Credit').val() != '')
                cr = $('#Credit').val();
            else
                cr = '0';
            var accCode = $("#txtAccCode").val();
            var narration = $("#Narration").val();
            //var debit = $("#Debit").val();
            //var credit = $("#Credit").val();
            var accId = $("#AccID").val();
            var BaccId = $("#BAccID").val();
            var voucher_type = $("#VoucherType").val();
            var transaction_type = $("#TransactionType").val();
            var dtTable = $('#tblTrxDetails');
            var IsReconcile = $("#IsReconcile").is(":checked") ? true : false;
            var voucher_Desc = $("#Narration").val();
            if (voucher_Desc == "")
            {
                $("#loading").hide();
                $("#dvMessage").attr('class', 'failed');
                $("#dvMessage").html('Voucher Description Can not be Empty');
                $("#dvMessage").show();

            }
            //if ($('#VoucherNo').val() != "") {
            if (transaction_type == "Ba")
            {
                if (BaccId == "") {
                    $("#loading").hide();
                    $("#dvMessage").attr('class', 'failed');
                    $("#dvMessage").html('Please select account code');
                    $("#dvMessage").show();

                }
                else {

                    if ((accCode != "" && voucher_Desc!="" )&& accId > 0 ) {
                        if (dr > 0 || cr > 0) {
                            //var voucher_type = $("#VoucherType").val();
                            //$("#VoucherType").prop("disabled", true);
                            var allDetails = new Array();
                            var $allInputs = $('input[type="text"]');
                            $allInputs.each(function () {
                                var value = $(this).val();
                                var id = $(this).attr('id');
                                var obj = new Object();
                                obj.Key = id;
                                obj.Value = value;
                                allDetails[allDetails.length] = obj;
                            });
                            var $allId = $('input[type="hidden"]');
                            var allIds = new Array();
                            $allId.each(function () {
                                var value = $(this).val();
                                allIds[allIds.length] = value;
                            });

                            var allTrx = new Object();
                            allTrx.allTrx = allDetails;
                            allTrx.allVoucherId = allIds;
                            allTrx.NewAccFullName = accCode;
                            allTrx.NewNarration = narration;
                            allTrx.NewDebit = dr;
                            allTrx.NewCredit = cr;
                            allTrx.NewAccID = accId;
                            allTrx.VoucherType = voucher_type;
                            allTrx.TransactionType = transaction_type;
                            allTrx.BAccid = BaccId;

                            if (IsReconcile) {
                                allTrx.IsReconcileData = "Y";
                            } else {
                                allTrx.IsReconcileData = "N";
                            }


                            var json = JSON.stringify(allTrx);

                            $.ajax({
                                type: 'POST',
                                contentType: "application/json; charset=utf-8",
                                url: '@Url.Action("AddVoucherItem", "AccVoucherEntry", "http")',
                                data: json,
                                dataType: 'json',
                                async: true,
                                success: function (List_AccVoucherEntryViewModel) {
                                    $("#loading").hide();
                                    var tableBody = dtTable.find('tbody');
                                    var TotDebit = 0;
                                    var TotCredit = 0;
                                    tableBody.empty();
                                    $.each(List_AccVoucherEntryViewModel, function (index, acc) {
                                        var sl = index + 1;
                                        tableBody.append('<tr id="tableRow">' +
                                                     '<td style="text-align:center; padding-top: 5px; padding-bottom: 5px;">' + sl + '</td>' +
                                                     '<td>' + acc.AccFullName + '<input type="text" value="' + acc.AccFullName + '" style="display:none;" name="AccFullName" id="txtAccFullNameId' + sl + '" /></td>' +
                                                     '<td>' + acc.Narration + ' <input type="text" value="' + acc.Narration + '" style="display:none;" name="Narration" id="txtNarrationId' + sl + '" /></td>' +
                                                     '<td style="text-align:right;">' + acc.Debit + '<input type="text" value="' + acc.Debit + '" style="display:none;" name="Debit" id="txtDebitId' + sl + '" /></td>' +
                                                     '<td style="text-align:right;">' + acc.Credit + '<input type="text" value="' + acc.Credit + '" style="display:none;" name="Credit" id="txtCreditId' + sl + '" />' +
                                                                        '<input type="text" value="' + acc.AccID + '" style="display:none;" name="AccID" id="txtAccId' + sl + '" />' +
                                                                        '<input type="text" value="' + acc.AccMode + '" style="display:none;" name="AccMode" id="txtAccModeId' + sl + '" />' +
                                                                        '<input type="text" value="' + acc.TrxDetailsID + '" style="display:none;" name="TrxDetailsID" id="txtTrxDetailsID' + sl + '" />' +
                                                                        '<input type="text" value="' + acc.IsReconcileDataID + '" style="display:none;" name="IsReconcileDataID" id="txtIsReconcileDataID' + sl + '" />' +
                                                                       '<input type="hidden" value="' + sl + '" /></td>' +
                                                     '<td style="text-align:center;"><a href="javascript:;" onclick="delete_row(' + sl + ')"><img alt="Delete" src="../../Scripts/jtable/themes/basic/delete.png")"/></a></td>' +
                                                     '</tr>')
                                        TotDebit =  TotDebit +acc.Debit;
                                        TotCredit =TotCredit +acc.Credit;
                                    })

                                    $('label[for=TotDebit]').html(parseFloat(TotDebit).toFixed(2));
                                    $('label[for=TotCredit]').html(parseFloat(TotCredit).toFixed(2));
                                    $("#DivTableView").show();
                                    //field clear
                                    $("#txtAccCode").val('');
                                    $("#AccID").val('');
                                    $("#Narration").val('');
                                    $("#Debit").val('');
                                    $("#Credit").val('');
                                    $("#BAccID").val('');
                                    $("#txtBAccCode").val('');

                                },
                                error: function (request, status, error) {
                                    $("#loading").hide();
                                    $("#dvMessage").attr('class', 'failed');
                                    $("#dvMessage").html(request.statusText);
                                    $("#dvMessage").show();
                                }
                            });
                        }
                        else {
                            $("#loading").hide();
                            $("#dvMessage").attr('class', 'failed');
                            $("#dvMessage").html('Both Debit and Credit amount cannot be 0.00');
                            $("#dvMessage").show();
                        }
                    }
                    else {
                        $("#loading").hide();
                        $("#dvMessage").attr('class', 'failed');
                        $("#dvMessage").html('Please select account code');
                        $("#dvMessage").show();
                    }
                }


            }

            else
            {

                if ((accCode != "" && voucher_Desc != "" )&& accId > 0) {
                    if (dr > 0 || cr > 0) {
                        //var voucher_type = $("#VoucherType").val();
                        //$("#VoucherType").prop("disabled", true);
                        var allDetails = new Array();
                        var $allInputs = $('input[type="text"]');
                        $allInputs.each(function () {
                            var value = $(this).val();
                            var id = $(this).attr('id');
                            var obj = new Object();
                            obj.Key = id;
                            obj.Value = value;
                            allDetails[allDetails.length] = obj;
                        });
                        var $allId = $('input[type="hidden"]');
                        var allIds = new Array();
                        $allId.each(function () {
                            var value = $(this).val();
                            allIds[allIds.length] = value;
                        });

                        var allTrx = new Object();
                        allTrx.allTrx = allDetails;
                        allTrx.allVoucherId = allIds;
                        allTrx.NewAccFullName = accCode;
                        allTrx.NewNarration = narration;
                        allTrx.NewDebit = dr;
                        allTrx.NewCredit = cr;
                        allTrx.NewAccID = accId;
                        allTrx.VoucherType = voucher_type;
                        allTrx.TransactionType = transaction_type;
                        allTrx.BAccid = BaccId;
                        if (IsReconcile) {
                            allTrx.IsReconcileData = "Y";
                        } else {
                            allTrx.IsReconcileData = "N";
                        }

                        var json = JSON.stringify(allTrx);

                        $.ajax({
                            type: 'POST',
                            contentType: "application/json; charset=utf-8",
                            url: '@Url.Action("AddVoucherItem", "AccVoucherEntry", "http")',
                            data: json,
                            dataType: 'json',
                            async: true,
                            success: function (List_AccVoucherEntryViewModel) {
                                $("#loading").hide();
                                var tableBody = dtTable.find('tbody');
                                var TotDebit = 0;
                                var TotCredit = 0;
                                tableBody.empty();
                                $.each(List_AccVoucherEntryViewModel, function (index, acc) {
                                    var sl = index + 1;
                                    tableBody.append('<tr id="tableRow">' +
                                                 '<td style="text-align:center; padding-top: 5px; padding-bottom: 5px;">' + sl + '</td>' +
                                                 '<td>' + acc.AccFullName + '<input type="text" value="' + acc.AccFullName + '" style="display:none;" name="AccFullName" id="txtAccFullNameId' + sl + '" /></td>' +
                                                 '<td>' + acc.Narration + ' <input type="text" value="' + acc.Narration + '" style="display:none;" name="Narration" id="txtNarrationId' + sl + '" /></td>' +
                                                 '<td style="text-align:right;">' + acc.Debit + '<input type="text" value="' + acc.Debit + '" style="display:none;" name="Debit" id="txtDebitId' + sl + '" /></td>' +
                                                 '<td style="text-align:right;">' + acc.Credit + '<input type="text" value="' + acc.Credit + '" style="display:none;" name="Credit" id="txtCreditId' + sl + '" />' +
                                                                    '<input type="text" value="' + acc.AccID + '" style="display:none;" name="AccID" id="txtAccId' + sl + '" />' +
                                                                    '<input type="text" value="' + acc.AccMode + '" style="display:none;" name="AccMode" id="txtAccModeId' + sl + '" />' +
                                                                    '<input type="text" value="' + acc.TrxDetailsID + '" style="display:none;" name="TrxDetailsID" id="txtTrxDetailsID' + sl + '" />' +
                                                                     '<input type="text" value="' + acc.IsReconcileDataID + '" style="display:none;" name="IsReconcileDataID" id="txtIsReconcileDataID' + sl + '" />' +
                                                                   '<input type="hidden" value="' + sl + '" /></td>' +
                                                 '<td style="text-align:center;"><a href="javascript:;" onclick="delete_row(' + sl + ')"><img alt="Delete" src="../../Scripts/jtable/themes/basic/delete.png")"/></a></td>' +
                                                 '</tr>')
                                    TotDebit = TotDebit + acc.Debit;
                                    TotCredit = TotCredit + acc.Credit;
                                })

                                $('label[for=TotDebit]').html(parseFloat(TotDebit).toFixed(2));
                                $('label[for=TotCredit]').html(parseFloat(TotCredit).toFixed(2));
                                $("#DivTableView").show();
                                //field clear
                                $("#txtAccCode").val('');
                                $("#AccID").val('');
                                $("#Narration").val('');
                                $("#Debit").val('');
                                $("#Credit").val('');
                                $("#BAccID").val('');
                                $("#txtBAccCode").val('');
                            },
                            error: function (request, status, error) {
                                $("#loading").hide();
                                $("#dvMessage").attr('class', 'failed');
                                $("#dvMessage").html(request.statusText);
                                $("#dvMessage").show();
                            }
                        });
                    }
                    else {
                        $("#loading").hide();
                        $("#dvMessage").attr('class', 'failed');
                        $("#dvMessage").html('Both Debit and Credit amount cannot be 0.00');
                        $("#dvMessage").show();
                    }
                }
                else {
                    $("#loading").hide();
                    $("#dvMessage").attr('class', 'failed');
                    $("#dvMessage").html('Please check accountcode/Description ');
                    $("#dvMessage").show();
                }

            }
            //}
            //else {
            //    $("#loading").hide();
            //    $("#dvMessage").attr('class', 'failed');
            //    $("#dvMessage").html('Voucher No field cannot be empty');
            //    $("#dvMessage").show();
            //}
        });



        $("#btnCreate").click(function (e) {
            $("#loading").show();
            e.preventDefault();
            ///// Reconcile
            var ReffNo = $("#ReffNo").val();
            var Purpose = $("#Purpose").val();
            var ReceivedOfficeId = $("#SenderOfficeId").val();
            var Debit = 0.0;
            var Credit = 0.0;
            //end Reconcile
            $('#TransactionType').prop("disabled", false)
            var row_cnt = $('#tblTrxDetails tbody tr').length;
            var trx_dt = $("#TrxDate").val();
            var offc_id = $("#OfficeID").val();
            var voucher_type = $("#VoucherType").val();
            var transaction_type = $("#TransactionType").val();
            //var voucher_no = $("#VoucherNo").val();
            var reference = $("#Reference").val();
            var voucher_desc = $("#VoucherDesc").val();
            var rectify = $("#IsRectify").is(":checked") ? "true" : "false";
            //var IsReconcile = $("#IsReconcile").is(":checked") ? "true" : "false";
            var IsReconcile =  "true" ;
            var tot_debit = $('label[for=TotDebit]').html();
            var tot_credit = $('label[for=TotCredit]').html();
            //Reconcile
            if (IsReconcile == "true") {
                var IsValidReconcile = ValidReconcile();
                if (IsValidReconcile.IsValid === true) {
                    Debit = IsValidReconcile.totDebit;
                    Credit = IsValidReconcile.totCredit;
                } else {
                    $("#loading").hide();
                    $("#dvMessage").attr('class', 'failed');
                    $("#dvMessage").html('Reconcil Amount is not equal.');
                    $("#dvMessage").show();
                    return;
                }
            } else {
                Debit = 0;
                Credit = 0;
            }
            //Reconcile
            if (transaction_type == 'Jr' || transaction_type == 'Ba' || transaction_type == 'Bc' && transaction_type =='Ca'&& row_cnt > 0) { // only for Journal and Bank type Voucher
                if (tot_debit == tot_credit) {
                    if (trx_dt != null && offc_id != null && offc_id > 0) {
                        $.ajax({
                            contentType: "application/json; charset=utf-8",
                            url: '@Url.Action("SaveVoucherMasterReconcile", "AccVoucherEntry", "http")',
                            type: "GET",
                            dataType: 'json',
                            async: true,
                            data: { trx_dt: trx_dt, offc_id: offc_id, voucher_type: voucher_type, transaction_type: transaction_type, reference: reference, voucher_desc: voucher_desc, rectify: rectify, IsReconcile: IsReconcile, ReffNo: ReffNo, Purpose: Purpose, ReceivedOfficeId: ReceivedOfficeId, Debit: Debit, Credit: Credit },
                            success: function (Trx_Master_ID) {
                                if (Trx_Master_ID > 0)
                                    SaveVoucherDetail(Trx_Master_ID);
                                else {
                                    $("#loading").hide();
                                    $("#dvMessage").attr('class', 'failed');
                                    $("#dvMessage").html('Fail to Insert.');
                                    $("#dvMessage").show();
                                }

                            },
                            error: function (request, status, error) {
                                $("#loading").hide();
                                $("#dvMessage").attr('class', 'failed');
                                $("#dvMessage").html(request.statusText);
                                $("#dvMessage").show();
                            }
                        });
                    }
                    else {
                        $("#loading").hide();
                        $("#dvMessage").attr('class', 'failed');
                        $("#dvMessage").html('Fail to Insert.');
                        $("#dvMessage").show();
                    }
                }
                else {
                    $("#loading").hide();
                    $("#dvMessage").attr('class', 'failed');
                    $("#dvMessage").html('Debit and Credit is not equal');
                    $("#dvMessage").show();
                }

            }
            else { // Only for Cash type voucher
                if (trx_dt != null && offc_id != null && offc_id > 0 && row_cnt > 0 && transaction_type == 'Ca') {
                    // SaveCashVoucher();
                    if (trx_dt != null && offc_id != null && offc_id > 0) {
                        $.ajax({
                            contentType: "application/json; charset=utf-8",
                            url: '@Url.Action("SaveVoucherMasterReconcile", "AccVoucherEntry", "http")',
                            type: "GET",
                            dataType: 'json',
                            async: true,
                            data: { trx_dt: trx_dt, offc_id: offc_id, voucher_type: voucher_type, transaction_type: transaction_type, reference: reference, voucher_desc: voucher_desc, rectify: rectify, IsReconcile: IsReconcile, ReffNo: ReffNo, Purpose: Purpose, ReceivedOfficeId: ReceivedOfficeId, Debit: Debit, Credit: Credit },
                            success: function (Trx_Master_ID) {
                                if (Trx_Master_ID > 0)
                                    SaveVoucherDetail(Trx_Master_ID);
                                else {
                                    $("#loading").hide();
                                    $("#dvMessage").attr('class', 'failed');
                                    $("#dvMessage").html('Fail to Insert.');
                                    $("#dvMessage").show();
                                }

                            },
                            error: function (request, status, error) {
                                $("#loading").hide();
                                $("#dvMessage").attr('class', 'failed');
                                $("#dvMessage").html(request.statusText);
                                $("#dvMessage").show();
                            }
                        });
                    }
                    else {
                        $("#loading").hide();
                        $("#dvMessage").attr('class', 'failed');
                        $("#dvMessage").html('Fail to Insert.');
                        $("#dvMessage").show();
                    }
                }
                else {

                    $("#loading").hide();
                    $("#dvMessage").attr('class', 'failed');
                    $("#dvMessage").html('Fail to Save.');
                    $("#dvMessage").show();
                }
            }

        });
    });
</script>
@Html.ActionLink("Back to List", "ReconcileIndex", null, new { @class = "pull-right" })
<h2 class="page-title">Reconcile Voucher Received</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div id="dialog-message" title="Message" style="display:none;">
        <p>
            <span class="ui-icon ui-icon-circle-check" style="float:left; margin:0 7px 50px 0;"></span>
        </p>
    </div>
    <div class="">
        <div class="row">
            <div class="col-md-12">
                @*<div class="form-group">*@
                @Html.LabelFor(model => model.TrxDate, htmlAttributes: new { @class = "control-label" })
                @Html.Label("" + ViewData["TransactionDate"], new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrxDate, "", new { @class = "text-danger" })
                @Html.TextBoxFor(model => model.OfficeID, new { style = "display:none;" })
                @Html.TextBoxFor(model => model.TrxDate, new { style = "display:none;" })
                @Html.TextBoxFor(model => model.OfficeLevel, new { style = "display:none;" })
                @*</div>*@
            </div>
        </div>



        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReffNo, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.ReffNo, ReffNoList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ReffNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Purpose, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.Purpose, ReconPurposeList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SenderOfficeId, htmlAttributes: new { @class = "control-label", @Id = "lblOfficeSenderType" })
                    @Html.DropDownListFor(model => model.SenderOfficeId, OfficeList, new { @class = "form-control", @Required = "true" })
                    @Html.ValidationMessageFor(model => model.SenderOfficeId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        @*<div id="ShowReconcile">
                @Html.Hidden("ReDebit")
                @Html.Hidden("ReCredit")
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ReffNo, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.ReffNo, ReffNoList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ReffNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Purpose, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Purpose, ReconPurposeList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SenderOfficeId, htmlAttributes: new { @class = "control-label", @Id = "lblOfficeSenderType" })
                            @Html.DropDownListFor(model => model.SenderOfficeId, OfficeList, new { @class = "form-control", @Required = "true" })
                            @Html.ValidationMessageFor(model => model.SenderOfficeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <hr />
            </div>*@
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">

                    @Html.LabelFor(model => model.TransactionType, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.TransactionType, TrxType, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TransactionType, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BAccID, htmlAttributes: new { @class = "control-label", @disabled = true })
                    @Html.TextBox("txtBAccCode", "", new { @class = "form-control", @disabled = true })
                    @Html.TextBoxFor(model => model.BAccID, new { style = "display:none;" })
                    @Html.ValidationMessageFor(model => model.BAccID, "", new { @class = "text-danger" })
                </div>
            </div>



        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label class="control-label">Description</label>
                    @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Narration, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.VoucherDesc)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.VoucherType, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.VoucherType, Vtype, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VoucherType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AccID, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBox("txtAccCode", "", new { @class = "form-control" })
                    @Html.TextBoxFor(model => model.AccID, new { style = "display:none;" })
                    @Html.ValidationMessageFor(model => model.AccID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Debit, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Debit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Debit, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Credit, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Credit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Credit, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group form-action">
                    <input type="submit" value="Add" id="btnAdd" class="btn btn-primary" />
                    &nbsp;
                    <input type="submit" value="Save" id="btnCreate" class="btn btn-primary" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <div id="DivTableView">


                        <div style="background: linear-gradient(to bottom,#78b1ed 0%,#417bb5 100%); filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#78b1ed',endColorstr='#417bb5',GradientType=0);
                                            border-color: #2b5177; height:35px;">
                            <div style="text-shadow: 0 1px 0 #666; color:#fff; font-weight:bold; padding-top:6px; padding-left:5px;">Transaction List</div>

                        </div>

                        <table id="tblTrxDetails" cellpadding="5" cellspacing="0" width="100%">
                            <thead class="tHead">
                                <tr>
                                    <th style="width: 5%; height:35px; vertical-align:middle; text-align:center;">
                                        Sl
                                    </th>
                                    <th style="width: 20%; vertical-align:middle;">
                                        Account Code
                                    </th>

                                    <th style="width: 40%; vertical-align:middle;">
                                        Description
                                    </th>
                                    <th style="width: 15%; vertical-align:middle; text-align:right;">
                                        Debit
                                    </th>
                                    <th style="width: 15%; vertical-align:middle; text-align:right;">
                                        Credit
                                    </th>
                                    <th style="width: 5%; vertical-align:middle; text-align:center;"></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                            <tfoot>
                                <tr class="tFoot">
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td style="text-align:right;">
                                        Total Amount
                                    </td>
                                    <td style="text-align:right;">
                                        @Html.Label("TotDebit", " ")
                                    </td>
                                    <td style="text-align:right;">
                                        @Html.Label("TotCredit", " ")
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @*@Scripts.Render("~/bundles/jtable")*@
}
