@model gBanker.Web.ViewModels.getWriteOffListViewModel

@{
    ViewBag.Title = "WriteOff List";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
    var member = Model == null ? null : Model.memberListItems;
    var office = Model == null ? null : Model.officeListItems;

}



<style type="text/css">
    th {
        height: 40px;
        vertical-align: top;
        margin-top: 0px !important;
        padding-top: 0px !important;
    }

    span.jtable-column-header-text {
        margin-top: 0px !important;
    }
</style>

<script type="text/javascript">
    
    function Message(LoanSummaryID, officeID, CenterCode, MemberCode, FirstName, ProductCode, LoanTerm, PrincipalLoan, LoanPaid, LoanBalance, IntCharge, intPaid, intBal, DisburseDatestg) {
        alert("Already Processed.");

    }

    function Add(LoanSummaryID, officeID, CenterCode, MemberCode, FirstName, ProductCode, LoanTerm, PrincipalLoan, LoanPaid, LoanBalance, IntCharge, intPaid, intBal, DisburseDatestg) 
    {

        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("AddTemp", "WriteOffList", "http")',
            data: { LoanSummaryID: LoanSummaryID, officeID: officeID, CenterCode: CenterCode, MemberCode: MemberCode, FirstName: FirstName, ProductCode: ProductCode, LoanTerm: LoanTerm, PrincipalLoan: PrincipalLoan, LoanPaid: LoanPaid, LoanBalance: LoanBalance, IntCharge: IntCharge, intPaid: intPaid, intBal: intBal, DisburseDatestg: DisburseDatestg},
            dataType: 'json',
            async: true,
            success: function (result) {

                var selectId = "#select" + LoanSummaryID;
               
                //$(selectId).addClass('fa fa-check-circle-o');

                var className = $(selectId).attr('class');

                if (className == "fa fa-circle-o") {
                    $(selectId).removeClass('fa fa-circle-o').addClass('fa fa-check-circle-o');
                }
                else {
                    $(selectId).removeClass('fa fa-check-circle-o').addClass('fa fa-circle-o');
                }
               // $(selectId).removeClass('fa fa-circle-o').addClass('fa fa-check-circle-o');

                // Remove OnClick if Selected
               // var buttonId = "#button" + LoanSummaryID;
               // $(buttonId).attr("onclick", "remove(" + LoanSummaryID + "," + officeID + ")");

                
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
 
    }

    function FinallySave()
    {


        var allTrx = new Object();

        /*
        Additional info while Insert Data
        */
        allTrx.center = $("#ddlCenter option:selected").val();
        allTrx.member = $("#ddlMember option:selected").val();
        allTrx.product = $("#ddlProd option:selected").val();
        allTrx.noOfAccount = $("#ddlNoOfAccount option:selected").val();
        /*END */

        var json = JSON.stringify(allTrx);

        $("#loading").show();
        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("SaveCorrection", "SavingInstallmentCorrection", "http")',
            type: "POST",
            dataType: 'json',
            async: true,
            data: json,

            success: function (resp) {

                $("#loading").hide();
                var result = resp.Result;
                var msg = resp.Message;
                var css = "failed";
                if (result == "OK")
                    css = "success";
                $("#dvMessage").attr('class', css);
                $("#dvMessage").html(msg);
                $("#dvMessage").show();


                $("#dvMessageDown").attr('class', css);
                $("#dvMessageDown").html(msg);
                $("#dvMessageDown").show();

                alert("Data Saved Successfully.");

                if (result == "OK") {
                    $("#dvMessage").toggle('fade', 1500);
                    $("#dvMessageDown").toggle('fade', 1500);
                    setTimeout("hideMsg()", 1500);
                }

            },
            error: function (err) {
                $("#loading").hide();
                var msg = err.responseText;
                var css = "failed";
                $("#dvMessage").attr('class', css);
                $("#dvMessage").html(msg);
                $("#dvMessage").show();

                $("#dvMessageDown").attr('class', css);
                $("#dvMessageDown").html(msg);
                $("#dvMessageDown").show();
            }
        });






    }


    $(document).ready(function () {

        $("#confirmDlg").dialog({
            autoOpen: false,
            //height: 150,
            width: 400,
            modal: true,
            title: 'Confirmation',
            buttons: {
                "Yes": function () {
                    FinallySave();
                    //alert('yes');
                    $(this).dialog("close");
                },
                "No": function () {
                    //alert("No Office selected. Employee office will be used.");
                    $(this).dialog("close");
                }
            }
        });

        $('.service').click(function (e) {
            e.preventDefault();
        });

        $("#btnSave").click(function (e) {
            // Call Save

            var msg = "Do you want to Save the Record? ";
            $("#lblMsg").text(msg);
            $("#confirmDlg").dialog('open');


        });// End Save Function


        $("#memberAutoComplete").autocomplete({
            source: function (request, response) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetMemberList", "WriteOffList", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { memberid: request.term, oficeId: $("#OfficeID").val() },
                    minLength: 1,
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.MemberID,
                                label: item.MemberName
                            };
                            //response(data);
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            },
            focus: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                $("#MemberID").val(ui.item.value);
                return false;
            },
            change: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                $("#MemberID").val(ui.item.value);
                return false;
            }
        });

        $("#txtDateFrom").datepicker(
            {
                dateFormat: "dd-M-yy",
                showAnim: "scale"
            });
        $("#txtDateTo").datepicker(
          {
              dateFormat: "dd-M-yy",
              showAnim: "scale"
          });

        //////////////////////////
        $('#grid').jtable({
            //title: 'MemberCategory List',
            paging: true,
            pageSize: 50,
            sorting: true,
            defaultSorting: 'Name ASC',
            actions: {
                listAction: function (postData, jtParams) {
                    console.log("Loading from custom function...");
                    return $.Deferred(function ($dfd) {
                        $.ajax({
                            url: '/WriteOffList/GenerateWriteOffList?jtStartIndex=' + jtParams.jtStartIndex + '&jtPageSize=' + jtParams.jtPageSize + '&jtSorting=' + jtParams.jtSorting,
                            type: 'POST',
                            dataType: 'json',
                            data: postData,
                            success: function (data) {
                                $dfd.resolve(data);
                            },
                            error: function () {
                                $dfd.reject();
                            }
                        });
                    });
                },
            },
            fields: {
                OfficeID: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false
                },
                
                CenterCode: {
                    title: 'Center Code',
                   // width: '8%'

                },
                MemberCode: {
                    title: 'Member Code',
                   // width: '10%'

                },
                FirstName: {
                    title: 'Member Name',
                   // width: '12%'

                },
                ProductCode: {
                    title: 'Product Code',
                   // width: '8%'
                },
                LoanTerm: {
                    title: 'Loan Term',
                    // width: '8%'
                },
               
                PrincipalLoan: {
                    title: 'Principal Loan',
                   // width: '8%'
                },

               

                LoanPaid: {
                    title: 'Loan Paid',
                   // width: '8%'
                },

                LoanBalance: {
                    title: 'Loan Balance',
                    // width: '8%'
                },
                IntCharge: {
                    title: 'Int. Charge',
                   // width: '8%'
                },
               
                intPaid: {
                    title: 'Int. Paid',
                   // width: '8%'
                },
                intBal: {
                    title: 'Interest Balance',
                    // width: '8%'
                },
                DisburseDatestg: {
                    title: 'Disburse Date',
                    // width: '12%'

                },
                //DisburseDate: {
                //    title: 'Disburse Date',
                //    displayFormat: 'dd-mm-yy',
                //    type: 'date',
                //}

                EditLink: {
                    title: "Add",
                    sorting: false,
                    display: function (data) {
                       // return '<div class="text-center"><a href="#"'   + ' id = "select' + data.record.LoanSummaryID + '" OnClick="Add(' + data.record.LoanSummaryID + ',' + data.record.OfficeID + ')"><i class="fa fa-circle-o"></i></a></div>';

                        if (data.record.isProcessed == true) {
                            return '<div class="text-center"><a href="javascript:void(0)" name="service"' + ' id = "button' + data.record.LoanSummaryID + '"  OnClick="Message(' + data.record.LoanSummaryID + ',' + data.record.OfficeID + ',\'' + data.record.CenterCode + '\',\'' + data.record.MemberCode + '\',\'' + data.record.FirstName + '\' ,\'' + data.record.ProductCode + '\', \'' + data.record.LoanTerm + '\' , \'' + data.record.PrincipalLoan + '\' , \'' + data.record.LoanPaid + '\' , \'' + data.record.LoanBalance + '\' , \'' + data.record.IntCharge + '\' , \'' + data.record.intPaid + '\' , \'' + data.record.intBal + '\' , \'' + data.record.DisburseDatestg + '\' )"><i ' + ' id = "select' + data.record.LoanSummaryID + '"  class="fa fa-circle"></i></a></div>';

                        }
                        else {
                            return '<div class="text-center"><a href="javascript:void(0)" name="service"' + ' id = "button' + data.record.LoanSummaryID + '"  OnClick="Add(' + data.record.LoanSummaryID + ',' + data.record.OfficeID + ',\'' + data.record.CenterCode + '\',\'' + data.record.MemberCode + '\',\'' + data.record.FirstName + '\' ,\'' + data.record.ProductCode + '\', \'' + data.record.LoanTerm + '\' , \'' + data.record.PrincipalLoan + '\' , \'' + data.record.LoanPaid + '\' , \'' + data.record.LoanBalance + '\' , \'' + data.record.IntCharge + '\' , \'' + data.record.intPaid + '\' , \'' + data.record.intBal + '\' , \'' + data.record.DisburseDatestg + '\' )"><i ' + ' id = "select' + data.record.LoanSummaryID + '"  class="fa fa-circle-o"></i></a></div>';

                        }




                    }
                },

                 







            }
        });
        //reloadGrid();
         //$('#grid').jtable('load');
        //////////////////////////
    });
    function reloadGrid() {
        $('#grid').jtable('load', { DateFrom: $('#txtDateFrom').val(), MemberId: $('#MemberID').val(), Writeoffyear: $('#writeoffyear').val() });
       // $('#grid').jtable('load', { DateFrom: $('#txtDateFrom').val(), MemberId: $('#MemberID').val()});
    }
    $('#btnSearch').click(function (e) {
        e.preventDefault();
        reloadGrid();
     });
</script>


<h2 class="page-title">To be WriteOff History</h2>
@*<div class="row">

    <div class="col-md-6" style="padding-top:20px;">*@


<div class="row">
    <div class="col-md-3">
        <div class="form-group">
            @Html.Label("Member", htmlAttributes: new { @class = "control-label" })
            @Html.TextBox("memberAutoComplete", "", new { @class = "form-control" })
            @Html.HiddenFor(model => model.MemberID)
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.writeoffyear, htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.writeoffyear, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.writeoffyear, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="col-md-3">
        <div class="form-group">
            @Html.Label("Writeoff year", new { @class = "control-label" })
            @Html.TextBox(" ", null, new { @ID = "txtWriteoffyear", @class = "form-control" })
        </div>
    </div>*@
    <div class="col-md-3">
        <div class="form-group">
            @Html.Label("Date To", new { @class = "control-label" })
            @Html.TextBox(" ", ViewData["Trxdate"].ToString(), new { @ID = "txtDateFrom", @class = "form-control" })
            @*@Html.TextBox(" ", "", new { @ID = "txtToDt", @class = "form-control" })*@
        </div>
        <div style="display:none">

            @Html.LabelFor(model => model.OfficeID, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.OfficeID, office, new { @class = "form-control" })
            @Html.HiddenFor(model => model.OfficeID)
            @Html.ValidationMessageFor(model => model.OfficeID, "", new { @class = "text-danger" })
        </div>
    </div>
  
    <div class="col-md-3" style="padding-top:20px;">
        <input type="button" id="btnSearch" value="Search" class="btn btn-primary" onclick="reloadGrid();" />
    </div>
</div>


<div id="confirmDlg" style="display:none">
    <div class="form-group">
        <label id="lblMsg"></label>
    </div>
</div>





@*</div>

    </div>*@



<div id="grid"></div>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jtable")
}
