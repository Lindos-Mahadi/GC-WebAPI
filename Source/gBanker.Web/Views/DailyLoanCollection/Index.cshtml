@model gBanker.Web.ViewModels.DailyLoanTrxViewModel

@{
    ViewBag.Title = "Loan Collection List";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
    // var center = Model.centerListItems == null ? new List<SelectListItem>() { new SelectListItem() { Text = "Select Center", Value = "0" } } : Model.centerListItems;
    var center = Model.centerListItems == null ? new List<SelectListItem>() { new SelectListItem() { Text = "Select Center", Value = "0" } } : Model.centerListItems;
    var product = Model == null ? null : Model.productListItems;
    var member = Model == null ? null : Model.memberListItems;
}

<style type="text/css">
    .summaryTitle {
        color: yellow !important;
        padding-left: 5px !important;
    }

    th {
        height: 40px;
        vertical-align: top;
        margin-top: 0px !important;
        padding-top: 0px !important;
    }

    span.jtable-column-header-text {
        margin-top: 0px !important;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background: rgba( 255, 255, 255, .8 ) url('http://i.stack.imgur.com/FhHRx.gif') 50% 50% no-repeat;
    }

    /* When the body has the loading class, we turn
    the scrollbar off with overflow:hidden */
    body.loading {
        overflow: hidden;
    }

        /* Anytime the body has the loading class, our
    modal element will be visible */
        body.loading .modal {
            display: block;
        }

    .findElement {
        background-color: yellow;
    }
    /*.input{
        font-size:40px;
    }*/
</style>

@*<table style="width:100%;">
        <tr>
            <td style="width:90%"><h2>Loan Collection</h2></td>
            <td>@Html.ActionLink("Add Transfer", "Create")</td>
        </tr>
    </table>

    <hr />*@

@Html.ActionLink("Add New", "Create", null, new { @class = "btn btn-info btn-sm pull-right" })
<h2 class="page-title">Loan Collection</h2>

<script type="text/javascript">
    $body = $("body");
    function SetProductid(value) {

        var ddlValue = $("#ProductID option:selected").val();
        $("#hfProdId").val(ddlValue);

    }
    $(document).ready(function () {
        confirmDayInitiated();
        $("#memberAutoComplete").blur(function () {
            var member = $("#memberAutoComplete").val();
            ///function

            if (member.length > 0) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetMemberList", "DailyLoanCollection", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { memberid: member, centerId: $("#CenterID").val() },
                    minLength: 1,
                    success: function (data) {
                        // alert(data.length);
                        if (data.length == 1) {
                            $("#memberAutoComplete").val(data[0].MemberName);
                            $("#MemberID").val(data[0].MemberID);
                            CalcLoanTerm();
                        }
                        else if (data.length == 0) {
                            //alert("No member found.");
                            $("#MemberID").val("");

                        }
                        else {
                            //alert("More than one member found with the given Member code.");
                            $("#MemberID").val("");
                        }
                    }
                });
            }
        });
        $("#memberAutoComplete").autocomplete({
            source: function (request, response) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetMemberList", "DailyLoanCollection", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { memberid: request.term, centerId: $("#CenterID").val() },
                    minLength: 1,
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.MemberID,
                                label: item.MemberName
                            };
                            //response(data);
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            },
            focus: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                $("#MemberID").val(ui.item.value);
                return false;
            },
            change: function (event, ui) {
                $("#memberAutoComplete").val(ui.item.label);
                $("#MemberID").val(ui.item.value);
                return false;
            }
        });

        $('#btnPost').click(function (e) {
            e.preventDefault();
            $("#loading").show();
            var prodId = $("#hfProdId").val();
            var memId = $("#MemberID").val();
            var officeId = $("#OfficeID").val();
            var CenterID = $("#CenterID").val();
            $.ajax({
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("UpdateDataLessFiftyPercent", "DailyLoanCollection", "http")',
                type: "GET",
                dataType: 'json',
                async: true,
                data: { officeId: officeId, CenterID: CenterID },
                //minLength: 1,
                success: function (data) {

                    $("#loading").hide();
                    var msg = "50% Updated successfully";
                    var css = "success";
                    if (data.Message != null) {
                        msg = data.Message;
                        css = "failed"
                    }

                    $("#dvMessage").attr('class', css);
                    $("#dvMessage").html(msg);
                    $("#dvMessage").show();
                    if (data.Message == null)
                        $("#dvMessage").toggle('fade', 1500);

                },
                error: function (request, status, error) {
                    $("#loading").hide();
                    $("#dvMessage").attr('class', 'failed');
                    $("#dvMessage").html(request.statusText);
                    $("#dvMessage").show();
                }
            });

        });

      
        //$("#CenterID").change(function () {
        //    //var centerId = $("#CenterID").val();
        //    $('#filterColumn').val('');
        //    $('#filterValue').val('');
        //    reloadGrid();
        //});
       
        $('#grid').jtable({

            // title: 'Loan collection list',
            paging: true,
            
            actions: {
           
                listAction: function (postData, jtParams) {
                    console.log("Loading from custom function...");
                    return $.Deferred(function ($dfd) {

                        var prodId = $("#hfProdId").val();
                        var memId = $("#MemberID").val();

                        $.ajax({
                            //url: '/DailyLoanCollection/GetDailyLoanCollectionProductList?jtStartIndex=' + jtParams.jtStartIndex + '&jtPageSize=' + jtParams.jtPageSize + '&jtSorting=' + jtParams.jtSorting,

                            url: '/DailyLoanCollection/GetDailyLoanCollectionProductList?jtStartIndex=' + jtParams.jtStartIndex + '&jtPageSize=' + jtParams.jtPageSize + '&jtSorting=' + jtParams.jtSorting +'&productId='+ prodId +'&memberID='+memId ,
                            type: 'POST',
                            dataType: 'json',
                            data: postData,
                            success: function (data) {
                                $dfd.resolve(data);
                            },
                            error: function () {
                                $dfd.reject();
                            }
                        });
                    });
                },


            },
            fields: {
                DailyLoanTrxID: {
                    key: true,
                    create: false,
                    edit: false,
                    list: false
                },
                ProductID: {
                    list: true,
                    create: false,
                    edit: false,
                    display: function (loanTrx) {
                        //Create an image that will be used to open child table
                        var dueLoanTextbox = '<span class="summaryTitle">Due Loan:</span> <input disabled="disabled" type="text" style="width:40px; color:black;" id="DueLoanSummary' + loanTrx.record.ProductID + '"  value= "' + loanTrx.record.DueLoanSummary + '" />';
                        var loanCollection = '<span class="summaryTitle">Loan Coll:</span> <input disabled="disabled" type="text" style="width:45px; color:black;" id="LoanCollectionSummary' + loanTrx.record.ProductID + '"  value= "' + loanTrx.record.LoanCollectionSummary + '" />';
                        var dueIntrestTextbox = '<span class="summaryTitle">Due S.Charge:</span> <input disabled="disabled" type="text" style="width:40px; color:black;" id="DueInterestSummary' + loanTrx.record.ProductID + '" value= "' + loanTrx.record.DueInterestSummary + '" />';
                        var interestCollection = '<span class="summaryTitle">S.Charge Coll:</span> <input disabled="disabled" type="text" style="width:40px; color:black;" id="InterestCollectionSummary' + loanTrx.record.ProductID + '"  value= "' + loanTrx.record.InterestCollectionSummary + '" />';
                        var totaldue = '<span class="summaryTitle">Total Due:</span> <input disabled="disabled" type="text" style="width:60px; color:black;" id="TotalDueSummary' + loanTrx.record.ProductID + '"  value= "' + loanTrx.record.TotalDueSummary + '" />';
                        var totalCollection = '<span class="summaryTitle">Total Coll:</span> <input disabled="disabled" type="text" style="width:60px; color:black;" id="TotalCollectionSummary' + loanTrx.record.ProductID + '" value= "' + loanTrx.record.TotalCollectionSummary + '" />';
                        var $product = $('<div class="jtable-title"> <div class="jtable-title-text">' + 'Product Code - ' + loanTrx.record.ProductCode + ' Name - ' + loanTrx.record.ProductName + dueLoanTextbox + loanCollection + dueIntrestTextbox + interestCollection + totaldue + totalCollection + '</div></div>');
                        //Open child table when user clicks the image

                        $product.show(function () {
                            $('#grid').jtable('openChildTable',
                                            $product.closest('tr'),
                                            {
                                                actions: {
                                                    listAction: '/DailyLoanCollection/GetDailyLoanCollectionSheet?centerId=' + loanTrx.record.CenterID + '&productId=' + loanTrx.record.ProductID + '&memberID=' + loanTrx.record.MemberID 

                                                },

                                                fields: {

                                                    MemberCode: {
                                                        title: 'Member Code',
                                                        width: '10%',
                                                        display: function (data) {
                                                            var id = '<span attr_code="y">' + data.record.MemberCode + '</span>';
                                                            return id;
                                                        }

                                                    },
                                                    MemberName: {
                                                        title: 'Member Name',
                                                        width: '15%',
                                                        display: function (data) {
                                                            var id = '<span attr_name="y">' + data.record.MemberName + '</span>';
                                                            return id;
                                                        }
                                                    },
                                                    TotalInstallment: {
                                                        title: 'Total Installment',
                                                        width: '6%',
                                                        display: function (data) {
                                                            var total = data.record.LoanPaid + data.record.IntPaid;

                                                            return '<input type="text" onkeypress="return checkNumberic(event, 0,' + "'" + data.record.InterestCalculationMethod + "'" + ' );" onkeydown="return goNextRow(event,' + data.record.rowSl + ',' + "'" + 'Total' + "'" + ');" onkeyup="calculate(1, ' + data.record.DailyLoanTrxID + ",'" + data.record.InterestCalculationMethod + "'" + "," + data.record.ProductID + ');" style="width:60px" ' + 'id="Total' + data.record.DailyLoanTrxID + '" LoanPaidProduct="Total' + data.record.ProductID + '" value="' + total + '" />';
                                                        }
                                                    },
                                                    LoanPaid: {
                                                        title: 'Loan Paid',
                                                        width: '6%',
                                                        display: function (data) {
                                                            return '<input type="text" onkeypress="return checkNumberic(event, 2,' + "'" + data.record.InterestCalculationMethod + "'" + ');" onkeydown="return goNextRow(event,' + data.record.rowSl + ',' + "'" + 'LoanPaid' + "'" + ');" onkeyup="calculate(2,' + data.record.DailyLoanTrxID + ",'" + data.record.InterestCalculationMethod + "'" + "," + data.record.ProductID + ');" onblur="validate(' + data.record.DailyLoanTrxID + ",'" + data.record.InterestCalculationMethod + "'" + "," + data.record.ProductID + ');" style="width:60px" ' + 'id="LoanPaid' + data.record.DailyLoanTrxID + '" LoanPaidProduct="LoanPaid' + data.record.ProductID + '" value="' + data.record.LoanPaid + '" />' +
                                                                   '<input type="text" value="' + data.record.DailyLoanTrxID + '" style="display:none;" name="PrimaryKeyId" id="PrimaryKeyId' + data.record.rowSl + '" />';
                                                        }
                                                    },
                                                    IntPaid: {
                                                        title: 'Interest Paid',
                                                        width: '5%',
                                                        display: function (data) {
                                                            return '<input type="text" onkeypress="return checkNumberic(event, 3,' + "'" + data.record.InterestCalculationMethod + "'" + ');" onkeydown="return goNextRow(event,' + data.record.rowSl + ',' + "'" + 'IntPaid' + "'" + ');"  onkeyup="calculate(3, ' + data.record.DailyLoanTrxID + ",'" + data.record.InterestCalculationMethod + "'" + "," + data.record.ProductID + ');" style="width:50px" ' + 'id="IntPaid' + data.record.DailyLoanTrxID + '" LoanPaidProduct="IntPaid' + data.record.ProductID + '" value="' + data.record.IntPaid + '" />';
                                                        }
                                                    },
                                                    LoanTerm: {
                                                        title: 'Loan Term',
                                                        width: '5%',
                                                        display: function (data) {
                                                            var id = '<input type="hidden"' + ' value="' + data.record.DailyLoanTrxID + '" /> ';
                                                            return id + '<input type="text" disabled="disabled" name="LoanTerm" style="width:30px"' + 'id="LoanTerm' + data.record.DailyLoanTrxID + '" value="' + data.record.LoanTerm + '" />';
                                                        }
                                                    },
                                                    TrxType: {
                                                        title: 'TrxType',
                                                        width: '5%',
                                                        list: true,
                                                        create: false,
                                                        edit: false,
                                                        display: function (data) {
                                                            var MemId = '<input type="text" value="' + data.record.MemberID + '" style="display:none;" name="MemberID" id="MemberID' + data.record.DailyLoanTrxID + '" />';
                                                            return MemId + '<input type="text" disabled="disabled" name="TrxType" style="width:30px"' + 'id="TrxType' + data.record.DailyLoanTrxID + '" value="' + data.record.TrxType + '" />';
                                                        }
                                                    },
                                                    LoanDue: {
                                                        title: 'Loan Due',
                                                        width: '6%',
                                                        display: function (data) {
                                                            return '<input type="text" disabled="disabled" style="width:60px"' + 'id="LoanDue' + data.record.DailyLoanTrxID + '" value="' + data.record.LoanDue + '" />';
                                                        }
                                                    },
                                                    IntDue: {
                                                        title: 'Interest Due',
                                                        width: '5%',
                                                        display: function (data) {
                                                            return '<input type="text"  name="IntDue" disabled="disabled" style="width:50px"' + 'id="IntDue' + data.record.DailyLoanTrxID + '" value="' + data.record.IntDue + '" />';
                                                        }
                                                    },

                                                    PrincipalLoan: {
                                                        title: 'Principal Loan',
                                                        width: '6%',
                                                        display: function (data) {
                                                            return '<input type="text" disabled="disabled" onkeypress="return checkNumberic(event, 0,' + "'" + data.record.InterestCalculationMethod + "'" + ');"  onkeyup="calculate(4, ' + data.record.DailyLoanTrxID + ",'" + data.record.InterestCalculationMethod + "'" + "," + data.record.ProductID + ');" style="width:100px" ' + 'id="PrincipalLoan' + data.record.DailyLoanTrxID + '" value="' + data.record.PrincipalLoan + '" />';
                                                        }
                                                    },
                                                    LoanRepaid: {
                                                        title: 'Loan Repaid',
                                                        width: '6%',
                                                        display: function (data) {
                                                            return '<input type="text" disabled="disabled" onkeypress="return checkNumberic(event, 0,' + "'" + data.record.InterestCalculationMethod + "'" + ');"  onkeyup="calculate(5, ' + data.record.DailyLoanTrxID + ",'" + data.record.InterestCalculationMethod + "'" + "," + data.record.ProductID + ');" style="width:100px" ' + 'id="LoanRepaid' + data.record.DailyLoanTrxID + '" value="' + data.record.LoanRepaid + '" />';
                                                        }
                                                    },
                                                    CumIntCharge: {
                                                        title: 'Cum.Interest Charge',
                                                        width: '6%',
                                                        display: function (data) {
                                                            return '<input type="text" disabled="disabled" onkeypress="return checkNumberic(event, 0,' + "'" + data.record.InterestCalculationMethod + "'" + ');"  onkeyup="calculate(5, ' + data.record.DailyLoanTrxID + ",'" + data.record.InterestCalculationMethod + "'" + "," + data.record.ProductID + ');" style="width:100px" ' + 'id="LoanRepaid' + data.record.DailyLoanTrxID + '" value="' + data.record.CumIntCharge + '" />';
                                                        }
                                                    },
                                                    DueRecovery: {
                                                        title: 'Cum.Interest Paid',
                                                        width: '6%',
                                                        display: function (data) {
                                                            return '<input type="text" disabled="disabled" onkeypress="return checkNumberic(event, 0,' + "'" + data.record.InterestCalculationMethod + "'" + ');"  onkeyup="calculate(5, ' + data.record.DailyLoanTrxID + ",'" + data.record.InterestCalculationMethod + "'" + "," + data.record.ProductID + ');" style="width:100px" ' + 'id="LoanRepaid' + data.record.DailyLoanTrxID + '" value="' + data.record.DueRecovery + '" />';
                                                        }
                                                    }

                                                }
                                            }, function (data) { //opened handler
                                                data.childTable.jtable('load');

                                            });

                        });
                        //Return image to show on the person row
                        // $('#grid').jtable('getRowByKey', loanTrx.record.DailyLoanTrxID).find("span").click();
                        return $product;
                    }
                }
            }
        });


        reloadGrid();
        //$('#grid').jtable('load');
        //$('.jtable-column-header').hide();
        $('.jtable .jtable-title').find('div').hide();


        $('#btnProduct').click(function (e) {
            e.preventDefault();
            var startDate = "24/11/2012";
            var endDate = "30/11/2012";
            var CenterID = $("#CenterID").val();
            var url = '/DailyLoanCollection/GenerateReport?fromDate=' + startDate + '&toDate=' + endDate + '&CenterID=' + CenterID;
            window.open(url, 'mywindow', 'fullscreen=yes, scrollbars=auto');
        });


        //$('#btnLessFiftyPercent').click(function (e) {
        //    e.preventDefault();
        //    var prodId = $("#hfProdId").val();
        //    var memId = $("#MemberID").val();
        //    var officeId = $("#OfficeID").val();
        //    var centerId = $("#CenterID").val();
        //    var url = '/DailyLoanCollection/UpdateDataLessFiftyPercent';
        //    window.open(url, 'mywindow', 'fullscreen=yes, scrollbars=auto');
        //});

    });


        function checkNumberic(e, type, intcalmethod) {
            if ((intcalmethod == "A" ||intcalmethod == "E" )&& (type == 2 || type == 3))
        {
            return false;
        }
        else
        {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                return false;
            }
        }

    }
    function goNextRow(e, rowSl, id) {
        //up arrow 38
        if (e.keyCode == 38) {
            var newId = '#' + 'PrimaryKeyId' + (rowSl - 1).toString();
            var newIdVal = $(newId).val();
            var newFocusId = id + newIdVal.toString();
            $('#' + newFocusId).focus();
            $('#' + newFocusId).select();
        }
        else if (e.keyCode == 40) {
            var newId = '#' + 'PrimaryKeyId' + (rowSl + 1).toString();
            var newIdVal = $(newId).val();
            var newFocusId = id + newIdVal.toString();
            $('#' + newFocusId).focus();
            $('#' + newFocusId).select();
        }
    }
    //function reloadGrid() {
    //    $('#grid').jtable('load', { centerId: $('#CenterID').val(), productID: $('#hfProdId').val(), memberId: $('#MemberID').val() });
    //    $('.jtable-column-header').hide();
    //    $('.jtable .jtable-title').find('div').hide();

    //}
    function reloadGrid() {
        $('#grid').jtable('load', { centerId: $('#CenterID').val(), productID: $('#hfProdId').val(), memberId: $('#MemberID').val() });
        $('.jtable-column-header').hide();
        $('.jtable .jtable-title').find('div').hide();

    }
    function calculate(type, id, calcMethod, productid) {
        var totalId = 'Total' + id;
        var loanPaidId = 'LoanPaid' + id;
        var intPaidId = 'IntPaid' + id;
        var loandue = 'LoanDue' + id;
        var intdue = 'IntDue' + id;
        var principalLoan = 'PrincipalLoan' + id;
        var loanRepaid = 'LoanRepaid' + id;
        if (type == 1) { // Total Installment
            var vLoanInstallment = 0;
            var vInterestInstallment = 0;
            var vPrincipalLOan = $('#' + principalLoan).val();
            if (vPrincipalLOan.length == 0)
                vPrincipalLOan = "0";
            var vloanRepaid = $('#' + loanRepaid).val();
            if (vloanRepaid.length == 0)
                vloanRepaid = "0";

            var total = $('#' + totalId).val();
            if (total.length == 0)
                total = "0";
            var vLoan = $('#' + loandue).val();
            if (vLoan.length == 0)
                vLoan = "0";
            var vInt = $('#' + intdue).val();
            if (vInt.length == 0)
                vInt = "0";
            var vTotalInstall = Number(vLoan) + Number(vInt);

            if (vTotalInstall == 0) {
                vLoanInstallment = 0;
                vInterestInstallment = 0;
            }
            else {

                if (calcMethod == "D") {
                    if (parseFloat(total) < parseFloat(vLoan)) {
                        vLoanInstallment = (parseFloat(vLoan) * parseFloat(total)) / parseFloat(vTotalInstall);
                        // vLoanInstallment = 0;
                    }
                    else {
                        vLoanInstallment = (parseFloat(vLoan) * parseFloat(total)) / parseFloat(vTotalInstall);
                    }
                }
                else if (calcMethod == "A") {
                    if (parseFloat(total) >= parseFloat(vTotalInstall)) {
                        vLoanInstallment = (parseFloat(total) - parseFloat(vInt))
                    }
                    if (parseFloat(total) < parseFloat(vTotalInstall)) {
                        vLoanInstallment = (parseFloat(total) - parseFloat(vInt))
                    }
                }
                else if (calcMethod == "E") {
                    if (parseFloat(total) > parseFloat(vInt)) {
                        vLoanInstallment = (parseFloat(total) - parseFloat(vInt))
                    }
                    if (parseFloat(total) <= parseFloat(vInt)) {
                        vLoanInstallment = 0
                    }
                }
                else {
                    vLoanInstallment = (parseFloat(vLoan) * parseFloat(total)) / parseFloat(vTotalInstall);
                }
            }
            // loanPaidId = vLoanInstallment;

            if (vTotalInstall == 0) {

                vInterestInstallment = 0;
            }
            else {
                if (calcMethod == "D") {
                    if (parseFloat(total) < parseFloat(vInt)) {
                        vInterestInstallment = (parseFloat(vInt) * parseFloat(total)) / parseFloat(vTotalInstall);
                        //vInterestInstallment = total;
                    }
                    else {
                        vInterestInstallment = (parseFloat(vInt) * parseFloat(total)) / parseFloat(vTotalInstall);
                    }
                }
                else if (calcMethod == "A") {
                    if (parseFloat(total) >= parseFloat(vTotalInstall)) {
                        vInterestInstallment = parseFloat(vInt)
                    }
                    if (parseFloat(total) < parseFloat(vTotalInstall)) {
                        vInterestInstallment = parseFloat(vInt)
                    }
                }
                else if (calcMethod == "E") {
                    if (parseFloat(total) > parseFloat(vInt)) {
                        vInterestInstallment = parseFloat(vInt)
                    }
                    if (parseFloat(total) <= parseFloat(vInt)) {
                        vInterestInstallment = parseFloat(total)
                    }
                }
                else {
                    vInterestInstallment = (parseFloat(vInt) * parseFloat(total)) / parseFloat(vTotalInstall);
                }
            }
            //intPaidId = vInterestInstallment;
            //$('#' + loanPaidId).val(total/2);
            //$('#' + intPaidId).val(total/2);
            if (calcMethod != "A") {
                var vLoan = $('#' + totalId).val();
                var vLoanBal = Number(vPrincipalLOan) - Number(vloanRepaid)
                var calIns = Number(vloanRepaid) + Number(vLoan)
                if (calIns >= Number(vPrincipalLOan)) {
                    vInterestInstallment = Number(Math.round(total)) - (Number(vPrincipalLOan) - Number(vloanRepaid))
                    vLoanInstallment = Number(vPrincipalLOan) - Number(vloanRepaid)

                }
            }
            else if (calcMethod == "A") {
                var vLoan = $('#' + totalId).val();
                var vLoanBal = Number(vPrincipalLOan) - Number(vloanRepaid)
                var calIns = Number(vloanRepaid) + Number(vLoan)
                if (calIns >= Number(vPrincipalLOan)) {
                    // vInterestInstallment = Number(Math.round(total)) - (Number(vPrincipalLOan) - Number(vloanRepaid))
                    vLoanInstallment = Number(total) - Number(vInterestInstallment)

                }
            }

            $('#' + loanPaidId).val(Math.round(vLoanInstallment));
            $('#' + intPaidId).val(Math.round(vInterestInstallment));

        }
        if (type == 2) { // Loan Paid
            var vLoanInstallment = 0;
            var vInterestInstallment = 0;
            var total = $('#' + totalId).val();
            var vLoan = $('#' + loanPaidId).val();
            var vInt = $('#' + intPaidId).val();
            var vTotalInstall = Number(vLoan) + Number(vInt);

            $('#' + totalId).val(vTotalInstall);

        }
        if (type == 3) { // Int Paid
            var vLoanInstallment = 0;
            var vInterestInstallment = 0;
            var total = $('#' + totalId).val();
            var vLoan = $('#' + loanPaidId).val();
            var vInt = $('#' + intPaidId).val();
            var vTotalInstall = Number(vLoan) + Number(vInt);

            $('#' + totalId).val(vTotalInstall);

        }
        //var loanCollectionSMry = $('#' + LoanCollectionSummary).val();
        //var finalLoanCollectionSummary = (loanCollectionSMry - initialLoanPaid) + vLoanInstallment;

        //$('#LoanCollectionSummary' + productid).val(finalLoanCollectionSummary);
        displaySumary(productid, "LoanPaid", "LoanCollectionSummary");
        displaySumary(productid, "IntPaid", "InterestCollectionSummary");
        displaySumary(productid, "Total", "TotalCollectionSummary");
    }
    //function calculate(type, id, calcMethod, productid) {
    //    var totalId = 'Total' + id;
    //    var loanPaidId = 'LoanPaid' + id;
    //    var intPaidId = 'IntPaid' + id;
    //    var loandue = 'LoanDue' + id;
    //    var intdue = 'IntDue' + id;
    //    var principalLoan = 'PrincipalLoan' + id;
    //    var loanRepaid = 'LoanRepaid' + id;
    //    if (type == 1) { // Total Installment
    //        var vLoanInstallment = 0;
    //        var vInterestInstallment = 0;
    //        var vPrincipalLOan = $('#' + principalLoan).val();
    //        if (vPrincipalLOan.length == 0)
    //            vPrincipalLOan = "0";
    //        var vloanRepaid = $('#' + loanRepaid).val();
    //        if (vloanRepaid.length == 0)
    //            vloanRepaid = "0";

    //        var total = $('#' + totalId).val();
    //        if (total.length == 0)
    //            total = "0";
    //        var vLoan = $('#' + loandue).val();
    //        if (vLoan.length == 0)
    //            vLoan = "0";
    //        var vInt = $('#' + intdue).val();
    //        if (vInt.length == 0)
    //            vInt = "0";

    //        var vLoanPaid = $('#' + LoanPaid).val();
    //        if (vLoanPaid.length == 0)
    //            vLoanPaid = "0";
    //        var vIntPaid = $('#' + IntPaid).val();
    //        if (vIntPaid.length == 0)
    //            vIntPaid = "0";
           

    //        var vTotalInstall = Number(vLoan) + Number(vInt);
    //        if (vTotalInstall == 0) {
    //            vLoanInstallment = 0;
    //            vInterestInstallment = 0;
    //        }
    //        else {

    //            if (calcMethod == "D") {
    //                if (parseFloat(total) < parseFloat(vLoan)) {
    //                    vLoanInstallment = (parseFloat(vLoan) * parseFloat(total)) / parseFloat(vTotalInstall);
    //                }
    //                else {
    //                    vLoanInstallment = (parseFloat(vLoan) * parseFloat(total)) / parseFloat(vTotalInstall);
    //                }
    //            }
    //            else if (calcMethod == "A") {
    //                if (parseFloat(total) >= parseFloat(vTotalInstall))
    //                {
    //                    vLoanInstallment = (parseFloat(total) -parseFloat(vInt))
    //                }
    //                if (parseFloat(total) <= parseFloat(vTotalInstall)) {
    //                    vLoanInstallment = (parseFloat(total) - parseFloat(vInt))
    //                }
    //            }
    //            else {
    //                vLoanInstallment = (parseFloat(vLoan) * parseFloat(total)) / parseFloat(vTotalInstall);
    //            }
    //        }
    //        // loanPaidId = vLoanInstallment;

    //        if (vTotalInstall == 0) {

    //            vInterestInstallment = 0;
    //        }
    //        else {
    //            if (calcMethod == "D") {
    //                if (parseFloat(total) < parseFloat(vInt)) {
    //                    vInterestInstallment = (parseFloat(vInt) * parseFloat(total)) / parseFloat(vTotalInstall);
    //                    //vInterestInstallment = total;
    //                }
    //                else {
    //                    vInterestInstallment = (parseFloat(vInt) * parseFloat(total)) / parseFloat(vTotalInstall);
    //                }
    //            }
    //            else if (calcMethod == "A") {
    //                if (parseFloat(total) >= parseFloat(vTotalInstall)) {
    //                    vInterestInstallment = parseFloat(vInt)
    //                }
    //                if (parseFloat(total) <= parseFloat(vTotalInstall)) {
    //                    vInterestInstallment = parseFloat(vInt)
    //                }
    //            }
    //            else {
    //                vInterestInstallment = (parseFloat(vInt) * parseFloat(total)) / parseFloat(vTotalInstall);
    //            }
    //        }
    //        //intPaidId = vInterestInstallment;
    //        //$('#' + loanPaidId).val(total/2);
    //        //$('#' + intPaidId).val(total/2);
    //        if (calcMethod != "A")
    //        {
    //            var vLoan = $('#' + loanPaidId).val();
    //            var vLoanBal = Number(vPrincipalLOan) - Number(vloanRepaid)
    //            var calIns = Number(vloanRepaid) + Number(vLoan)
    //            if (calIns >= Number(vPrincipalLOan)) {
    //                vInterestInstallment = Number(Math.round(total)) - (Number(vPrincipalLOan) - Number(vloanRepaid))
    //                vLoanInstallment = Number(vPrincipalLOan) - Number(vloanRepaid)

    //            }
    //        }
    //        else if (calcMethod == "A")
    //        {
    //            var vLoan = $('#' + loanPaidId).val();
    //            var vLoanBal = Number(vPrincipalLOan) - Number(vloanRepaid)
    //            var calIns = Number(vloanRepaid) + Number(vLoan)
    //            if (calIns >= Number(vPrincipalLOan)) {
    //               // vInterestInstallment = Number(Math.round(total)) - (Number(vPrincipalLOan) - Number(vloanRepaid))
    //                vLoanInstallment = Number(total) - Number(vInterestInstallment)

    //            }
    //        }

    //        $('#' + loanPaidId).val(Math.round(vLoanInstallment));
    //        $('#' + intPaidId).val(Math.round(vInterestInstallment));

    //    }
    //    if (type == 2) { // Loan Paid
    //        var vLoanInstallment = 0;
    //        var vInterestInstallment = 0;
    //        var total = $('#' + totalId).val();
    //        var vLoan = $('#' + loanPaidId).val();
    //        var vInt = $('#' + intPaidId).val();
    //        var vTotalInstall = Number(vLoan) + Number(vInt);

    //        $('#' + totalId).val(vTotalInstall);

    //    }
    //    if (type == 3) { // Int Paid
    //        var vLoanInstallment = 0;
    //        var vInterestInstallment = 0;
    //        var total = $('#' + totalId).val();
    //        var vLoan = $('#' + loanPaidId).val();
    //        var vInt = $('#' + intPaidId).val();
    //        var vTotalInstall = Number(vLoan) + Number(vInt);

    //        $('#' + totalId).val(vTotalInstall);

    //    }
        
    //    //$('#LoanCollectionSummary' + productid).val(finalLoanCollectionSummary);
    //    displaySumary(productid, "LoanPaid", "LoanCollectionSummary");
    //    displaySumary(productid, "IntPaid", "InterestCollectionSummary");
    //    displaySumary(productid, "Total", "TotalCollectionSummary");
    //}
    //function validate(id, calcMethod, productid) {
    //    var totalId = 'Total' + id;
    //    var loanPaidId = 'LoanPaid' + id;
    //    var intPaidId = 'IntPaid' + id;
    //    var loandue = 'LoanDue' + id;
    //    var intdue = 'IntDue' + id;
    //    var principalLoan = 'PrincipalLoan' + id;
    //    var loanRepaid = 'LoanRepaid' + id;

    //    var vLoanInstallment = 0;
    //    var vInterestInstallment = 0;
    //    var vPrincipalLOan = $('#' + principalLoan).val();
    //    if (vPrincipalLOan.length == 0)
    //        vPrincipalLOan = "0";
    //    var vloanRepaid = $('#' + loanRepaid).val();
    //    if (vloanRepaid.length == 0)
    //        vloanRepaid = "0";

    //    var total = $('#' + totalId).val();
    //    if (total.length == 0)
    //        total = "0";
    //    var vLoan = $('#' + loandue).val();
    //    if (vLoan.length == 0)
    //        vLoan = "0";
    //    var vInt = $('#' + intdue).val();
    //    if (vInt.length == 0)
    //        vInt = "0";
    //    var vTotalInstall = Number(vLoan) + Number(vInt);

    //    if (vTotalInstall == 0) {
    //        vLoanInstallment = 0;
    //        vInterestInstallment = 0;
    //    }
    //    else {
    //        if (calcMethod == "D")
    //        {

    //            if (parseFloat(total) < parseFloat(vLoan)) {
    //                //vLoanInstallment = 0;
    //                vLoanInstallment = (parseFloat(vLoan) * parseFloat(total)) / parseFloat(vTotalInstall);
    //            }
    //            else
    //            {
    //                vLoanInstallment = (parseFloat(vLoan) * parseFloat(total)) / parseFloat(vTotalInstall);
    //            }
    //        }
    //        else if (calcMethod == "A") {
    //            if (parseFloat(total) >= parseFloat(vTotalInstall)) {
    //                vLoanInstallment = (parseFloat(total) - parseFloat(vInt))
    //            }
    //            if (parseFloat(total) <= parseFloat(vTotalInstall)) {
    //                vLoanInstallment = (parseFloat(total) - parseFloat(vInt))
    //            }
    //        }
    //        else {
    //            vLoanInstallment = (parseFloat(vLoan) * parseFloat(total)) / parseFloat(vTotalInstall);
    //        }
    //    }
    //    // loanPaidId = vLoanInstallment;

    //    if (vTotalInstall == 0) {

    //        vInterestInstallment = 0;
    //    }
    //    else {
    //        if (calcMethod == "D") {
    //            if (parseFloat(total) < parseFloat(vInt)) {
    //                vInterestInstallment = (parseFloat(vInt) * parseFloat(total)) / parseFloat(vTotalInstall);
    //                //vInterestInstallment = total;
    //            }
    //            else {
    //                vInterestInstallment = (parseFloat(vInt) * parseFloat(total)) / parseFloat(vTotalInstall);
    //            }
    //        }
    //        else if (calcMethod == "A") {
    //            if (parseFloat(total) >= parseFloat(vTotalInstall)) {
    //                vInterestInstallment = parseFloat(vInt)
    //            }
    //            if (parseFloat(total) <= parseFloat(vTotalInstall)) {
    //                vInterestInstallment = parseFloat(vInt)
    //            }
    //        }
    //        else {
    //            vInterestInstallment = (parseFloat(vInt) * parseFloat(total)) / parseFloat(vTotalInstall);
    //        }
    //    }
    //    if (calcMethod != "A") {
    //        var vLoan = $('#' + loanPaidId).val();
    //        var vLoanBal = Number(vPrincipalLOan) - Number(vloanRepaid)
    //        var calIns = Number(vloanRepaid) + Number(vLoan)
    //        if (calIns >= Number(vPrincipalLOan)) {
    //            vInterestInstallment = Number(Math.round(total)) - (Number(vPrincipalLOan) - Number(vloanRepaid))
    //            vLoanInstallment = Number(vPrincipalLOan) - Number(vloanRepaid)

    //        }
    //    }
    //    else if (calcMethod == "A") {
    //        var vLoan = $('#' + loanPaidId).val();
    //        var vLoanBal = Number(vPrincipalLOan) - Number(vloanRepaid)
    //        var calIns = Number(vloanRepaid) + Number(vLoan)
    //        if (calIns >= Number(vPrincipalLOan)) {
    //            // vInterestInstallment = Number(Math.round(total)) - (Number(vPrincipalLOan) - Number(vloanRepaid))
    //            vLoanInstallment = Number(total) - Number(vInterestInstallment)

    //        }
    //    }
    //    //var vLoan = $('#' + loanPaidId).val();
    //    //var vLoanBal = Number(vPrincipalLOan) - Number(vloanRepaid)
    //    //var calIns = Number(vloanRepaid) + Number(vLoan)
    //    //if (calIns >= Number(vPrincipalLOan)) {
    //    //    vInterestInstallment = Number(Math.round(total)) - (Number(vPrincipalLOan) - Number(vloanRepaid))
    //    //    vLoanInstallment = Number(vPrincipalLOan) - Number(vloanRepaid)
    //    //    $('#' + loanPaidId).val(Math.round(vLoanInstallment));
    //    //}

    //    $('#' + loanPaidId).val(Math.round(vLoanInstallment));



    //    calculate(2, id, calcMethod, productid);
    //}
    function displaySumary(productId, initial, summaryfield) {
        var total = 0;
        var $allInputs = $('input[LoanPaidProduct="' + initial + productId + '"]');
        $allInputs.each(function () {
            var value = $(this).val();
            total = total + parseFloat(value);
        });
        $('#' + summaryfield + productId).val(total);
    }
    function checkLoanInstallment(loanInstallmentId) {
        //alert(loanInstallmentId);
    }
    function checkInterestInstallment(loanInstallmentId) {
        //alert(loanInstallmentId);
    }

    function SaveAdnReload() {

        var allCollection = new Array();
        var $allInputs = $('input[type="text"]');
        $allInputs.each(function () {
            var value = $(this).val();
            var id = $(this).attr('id');
            var obj = new Object();
            obj.Key = id;
            obj.Value = value;
            allCollection[allCollection.length] = obj;
        });


        var $allId = $('input[type="hidden"]');
        var allIds = new Array();

        $allId.each(function () {
            var value = $(this).val();
            allIds[allIds.length] = value;
        });

        var allTrx = new Object();
        allTrx.allTrx = allCollection;
        allTrx.allLoanTrxId = allIds;

        var json = JSON.stringify(allTrx);

        $("#loading").show();
        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("SaveLoanTransaction", "DailyLoanCollection", "http")',
            type: "POST",
            dataType: 'json',
            async: true,
            data: json,

            success: function (resp) {
                $("#loading").hide();
                var result = resp.Result;
                var msg = resp.Message;
                var css = "failed";
                if (result == "OK")
                    css = "success";
                $("#dvMessage").attr('class', css);
                $("#dvMessage").html(msg);
                $("#dvMessage").show();


                $("#dvMessageDown").attr('class', css);
                $("#dvMessageDown").html(msg);
                $("#dvMessageDown").show();
                if (result == "OK") {
                    $("#dvMessage").toggle('fade', 1500);
                    $("#dvMessageDown").toggle('fade', 1500);
                }
            },
            error: function (err) {
                $("#loading").hide();
                var msg = err.responseText;
                var css = "failed";
                $("#dvMessage").attr('class', css);
                $("#dvMessage").html(msg);
                $("#dvMessage").show();

                $("#dvMessageDown").attr('class', css);
                $("#dvMessageDown").html(msg);
                $("#dvMessageDown").show();
            }
        });
    }
</script>

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()*@


@*<div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Center", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.CenterID, center, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CenterID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-8">
            &nbsp;
        </div>
    </div>
    <div>
        Filter By:&nbsp; <select id="filterColumn">
            <option value="">View All</option>
            <option value="MemberCode">Member Code</option>
            <option value="ProductCode">Product Code</option>
        </select>
        <input type="text" class="search" id="filterValue" placeholder="Type Search Text" />
        Sort By:&nbsp; <select id="sortColumn">
            <option value="MemberCode">Member Code</option>
            <option value="MemberName">Member Name</option>
        </select>
        <select id="sortOrder">
            <option value="ASC">Ascending</option>
            <option value="DESC">Descending</option>
        </select>
        <input type="button" id="btnSearch" value="Search" class="btn btn-primary" onclick="reloadGrid();" />
    </div>*@
<div class="row">
    <div class="col-md-3">
        <div class="form-group">
            @Html.Label("Samity", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.CenterID, center, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CenterID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label" })
            @*@Html.DropDownListFor(model => model.ProductID, product, new { @class = "form-control" })*@
            @Html.DropDownListFor(model => model.ProductID, product, new { @class = "form-control", onchange = "SetProductid(this.value);" })
            @Html.Hidden("hfProdId")
            @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            @Html.Label("Member", htmlAttributes: new { @class = "control-label" })

            @Html.TextBox("memberAutoComplete", "", new { @class = "form-control" })
            @Html.HiddenFor(model => model.MemberID)
            @Html.TextBoxFor(model => model.MemberID, new { @style = "display:none" })
            @Html.ValidationMessageFor(model => model.MemberID, "", new { @class = "text-danger" })
        </div>
    </div>
        <div class="col-md-1" style="padding-top:22px; padding-left:0;" align="left">
            <input type="button" id="btnSearch" value="Search" class="btn btn-primary" onclick="reloadGrid();" />
        </div>
    </div>

@*<div>
        Filter By:&nbsp; <select id="selectType">
            <option value="name">Center Code</option>
            <option value="code">Member Code</option>
        </select>
        <input type="text" class="search" placeholder="Type Search Text" />

    </div>*@
<div id="grid"></div>


<div class="row">

    <div class="col-md-4" align="left">
        <input type="button" value="Save" class="btn btn-primary" onclick="SaveAdnReload();" />
        &nbsp;
        <input id="btnProduct" type="submit" value="Collection Info" class="btn btn-primary" />
    </div>
    <div class="col-md-8" style="padding-right:20px;" align="right">
        <input id="btnPost" type="submit" value="50%" class="btn btn-primary" />
    </div>

</div>





@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jtable")
    @Scripts.Render("~/bundles/searchable")

}
