@model gBanker.Web.ViewModels.SSRSReportViewModel
@{
    ViewBag.Title = "DisbursementRealizationOutstanding";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

<link href="~/Content/Bootstrap-TagInputs/bootstrap-tagsinput.css" rel="stylesheet" />
<script src="~/Content/Bootstrap-TagInputs/bootstrap-tagsinput.min.js"></script>
<script src="~/Content/js/KendoJs/kendo.all.min.js"></script>
<script src="~/Content/js/KendoJs/kendo.aspnetmvc.min.js"></script>
<!-- kendo csss -->
<link href="~/Content/css/kendo/kendo.common.min.css" rel="stylesheet" />
<link href="~/Content/css/kendo/kendo.bootstrap.min.css" rel="stylesheet" />
<!-- end kendo csss -->
<!-- kendo JS -->
<script src="~/Content/js/KendoJs/kendo.all.min.js"></script>
<script src="~/Content/js/KendoJs/kendo.aspnetmvc.min.js"></script>
<!-- kendo Js -->

<script type="text/javascript">
    var checkedIds = {};
    $(document).ready(function () {

        var officeIds = [];
        var officeIdInString = "";

         $('#grid').on('click', 'table tbody tr input:checkbox', function () {
            var totalCheckBox=$(this).closest('table').find('tr > td input:checkbox').length;
            var totalCheckedItems = $(this).closest('table').find('tr > td input:checkbox:checked').length;
            var officeId = $(this).val();

             if (totalCheckBox === totalCheckedItems) {
                 officeIds = [];
                $('#grid').find('#header-chb').prop('checked', true);
                $('#grid').find('.chk-office').each(function (index) {
                    var officeId = $(this).val();
                    if (officeId > 0) {
                        officeIds.push(officeId);
                    }
                });
             } else {
                officeIds = [];
                $('#grid').find('#header-chb').prop('checked', false);
                $('#grid').find('.chk-office').each(function (index) {
                    if ($(this).is(":checked")) {
                        var officeId = $(this).val();
                        if (officeId > 0) {
                            officeIds.push(officeId);
                        }
                        officeIds = $(officeIds).not([officeIds]).get();
                    }
                });
             }

             console.log(officeIds);

             officeIdInString = "";

            jQuery.grep(officeIds, function(officeId) {
                return officeIdInString = officeIdInString + '_' + officeId;
            });

            $("#officeIdInString").val(officeIdInString);
         });

    $('#grid').on('click', 'table th input:checkbox', function () {
        if ($(this).is(":checked")) {
            officeIds = [];
            $('#grid').find('.chk-office').prop('checked', true);
            $('#grid').find('.chk-office').each(function (index) {
                var officeId = $(this).val();
                if (officeId > 0) {
                    officeIds.push(officeId);
                }
            });
        }
        else {
            $('#grid').find('.chk-office').prop('checked', false);
            officeIds = [];
        }
        officeIdInString = "";
        jQuery.grep(officeIds, function (officeId) {
            return officeIdInString = officeIdInString + '_' + officeId;
        });
        $("#officeIdInString").val(officeIdInString);
    });

        $("#txtDateFrom").datepicker(
            {
                dateFormat: "dd-M-yy",
                showAnim: "scale",
                changeMonth: true,
                changeYear: true,
                yearRange: "1920:2100"
            });
        $("#txtDateFrom").datepicker(
            'setDate', new Date());

        $("#txtDateTo").datepicker(
            {
                dateFormat: "dd-M-yy",
                showAnim: "scale",
                changeMonth: true,
                changeYear: true,
                yearRange: "1920:2100"
            });
        $("#txtDateTo").datepicker(
            'setDate', new Date());

        $("#PeriodType").change(function () {
            var periodType = $("#PeriodType").val();
            if (periodType == 2 || periodType == 4) {
                $("#hideDateFrom").show();
            } else {
                $("#hideDateFrom").hide();
            }
        });
        $("#FilterBy").change(function () {
            var FilterBy = $("#FilterBy").val();
            if (FilterBy != "") {
                $("#grid").show();
                GetFilteredOfficeList();
            }
            else
                $("#grid").hide();
        });


        $("#btnView").click(function (e) {
            debugger;
            var reportType = $("#ReportType").val();
            var product = $("#Product").val();
            var periodType = $("#PeriodType").val();
            var from_date = "";
            var to_date = "";

            if (periodType == 1 || periodType == 3) {
                to_date = $("#txtDateTo").val();
                from_date = to_date;
            }
            if (periodType == 2 || periodType == 4) {
                from_date = $("#txtDateFrom").val();
                to_date = $("#txtDateTo").val();
            }
            var And_Condition = "";
            var AllOffice = 0;
            var AccLevel = 3;
            var url = '/SSRSReport/GenerateDisbursementRealizationOutstanding?reportType=' + reportType + '&from_date=' + from_date + '&to_date=' + to_date + '&AccLevel=' + AccLevel + '&And_Condition=' + And_Condition + '&AllOffice=' + AllOffice + '&PeriodType=' + periodType + '&officeid_Multi=' + $("#officeIdInString").val() + '&product=' + product;
            window.open(url, '_blank');
        });

        $("#btnSearch").click(function () {
            debugger;
            var values = $("input[name='officeCode[]']")
                .map(function ()
                {
                    return $(this).val();
                }).get();
            GetFilteredOfficeList(values);
        });

    });

    function GetFilteredOfficeList(values) {
            var filterByOffice = $("#FilterBy").val();
            var dataSource = new kendo.data.DataSource({
                type: "aspnetmvc-ajax",
                pageSize: 350,
                serverPaging: true,   // enable server paging
                serverSorting: true,
                serverFiltering: true,
                transport: {
                    read: {
                        url: '@Url.Action("GetFilteredOfficeList", "SSRSReport", "http")',
                        dataType: "json",
                        data: { filterByOffice: filterByOffice, SearchOffice: values },
                    }
                },
                schema: {
                    data: "data", // records are returned in the "data" field of the response
                    total: "total", // total number of records is in the "total" field of the response
                },
                pageSize: 50000
            });
            $("#grid").kendoGrid({
                dataSource: dataSource,
                height: 350,
                reorderable: true,
                filterable: true,
                sortable: true,
                //selectable: "multiple",
                resizable: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                columns: [
                {
                    title: 'Select All',
                    headerTemplate: "<input type='checkbox' id='header-chb' class='k-checkbox header-checkbox'><label class='k-checkbox-label' for='header-chb'></label>",
                        template: function (dataItem) {
                               return "<input type='checkbox' class='k-checkbox row-checkbox chk-office' value='" + dataItem.OfficeID + "' id='" + dataItem.OfficeID + "' ><label class='k-checkbox-label' for='" + dataItem.OfficeID + "'></label>"
                       },
                    width: "5%"
                },
                {
                    field: "rowSl",
                    hidden: true
                },
                {
                    field: "OfficeID",
                    hidden: true,
                    template: function (dataItem) {
                           rrAllRequiredData = '<input type="hidden" id="officeID' + dataItem.OfficeID + '" value="' + dataItem.OfficeID + '" />';
                           return rrAllRequiredData;
                       }
                    },
                {
                    field: "OfficeCode",
                    hidden: true,
                    template: function (dataItem) {
                        rrAllRequiredData = '<input type="hidden" id="OfficeCode' + dataItem.OfficeCode + '" value="' + dataItem.OfficeCode + '" />';
                        return rrAllRequiredData;
                    }
                },
                {
                    field: "OfficeName",
                    title: "Office Name",
                    filterable: true,
                    width: "30%",
                },
                ],
                dataBound: function (e) {

                var columns = e.sender.columns;
                var dataItems = e.sender.dataSource.view();
                for (var j = 0; j < dataItems.length; j++) {
                    var IsChecked = dataItems[j].get("IsChecked");
                    if (IsChecked === 1) {
                        var row = e.sender.tbody.find("[data-uid='" + dataItems[j].uid + "']");
                        var checked = true,
                          row = row.closest("tr"),
                          grid = $("#grid").data("kendoGrid"),
                          dataItem = grid.dataItem(row);

                        checkedIds[dataItem.id] = checked;
                        if (checked) {
                            row.addClass("k-state-selected");
                        } else {
                            row.removeClass("k-state-selected");
                        }
                        var checkedAmount = countCheckedAmount();
                        $("#totalCheckedAmt").html(checkedAmount)
                    } else {

                    }
                }
            }
            }).data("kendoGrid");
    }
     function onDataBound(e) {
        var view = this.dataSource.view();
        for (var i = 0; i < view.length; i++) {
            if (checkedIds[view[i].id]) {
                this.tbody.find("tr[data-uid='" + view[i].uid + "']")
                  .addClass("k-state-selected")
                  .find(".checkbox")
                  .attr("checked", "checked");
            }
        }
    }
    //on click of the checkbox:
    function selectRow() {
        debugger;
        var checked = this.checked,
            row = $(this).closest("tr"),
            grid = $("#grid").data("kendoGrid"),
            dataItem = grid.dataItem(row);

        checkedIds[dataItem.id] = checked;

        alert(checkedIds[dataItem.id]);

        if (checked) {
            //-select the row
            row.addClass("k-state-selected k-state-selected-no-color");
        } else {
            //-remove selection
            row.removeClass("k-state-selected k-state-selected-no-color");
        }
    }
</script>


<h2>Disbursement Realization Outstanding</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("officeIdInString")
    <div class="">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Report Type", new { @class = "control-label" })
                    @Html.DropDownList("ReportTypeList", null, new { @ID = "ReportType", @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Product", new { @class = "control-label" })
                    @Html.DropDownList("ProductList", null, new { @ID = "Product", @class = "form-control" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Period Type", new { @class = "control-label" })
                    @Html.DropDownList("PeriodTypeList", null, new { @ID = "PeriodType", @class = "form-control" })
                </div>
            </div>
        </div>   
    <div class="row">
        <div class="col-md-4" style="display:none;" id="hideDateFrom">
            <div class="form-group">
                @Html.Label("Date From", new { @class = "control-label" })
                @Html.TextBox(" ", ViewData["DateFrom"].ToString(), new { @ID = "txtDateFrom", @class = "form-control" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Date To", new { @class = "control-label" })
                @Html.TextBox(" ", ViewData["DateTo"].ToString(), new { @ID = "txtDateTo", @class = "form-control" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Filter By", new { @class = "control-label" })
                @Html.DropDownList("FilterByList", null, new { @ID = "FilterBy", @class = "form-control" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Search Office Code", new { @class = "control-label" })
                <input type="text" name="officeCode[]" value="" id="Search" data-role="tagsinput" placeholder="Write 4 digit office code">
            </div>
        </div>
        <div class="col-md-4">
            <div class="row">
                <div class="col-md-6">
                    <input type="button" style="margin-top:25px;" value="Search" class="btn btn-primary" id="btnSearch" />
                </div>
            </div>
        </div>
    </div>
    </div>
    <div> <div class="col-md-6" id="grid"></div></div>
    <br />
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group form-action">
                <input type="button" value="View" class="btn btn-primary" id="btnView" />
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    <link href="~/Assets/plugins/tagsinput.css" rel="stylesheet" />
    <script src="~/Assets/plugins/tagsinput.js"></script>
}



