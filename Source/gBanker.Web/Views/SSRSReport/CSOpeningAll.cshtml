@{
    ViewBag.Title = "Contractual Savings All Information";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}
<script type="text/javascript">
    $("#dvRefEmp").hide()
    function GetHO(ddlVal) {
        var ddlHO = $("#ddlHO");
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetHOList", "AccLedgerReport", "http")',
            data: {},
            dataType: 'json',
            async: true,
            success: function (data) {
                ddlHO.html('');
                $.each(data, function (id, option) {
                    ddlHO.append($('<option></option>').val(option.Value).html(option.Text));
                });
                if (ddlVal != null) {
                    $('#ddlHO').val(ddlVal);
                }
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }
    function GetZone(HO_val, ddlVal) {
        var ddlZone = $("#ddlZone");
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetZoneList", "AccBalanceSheet", "http")',
            data: { HO_val: HO_val },
            dataType: 'json',
            async: true,
            success: function (data) {
                ddlZone.html('');
                $.each(data, function (id, option) {
                    ddlZone.append($('<option></option>').val(option.Value).html(option.Text));
                });
                if (ddlVal != null) {
                    $('#ddlZone').val(ddlVal);
                }
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }

    function GetArea(HO_val, zone_val, ddlVal) {
        var ddlArea = $("#ddlArea");
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetAreaList", "AccBalanceSheet", "http")',
            data: { HO_val: HO_val, zone_val: zone_val },
            dataType: 'json',
            async: true,
            success: function (data) {
                ddlArea.html('');
                $.each(data, function (id, option) {
                    ddlArea.append($('<option></option>').val(option.Value).html(option.Text));
                });

                if (ddlVal != null) {
                    $('#ddlArea').val(ddlVal);

                }
                else {
                    $("#ddlArea").prop('selectedIndex', 0);
                }
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }

    function GetOffice(HO_val, zone_val, area_val, ddlVal) {
        var ddlOffice = $("#ddlOffice");
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetOfficeList", "AccBalanceSheet", "http")',
            data: { HO_val: HO_val, zone_val: zone_val, area_val: area_val },
            dataType: 'json',
            async: true,
            success: function (data) {
                ddlOffice.html('');
                $.each(data, function (id, option) {
                    ddlOffice.append($('<option></option>').val(option.Value).html(option.Text));
                });
                if (ddlVal != null) {
                    $('#ddlOffice').val(ddlVal);
                }
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }


    $.ajax({
        type: 'GET',
        contentType: "application/json; charset=utf-8",
        url: '@Url.Action("GetgetOrganizerList","SSRSReport", "http")',
        //data: { Member_id: Member_id },
        dataType: 'json',
        async: true,
        success: function (data) {
            $("#loading").hide();
            $("#ddlTypeData").html('');
            $.each(data, function (id, option) {
                $("#ddlTypeData").append($('<option></option>').val(option.Value).html(option.Text));
            });
        },
        error: function (request, status, error) {
            $("#loading").hide();
            alert(request.statusText + "/" + request.statusText + "/" + error);
        }
    });


    function CheckOffcLevel() {
        var offcLevel = $('#lblOffcLevel').html();
        var firstLevel = $('#lblFirstLevel').html();
        var secondLevel = $('#lblSecondLevel').html();
        var thirdLevel = $('#lblThirdLevel').html();
        var fourthLevel = $('#lblFourthLevel').html();
        //alert(offcLevel);
        if (offcLevel == 1) {
            GetHO(firstLevel);
            GetZone(firstLevel, secondLevel);
            GetArea(firstLevel, secondLevel, thirdLevel);
            GetOffice(firstLevel, secondLevel, thirdLevel, fourthLevel);
            $("#ddlHO").prop("disabled", true);
        }
        if (offcLevel == 2) {
            GetHO(firstLevel);
            GetZone(firstLevel, secondLevel);
            // GetArea(firstLevel, secondLevel, thirdLevel);
            GetArea(firstLevel, secondLevel, thirdLevel);
            GetOffice(firstLevel, secondLevel, thirdLevel, fourthLevel);
            $("#ddlHO").prop("disabled", true);
            $("#ddlZone").prop("disabled", true);
        }
        if (offcLevel == 3) {
            GetHO(firstLevel);
            GetZone(firstLevel, secondLevel);
            GetArea(firstLevel, secondLevel, thirdLevel);
            GetOffice(firstLevel, secondLevel, thirdLevel, fourthLevel);
            $("#ddlHO").prop("disabled", true);
            $("#ddlZone").prop("disabled", true);
            $("#ddlArea").prop("disabled", true);
        }
        if (offcLevel == 4) {
            GetHO(firstLevel);
            GetZone(firstLevel, secondLevel);
            GetArea(firstLevel, secondLevel, thirdLevel);
            GetOffice(firstLevel, secondLevel, thirdLevel, fourthLevel);
            $("#ddlHO").prop("disabled", true);
            $("#ddlZone").prop("disabled", true);
            $("#ddlArea").prop("disabled", true);
            $("#ddlOffice").prop("disabled", true);
        }

    }
    $(document).ready(function () {
        $("#dvRefEmp").hide()
        $("#ddlQType").change(function () {
            var ddlQType = $('#ddlQType').val();
            if (ddlQType == 2) {
                $("#dvRefEmp").hide()
            } else if (ddlQType == 3) {
                $("#dvRefEmp").show()
            } else {
                $("#dvRefEmp").hide()
            }
        });

        CheckOffcLevel();
        $("#loading").hide();

        $("#txtFromDt,#txtToDt").datepicker(
        {
            dateFormat: "dd-M-yy",
            showAnim: "scale",
            changeMonth: true,
            changeYear: true,
            yearRange: "1920:2100"

        });

        $("#txtFromDt,#txtToDt").datepicker(
        'setDate', new Date());


        $("#ddlHO").change(function () {
            var HO_val = $("#ddlHO").val();
            if (HO_val > 0) {
                var ddlZone = $("#ddlZone");
                $.ajax({
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetZoneList", "AccTrialBalance", "http")',
                    data: { HO_val: HO_val },
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        ddlZone.html('');
                        $.each(data, function (id, option) {
                            ddlZone.append($('<option></option>').val(option.Value).html(option.Text));
                        });
                    },
                    error: function (request, status, error) {
                        alert(request.statusText + "/" + request.statusText + "/" + error);
                    }
                });
            }
            else {
                $("#ddlZone").empty();
                $("#ddlArea").empty();
                $("#ddlOffice").empty();
            }
        });
        $("#ddlZone").change(function () {
            var HO_val = $("#ddlHO").val();
            var zone_val = $("#ddlZone").val();
            if (HO_val > 0 && zone_val > 0) {
                var ddlArea = $("#ddlArea");
                $.ajax({
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetAreaList", "AccTrialBalance", "http")',
                    data: { HO_val: HO_val, zone_val: zone_val },
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        ddlArea.html('');
                        $.each(data, function (id, option) {
                            ddlArea.append($('<option></option>').val(option.Value).html(option.Text));
                        });
                        $("#ddlOffice").empty();
                    },
                    error: function (request, status, error) {
                        alert(request.statusText + "/" + request.statusText + "/" + error);
                    }
                });
            }
            else {
                $("#ddlArea").empty();
                $("#ddlOffice").empty();
            }
        });
        $("#ddlArea").change(function () {
            var HO_val = $("#ddlHO").val();
            var zone_val = $("#ddlZone").val();
            var area_val = $("#ddlArea").val();
            if (HO_val > 0 && zone_val > 0) {
                var ddlOffice = $("#ddlOffice");
                $.ajax({
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetOfficeList", "AccTrialBalance", "http")',
                    data: { HO_val: HO_val, zone_val: zone_val, area_val: area_val },
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        ddlOffice.html('');
                        $.each(data, function (id, option) {
                            ddlOffice.append($('<option></option>').val(option.Value).html(option.Text));
                        });
                    },
                    error: function (request, status, error) {
                        alert(request.statusText + "/" + request.statusText + "/" + error);
                    }
                });
            }
            else {
                $("#ddlOffice").empty();
            }
        });

        $("#txtAccLevel").change(function () {
            var accLevel = $("#txtAccLevel").val();
            if (accLevel > 0) {
                var ddlAccName = $("#ddlAccName");
                $.ajax({
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetAccName", "SSRSReport", "http")',
                    data: { accLevel: accLevel },
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        debugger;
                        ddlAccName.html('');
                        $.each(data, function (id, option) {
                            ddlAccName.append($('<option></option>').val(option.Value).html(option.Text));
                        });
                    },
                    error: function (request, status, error) {
                        alert(request.statusText + "/" + request.statusText + "/" + error);
                    }
                });
            }
            else {
                $("#ddlAccName").empty();
            }
        });

        $("#EmployeeAutoComplete").blur(function () {
            var member = $("#EmployeeAutoComplete").val();
            $.ajax({
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("GetEmployeeList", "SavingsAccountOpening", "http")',
                type: "GET",
                dataType: 'json',
                async: true,
                data: { memberid: member, centerId: $("#CenterID").val() },
                minLength: 1,
                success: function (data) {
                    // alert(data.length);
                    if (data.length == 1) {
                        $("#EmployeeAutoComplete").val(data[0].EmployeeName);
                        $("#Ref_EmployeeID").val(data[0].EmployeeID);
                    }
                    else if (data.length == 0) {
                        // alert("No member found.");
                        $("#Ref_EmployeeID").val("");
                    }
                    else {
                        //  alert("More than one member found with the given Member code.");
                        $("#Ref_EmployeeID").val("");
                    }

                }
            });
        });
        $("#EmployeeAutoComplete").autocomplete({
            source: function (request, response) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetEmployeeList", "SavingsAccountOpening", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { memberid: request.term, centerId: $("#CenterID").val() },
                    minLength: 1,
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.Ref_EmployeeID,
                                label: item.EmployeeName
                            };
                            //response(data);
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            },
            focus: function (event, ui) {
                $("#EmployeeAutoComplete").val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                $("#EmployeeAutoComplete").val(ui.item.label);
                $("#Ref_EmployeeID").val(ui.item.value);
                return false;
            },
            change: function (event, ui) {
                $("#EmployeeAutoComplete").val(ui.item.label);
                $("#Ref_EmployeeID").val(ui.item.value);
                return false;
            }
        });
        $("#btnView").click(function (e) {
            debugger;
            if ($("#ddlHO").val() > 0) {
                var office_id;
                if ($("#ddlZone").val() > 0) {
                    if ($("#ddlArea").val() > 0) {
                        if ($("#ddlOffice").val() > 0) {
                            office_id = $("#ddlOffice").val();
                        }
                        else {
                            office_id = $("#ddlArea").val();
                        }
                    }
                    else {
                        office_id = $("#ddlZone").val();
                    }
                }
                else {
                    office_id = $("#ddlHO").val();
                }


                var from_date = $("#txtFromDt").val();
                var qType = $("#ddlQType").val();
                // if (qType == 3) {
                //    if ($("#ddlEmployee").val())
                //        data = $("#ddlEmployee").val();
                //    else return;
                //}


                var url = '/SSRSReport/ReportLedger?pg=csOpening&office_id=' + office_id
                    + '&fromDate=' + from_date + "&toDate=" + $("#txtToDt").val() +
                    '&qType=' + ($("#ddlQType").val() ? $("#ddlQType").val() : 2) +
                    '&data=' + (($("#ddlQType").val() ? $("#ddlQType").val() : 2) == 3 ? $("#Ref_EmployeeID").val() : "");

                    window.open(url, '_blank');
            }
        });
    });
</script>
<h2 class="page-title">
    Contractual Savings All Information 
</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="">
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.Label("Head Office", new { @class = "control-label" })
                @Html.DropDownList("HOList", null, new { @ID = "ddlHO", @class = "form-control" })
                @Html.Label(ViewData["OfficeLevel"].ToString(), new { @ID = "lblOffcLevel", style = "display:none;" })
                @Html.Label(ViewData["FirstLevel"].ToString(), new { @ID = "lblFirstLevel", style = "display:none;" })
                @Html.Label(ViewData["SecondLevel"].ToString(), new { @ID = "lblSecondLevel", style = "display:none;" })
                @Html.Label(ViewData["ThirdLevel"].ToString(), new { @ID = "lblThirdLevel", style = "display:none;" })
                @Html.Label(ViewData["FourthLevel"].ToString(), new { @ID = "lblFourthLevel", style = "display:none;" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.Label("Zone Office", new { @class = "control-label" })
                @Html.DropDownList("ZoneList", null, new { @ID = "ddlZone", @class = "form-control" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.Label("Area Office", new { @class = "control-label" })
                @Html.DropDownList("AreaList", null, new { @ID = "ddlArea", @class = "form-control" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.Label("Office", new { @class = "control-label" })
                @Html.DropDownList("OfficeList", null, new { @ID = "ddlOffice", @class = "form-control" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.Label("Date From", new { @class = "control-label" })
                @Html.TextBox(" ", ViewData["TrxDate"].ToString(), new { @ID = "txtFromDt", @class = "form-control" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.Label("Date To", new { @class = "control-label" })
                @Html.TextBox(" ", ViewData["TrxDate"].ToString(), new { @ID = "txtToDt", @class = "form-control" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.Label("Report", new { @class = "control-label" })
                @Html.DropDownList("QTypeList", null, new { @ID = "ddlQType", @class = "form-control" })

            </div>
        </div>
    </div>
    <div class="row" id="dvRefEmp">
        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Ref_Employee", htmlAttributes: new { @class = "control-label" })

                @Html.TextBox("EmployeeAutoComplete", "", new { @class = "form-control" })
                <input type="hidden" id="Ref_EmployeeID" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group form-action">
                <input type="button" value="View" class="btn btn-primary" id="btnView" />
            </div>
        </div>
    </div>
</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
}
